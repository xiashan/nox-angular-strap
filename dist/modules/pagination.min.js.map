{"version":3,"sources":["modules/pagination.js"],"names":["angular","module","provider","controller","this","calculateTotalPages","pageClass","totalPages","pagesLength","Math","itemsPerPage","makePage","number","text","active","isActive","max","getPages","currentPage","pages","i","push","offset","p","half","ceil","$get","$pagination","defaults","scope","restrict","require","directive","templateUrl","element","link","postLink","ngModelCtrl","replace","bsPaginationCtrl","attr","template","attrs","controllers","isDefined","key","options","charAt","bsKey","$eval","$observe","newValue","totalItems","$render","oldValue","preventDefault","page","selectPage","evt","onChange","target","blur","noPrevious","isFunction","noNext","selectPrevious","selectNext"],"mappings":"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","file":"modules/pagination.min.js","sourcesContent":["'use strict';\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n"],"sourceRoot":"/source/"}