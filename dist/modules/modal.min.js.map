{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","zIndex","$get","forEach","requestAnimationFrame","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","config","$modal","scope","$emit","options","prefixEvent","isDefined","onShow","isFunction","leaveAnimateCallback","findElement","animation","removeClass","prefixClass","onHide","length","$isShown","unbindBackdropEvents","modalElement","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","focus","evt","preventDefault","modalScope","$destroy","setScrollBar","scrollDiv","append","scrollbarWidth","offsetWidth","fullWindowWidth","documentElementRect","documentElement","bodyIsOverflowing","document","clientWidth","window","innerWidth","resetScrollBar","getBoundingClientRect","right","Math","abs","left","body","parseInt","backdropBaseZindex","compile","$scope","$new","$rootScope","id","$id","attr","key","$show","$sce","trustAsHtml","$$postDigest","hide","toggle","init","compileData","promise","data","destroy","destroyModalElement","parent","after","isElement","z-index","$element","link","clonedElement","css","onBeforeShow","display","defaultPrevented","addClass","customClass","$animate","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","version","leave","onBeforeHide","unbindKeyboardEvents","which","directive","$root","$$phase","$digest","restrict","query","querySelectorAll","lg","sm","$window","setTimeout","$options","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","extend","bsModal","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n"],"sourceRoot":"/source/"}