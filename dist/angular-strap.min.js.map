{"version":3,"sources":["angular-strap.js","tooltip/tooltip.js","helpers/compiler.js","dropdown/dropdown.js","timepicker/timepicker.js","tab/tab.js","sort/sort.js","select/select.js","rangedatepicker/rangedatepicker.js","popover/popover.js","pagination/pagination.js","modal/modal.js","helpers/raf.js","helpers/parse-options.js","helpers/dimensions.js","helpers/debounce.js","helpers/date-parser.js","helpers/date-formatter.js","datetimepicker/datetimepicker.js","datepicker/datepicker.js","alert/alert.js","module.js"],"names":["prefixClass","undefined","templateUrl","options","cache","$templateCache","then","element","res","fetchTemplate","template","fetchPromises","module","$http","get","defaults","animation","data","this","compile","controller","console","controllerAs","resolve","copy","locals","bindToController","angular","forEach","value","isString","$injector","key","invoke","transformTemplate","identity","extend","$template","when","$q","all","templateEl","Error","findElement","contentTemplate","templates","contentEl","removeAttr","html","replace","next","remove","outerHTML","link","scope","trim","contents","linkFn","invokeCtrl","children","instance","ctrl","isObject","arguments","apply","bsCompilerService","$inject","target","provider","placement","titleTemplate","trigger","keyboard","show","title","type","delay","autoClose","bsEnabled","mouseDownPreventDefault","mouseDownStopPropagation","viewport","selector","padding","TooltipFactory","$get","promise","$tooltip","$bsCompiler","split","clearTimeout","hoverState","prefixEvent","hide","isFunction","onShow","leaveAnimateCallback","$emit","destroyTipElement","onHide","_tipToHide","evt","preventDefault","triggers","nodeName","on","isTouch","toggle","enter","unbindTriggerEvents","length","$onFocusElementMouseDown","off","i","bindKeyboardEvents","tipElement","$onKeyUp","unbindKeyboardEvents","_autoCloseEventsBinded","bindAutoCloseEvents","$timeout","$body","unbindAutoCloseEvents","stopEventPropagation","event","getPosition","$element","elRect","getBoundingClientRect","rect","p","width","height","top","left","dimensions","offset","el","scroll","outerDims","isBody","document","documentElement","scrollTop","body","prop","clientWidth","innerHeight","position","actualWidth","actualHeight","marginLeft","isNaN","setOffset","using","parseInt","props","css","right","marginTop","tip","offsetHeight","getViewportAdjustedDelta","delta","offsetWidth","isVertical","arrowDelta","replaceArrow","arrowOffsetPosition","viewportDimensions","$viewport","topEdgeOffset","bottomEdgeOffset","viewportPadding","test","leftEdgeOffset","rightEdgeOffset","dimension","isHorizontal","$arrow","timeout","$isShown","tipScope","$destroy","$$phase","$options","config","$promise","$scope","$new","$rootScope","toLowerCase","$id","attr","map","parseFloat","$sce","trustAsHtml","$setEnabled","$$postDigest","id","$hide","setEnabled","isEnabled","compileData","tipContainer","init","container","bindTriggerEvents","isElement","destroy","focus","isDefined","onBeforeShow","after","parent","lastChild","display","visibility","clonedElement","addClass","safeDigest","version","prepend","$$rAF","$applyPlacement","$animate","enterAnimateCallback","_blur","leave","onBeforeHide","autoPlace","autoToken","elementPosition","tipWidth","tipHeight","viewportPosition","originalPlacement","removeClass","tipPosition","getCalculatedOffset","applyPlacement","blur","stopPropagation","directive","$root","$digest","restrict","query","querySelectorAll","isNative","tooltip","transclusion","falseValueRegExp","$eval","bsKey","dataTarget","slice","hasOwnProperty","oldValue","$observe","newValue","bsTooltip","bsShow","$watch","match","setViewport","$on","useNative","timeType","timeFormat","timezone","modelTimeFormat","autoclose","minTime","maxTime","Infinity","hourStep","minuteStep","secondStep","roundDisplay","iconUp","iconDown","arrowBehavior","$timepicker","timepickerFactory","formatDate","format","viewDate","hour","startDate","getHours","meridian","coeff","selRange","select","end","start","setSelectionRange","isUndefined","collapse","selectionStart","moveStart","selectionEnd","moveEnd","focusElement","_init","parentScope","floorMinutes","time","floor","lang","selectedIndex","date","defaultDate","second","getSeconds","millisecond","getMilliseconds","$dateValue","hoursFormat","$dateFormatter","timeSeparator","minute","minutesFormat","secondsFormat","showSeconds","$iconUp","index","$moveIndex","$switchMeridian","switchMeridian","isDate","getMinutes","getTime","$build","$isBuilt","$render","keep","Date","setHours","setMinutes","setSeconds","$setViewValue","midIndex","hours","push","disabled","label","selected","minutes","$date","seconds","rows","$isDisabled","showAM","$isSelected","isAM","selectedTime","$arrowAction","$setTimeByStep","newDate","targetDate","$onMouseDown","targetEl","triggerHandler","$onKeyDown","keyCode","hoursLength","minutesLength","sepLength","lateralMove","count","selectRange","incr","isSeconds","isMeridian","secondsLength","createSelection","createTextRange","_destroy","_show","_hide","require","$window","navigator","userAgent","isMaxValid","isValid","parsedTime","isMinValid","setFullYear","$setValidity","$parsers","unshift","viewValue","getTimeFormattedString","timepicker","dateParser","$dateParser","validateAgainstMinMaxTime","ngModel","update","timezoneOffsetAdjust","$formatters","modelValue","NaN","parse","self","navClass","activeClass","$activeClass","$panes","$activePaneChangeListeners","$push","pane","$active","$attrs","$navClass","$remove","active","activeIndex","indexOf","splice","$setActive","name","fn","$pane","$tab","transclude","postLink","ngModelCtrl","bsTabsCtrl","attrs","bsActivePane","parsedBsActivePane","assign","$parse","controllers","render","$isActive","item","list","len","dataName","charAt","toUpperCase","totalItems","currentTarget","$apply","orderBy","sortBy","onSort","clickColumn","multiple","allNoneButtons","search","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","SelectFactory","$select","$activeIndex","$isMultiple","$showAllNoneButtons","$showSearch","$iconCheckmark","$noneText","$changeSearchText","$close","$searchTextChange","$activate","activate","$isVisible","$selectNone","$matches","matches","$updateActiveIndex","a","b","onSelect","isArray","$modelValue","$getIndex","minLength","$viewValue","equals","getAttribute","anchor","anchorCandidate","searchText","$selectScrollFix","$isIE","stopImmediatePropagation","ua","activeElement","tagName","e","dataMultiple","dataSearch","inputEl","addEventListener","watchedOptions","parsedOptions","valuesFn","values","$match","warn","filter","join","$isEmpty","collection","output","keyname","connector","dateType","dateFormat","modelDateFormat","dayFormat","monthFormat","yearFormat","monthTitleFormat","yearTitleFormat","strictFormat","minDate","maxDate","minView","startWeek","daysOfWeekDisabled","iconLeft","iconRight","compare","RangeDatepickerFactory","$rangedatepicker","$mode","$iconRight","$compare","$picker","rangeList","today","pickerViews","$today","rangeType","$views","getFullYear","getMonth","getDate","$toggleCompare","$closePicker","$stopPropagation","sDate","eDate","updateDisabledDates","l","force","$setDisabledEl","$compareDateValue","compareStartDate","compareEndDate","endDate","onlyCompare","$setCompare","pristine","$updateSelected","updateSelected","built","isDisabled","steps","year","getUTCFullYear","getUTCDate","UTC","month","$selectRange","cate","substr","day","getDay","views","validateAgainstMinMaxDate","parsedDate1","rangedatepicker","parsedDate2","$getCompare","getDateFormattedString","strict","getDateForAttribute","getFormattedDate","obj","skey","ekey","date1","date2","toISOString","size","arrays","mod","n","m","arr","weekDaysMin","weekdaysShort","weekDaysLabelsHtml","picker","d","t","build","that","firstDate","firstDateOffset","currentDate","firstDayOfMonthOffset","days","getTimezoneOffset","daylightSavingAdjust","isToday","toDateString","inRange","isInRange","muted","compareSelect","firstDayOfMonth","showLabels","labels","flag","isTodayDisabled","isSelected","disabledDateRanges","months","$compareDate","lastDate","prototype","content","$popover","PopoverFactory","requestAnimationFrame","bsPopover","popover","calculateTotalPages","pageClass","totalPages","pagesLength","Math","itemsPerPage","makePage","number","text","isActive","max","getPages","currentPage","pages","half","ceil","$pagination","bsPaginationCtrl","page","selectPage","onChange","noPrevious","noNext","selectPrevious","backdrop","zIndex","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","$modal","unbindBackdropEvents","modalElement","hideOnBackdropClick","backdropElement","preventEventDefault","modalScope","setScrollBar","scrollDiv","append","scrollbarWidth","fullWindowWidth","documentElementRect","bodyIsOverflowing","window","innerWidth","resetScrollBar","abs","backdropBaseZindex","$show","destroyModalElement","z-index","defaultPrevented","customClass","minor","backdropAnimation","bindBackdropEvents","which","lg","sm","setTimeout","modalClass","bsModal","modal","dot","cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","rafSupported","raf","timer","cancel","supported","$parseOptions","$values","regexp","valueName","keyName","displayFn","valueFn","ParseOptionsFactory","groupByFn","displayValue","factory","offsetParent","docElement","ownerDocument","outer","getComputedStyle","extra","currentStyle","boxRect","style","curPosition","curLeft","curCSSTop","curTop","calculatePosition","curElem","curCSSLeft","curOffset","call","offsetParentRect","offsetParentEl","offsetParentElement","func","immediate","args","context","callNow","leading","wait","trailing","$localeProvider","milliseconds","ParseDate","noop","array","indexOfCaseInsensitive","str","toString","DateParserFactory","proto","isNumeric","toDate","regExpMap","sss","$locale","dateFilter","mm","literalRegex","formatParts","escapedLiteralFormat","dateElements","keys","escapedFormat","isFormatStringLiteral","part","trimLiteralEscapeChars","dateRegexParts","escapeReservedSymbols","re","abstractRegex","buildDateParseRegex","setMapForFormat","buildDateAbstractRegex","buildDateParseValuesMap","Object","valuesMatch","keyIndex","valueKey","valuesFunctionMap","valueFunction","valuesRegex","exec","setFnMap","setMap","HH","H","hh","h","EEEE","EEE","DATETIME_FORMATS","SHORTDAY","dd","MMMM","MMM","SHORTMONTH","MM","M","DAY","yyyy","yy","y","MONTH","ss","s","setDate","setMonth","regex","$format","regExpForFormat","baseDate","formatRegex","formatSetMap","fromDate","getTimeForAttribute","undo","getDefaultLocale","getDatetimeFormat","splitTimeFormat","service","bodyEl","matchesSelector","DropdownFactory","$dropdown","onBodyClick","items","parentEl","hasClass","tAttrs","nextSibling","nodeType","parentNode","removeChild","dropdown","$iconDown","weekDaysLabels","hourFormat","minuteFormat","secondFormat","step","timeTitleFormat","onKeyDown","actualTime","actualMonth","firstYear","years","actualYear","setYear","startView","hasToday","hasClear","DatetimepickerFactory","$datepicker","$iconLeft","$hasToday","$selectPane","$hasClear","$selectTime","selectTime","$toggleMode","setMode","$setToday","$clear","dateRanges","mode","getUTCMonth","shiftKey","altKey","datetimepickerViews","previousValue","normalizeDateRanges","ranges","disabledRanges","datepicker","parsedDate","disabledDates","DatepickerFactory","datepickerViews","concat","Array","duration","dismissible","AlertFactory","$alert","bsAlert","alert"],"mappings":"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","file":"angular-strap.min.js","sourcesContent":["(function(window, document, undefined) {\n'use strict';\n\n// Source: tooltip/tooltip.js\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      templateUrl: 'tooltip/tooltip.tpl.html',\n      template: '',\n      titleTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true,\n      mouseDownPreventDefault: true,\n      mouseDownStopPropagation: true,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory (element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        var promise = $tooltip.$promise = $bsCompiler.compile(options);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        var nodeName = element[0].nodeName.toLowerCase();\n        if (options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if (options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function (isEnabled) {\n          scope.$$postDigest(function () {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout;\n        var hoverState;\n\n        // Fetch, compile then initialize tooltip\n        var compileData;\n        var tipElement;\n        var tipContainer;\n        var tipScope;\n        promise.then(function (data) {\n          compileData = data;\n          $tooltip.init();\n        });\n\n        $tooltip.init = function () {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if (options.container === 'self') {\n            tipContainer = element;\n          } else if (angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if (options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if (options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              if (options.trigger === 'focus') {\n                element[0].focus();\n              } else {\n                $tooltip.show();\n              }\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function () {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function () {\n            if (hoverState === 'in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function () {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($tooltip);\n          }\n          var parent;\n          var after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if (tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = compileData.link(tipScope, function (clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', right: 'auto', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if (options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if (options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if (options.customClass) tipElement.addClass(options.customClass);\n\n          // Append the element, without any animations.  If we append\n          // using $animate.enter, some of the animations cause the placement\n          // to be off due to the transforms.\n          if (after) {\n            after.after(tipElement);\n          } else {\n            parent.prepend(tipElement);\n          }\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n\n          // Now, apply placement\n          $tooltip.$applyPlacement();\n\n          // Once placed, animate it.\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(tipElement, parent, after).then(enterAnimateCallback);\n          }\n          safeDigest(scope);\n\n          $$rAF(function () {\n            // Once the tooltip is placed and the animation starts, make the tooltip visible\n            if (tipElement) tipElement.css({visibility: 'visible'});\n\n            // Bind events\n            if (options.keyboard) {\n              if (options.trigger !== 'focus') {\n                $tooltip.focus();\n              }\n              bindKeyboardEvents();\n            }\n          });\n\n          if (options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($tooltip);\n          }\n        }\n\n        $tooltip.leave = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function (blur) {\n\n          if (!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($tooltip);\n          }\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(tipElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(tipElement).then(leaveAnimateCallback);\n          }\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if (options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if (options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($tooltip);\n          }\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if (_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function (evt) {\n          if (evt) { evt.preventDefault(); }\n          if ($tooltip.$isShown) {\n            $tooltip.leave();\n          } else {\n            $tooltip.enter();\n          }\n        };\n\n        $tooltip.focus = function () {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function (isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        $tooltip.setViewport = function (viewport) {\n          options.viewport = viewport;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function () {\n          if (!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement;\n          var autoToken = /\\s?auto?\\s?/i;\n          var autoPlace = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition();\n          var tipWidth = tipElement.prop('offsetWidth');\n          var tipHeight = tipElement.prop('offsetHeight');\n\n          // Refresh viewport position\n          $tooltip.$viewport = options.viewport && findElement(options.viewport.selector || options.viewport);\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var viewportPosition = getPosition($tooltip.$viewport);\n\n            if (/bottom/.test(originalPlacement) && elementPosition.bottom + tipHeight > viewportPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (/top/.test(originalPlacement) && elementPosition.top - tipHeight < viewportPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            if (/left/.test(originalPlacement) && elementPosition.left - tipWidth < viewportPosition.left) {\n              placement = placement.replace('left', 'right');\n            } else if (/right/.test(originalPlacement) && elementPosition.right + tipWidth > viewportPosition.width) {\n              placement = placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacement(tipPosition, placement);\n        };\n\n        $tooltip.$onKeyUp = function (evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function (evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function (evt) {\n          if (options.mouseDownPreventDefault) { evt.preventDefault(); }\n          if (options.mouseDownStopPropagation) { evt.stopPropagation(); }\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          if ($tooltip.$isShown) {\n            element[0].blur();\n          } else {\n            element[0].focus();\n          }\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function (trigger) {\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.on(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n\n              if (nodeName === 'button' && trigger !== 'hover' || (nodeName === 'input')) {\n                element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          });\n        }\n\n        function unbindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.off(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover' || (nodeName === 'input')) {\n                element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents () {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents () {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation (event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition ($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n          var isBody = el.tagName === 'BODY';\n\n          var elRect = el.getBoundingClientRect();\n          var rect = {};\n\n          // IE8 has issues with angular.extend and using elRect directly.\n          // By coping the values of elRect into a new object, we can continue to use extend\n          /* eslint-disable guard-for-in */\n          for (var p in elRect) { // eslint-disable-line\n            // DO NOT use hasOwnProperty when inspecting the return of getBoundingClientRect.\n            rect[p] = elRect[p];\n          }\n          /* eslint-enable guard-for-in */\n\n          if (rect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            rect = angular.extend({}, rect, {width: elRect.right - elRect.left, height: elRect.bottom - elRect.top});\n          }\n          var elOffset = isBody ? {top: 0, left: 0} : dimensions.offset(el);\n          var scroll = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.prop('scrollTop') || 0};\n          var outerDims = isBody ? {width: document.documentElement.clientWidth, height: $window.innerHeight} : null;\n\n          return angular.extend({}, rect, scroll, outerDims, elOffset);\n        }\n\n        function getCalculatedOffset (placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n            case 'right':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left + position.width\n              };\n              break;\n            case 'bottom':\n              offset = {\n                top: position.top + position.height,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n            case 'left':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left - actualWidth\n              };\n              break;\n            default:\n              offset = {\n                top: position.top - actualHeight,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n          }\n\n          if (!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if (split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n              case 'left':\n                offset.left = position.left;\n                break;\n              case 'right':\n                offset.left = position.left + position.width - actualWidth;\n                break;\n              default:\n                break;\n            }\n          } else if (split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n              case 'top':\n                offset.top = position.top - actualHeight + position.height;\n                break;\n              case 'bottom':\n                offset.top = position.top;\n                break;\n              default:\n                break;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacement (offset, placement) {\n          var tip = tipElement[0];\n          var width = tip.offsetWidth;\n          var height = tip.offsetHeight;\n\n          // manually read margins because getBoundingClientRect includes difference\n          var marginTop = parseInt(dimensions.css(tip, 'margin-top'), 10);\n          var marginLeft = parseInt(dimensions.css(tip, 'margin-left'), 10);\n\n          // we must check for NaN for ie 8/9\n          if (isNaN(marginTop)) marginTop = 0;\n          if (isNaN(marginLeft)) marginLeft = 0;\n\n          offset.top = offset.top + marginTop;\n          offset.left = offset.left + marginLeft;\n\n          // dimensions setOffset doesn't round pixel values\n          // so we use setOffset directly with our own function\n          dimensions.setOffset(tip, angular.extend({\n            using: function (props) {\n              tipElement.css({\n                top: Math.round(props.top) + 'px',\n                left: Math.round(props.left) + 'px',\n                right: ''\n              });\n            }\n          }, offset), 0);\n\n          // check to see if placing tip in new offset caused the tip to resize itself\n          var actualWidth = tip.offsetWidth;\n          var actualHeight = tip.offsetHeight;\n\n          if (placement === 'top' && actualHeight !== height) {\n            offset.top = offset.top + height - actualHeight;\n          }\n\n          // If it's an exotic placement, exit now instead of\n          // applying a delta and changing the arrow\n          if (/top-left|top-right|bottom-left|bottom-right/.test(placement)) return;\n\n          var delta = getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n\n          if (delta.left) {\n            offset.left += delta.left;\n          } else {\n            offset.top += delta.top;\n          }\n\n          dimensions.setOffset(tip, offset);\n\n          if (/top|right|bottom|left/.test(placement)) {\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n\n            replaceArrow(arrowDelta, tip[arrowOffsetPosition], isVertical);\n          }\n        }\n\n        // @source https://github.com/twbs/bootstrap/blob/v3.3.5/js/tooltip.js#L380\n        function getViewportAdjustedDelta (placement, position, actualWidth, actualHeight) {\n          var delta = {top: 0, left: 0};\n          if (!$tooltip.$viewport) return delta;\n\n          var viewportPadding = options.viewport && options.viewport.padding || 0;\n          var viewportDimensions = getPosition($tooltip.$viewport);\n\n          if (/right|left/.test(placement)) {\n            var topEdgeOffset = position.top - viewportPadding - viewportDimensions.scroll;\n            var bottomEdgeOffset = position.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\n              delta.top = viewportDimensions.top - topEdgeOffset;\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n              delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n            }\n          } else {\n            var leftEdgeOffset = position.left - viewportPadding;\n            var rightEdgeOffset = position.left + viewportPadding + actualWidth;\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n              delta.left = viewportDimensions.left - leftEdgeOffset;\n            } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n              delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n            }\n          }\n\n          return delta;\n        }\n\n        function replaceArrow (delta, dimension, isHorizontal) {\n          var $arrow = findElement('.tooltip-arrow, .arrow', tipElement[0]);\n\n          $arrow.css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n                .css(isHorizontal ? 'top' : 'left', '');\n        }\n\n        function destroyTipElement () {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if ($tooltip.$isShown && tipElement !== null) {\n            if (options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if (options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if (tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if (tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function ($window, $location, $sce, $parse, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        var tooltip;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'titleTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function (newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }\n        });\n\n        attr.$observe('disabled', function (newValue) {\n          if (newValue && tooltip.$isShown) {\n            tooltip.hide();\n          }\n        });\n\n        // Support scope as an object\n\n        if (attr.bsTooltip) {\n          scope.$watch(attr.bsTooltip, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.title = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n            if (newValue === true) {\n              tooltip.show();\n            } else {\n              tooltip.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n            if (newValue === false) {\n              tooltip.setEnabled(false);\n            } else {\n              tooltip.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            tooltip.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: timepicker/timepicker.js\nangular.module('mgcrea.ngStrap.timepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$timepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    defaultDate: 'auto',\n    prefixClass: 'timepicker',\n    placement: 'bottom-left',\n    templateUrl: 'timepicker/timepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: true,\n    timeType: 'date',\n    timeFormat: 'shortTime',\n    timezone: null,\n    modelTimeFormat: null,\n    autoclose: false,\n    minTime: -Infinity,\n    maxTime: +Infinity,\n    length: 5,\n    hourStep: 1,\n    minuteStep: 5,\n    secondStep: 5,\n    roundDisplay: false,\n    iconUp: 'nox-sort-up',\n    iconDown: 'nox-sort-down',\n    arrowBehavior: 'pager'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) {\n      defaults.lang = $dateFormatter.getDefaultLocale();\n    }\n    function timepickerFactory(element, controller, config) {\n      var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $timepicker.$options;\n      var scope = $timepicker.$scope;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      function floorMinutes(time) {\n        var coeff = 1e3 * 60 * options.minuteStep;\n        return new Date(Math.floor(time.getTime() / coeff) * coeff);\n      }\n      var selectedIndex = 0;\n      var defaultDate = options.roundDisplay ? floorMinutes(new Date()) : new Date();\n      var startDate = controller.$dateValue || defaultDate;\n      var viewDate = {\n        hour: startDate.getHours(),\n        meridian: startDate.getHours() < 12,\n        minute: startDate.getMinutes(),\n        second: startDate.getSeconds(),\n        millisecond: startDate.getMilliseconds()\n      };\n      var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n      var hoursFormat = $dateFormatter.hoursFormat(format);\n      var timeSeparator = $dateFormatter.timeSeparator(format);\n      var minutesFormat = $dateFormatter.minutesFormat(format);\n      var secondsFormat = $dateFormatter.secondsFormat(format);\n      var showSeconds = $dateFormatter.showSeconds(format);\n      var showAM = $dateFormatter.showAM(format);\n      scope.$iconUp = options.iconUp;\n      scope.$iconDown = options.iconDown;\n      scope.$select = function(date, index) {\n        $timepicker.select(date, index);\n      };\n      scope.$moveIndex = function(value, index) {\n        $timepicker.$moveIndex(value, index);\n      };\n      scope.$switchMeridian = function(date) {\n        $timepicker.switchMeridian(date);\n      };\n      $timepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $timepicker.$date = date;\n          angular.extend(viewDate, {\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            millisecond: date.getMilliseconds()\n          });\n          $timepicker.$build();\n        } else if (!$timepicker.$isBuilt) {\n          $timepicker.$build();\n        }\n      };\n      $timepicker.select = function(date, index, keep) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          controller.$dateValue = options.defaultDate === 'today' ? new Date() : new Date(1970, 0, 1);\n        }\n        if (!angular.isDate(date)) date = new Date(date);\n        if (index === 0) controller.$dateValue.setHours(date.getHours()); else if (index === 1) controller.$dateValue.setMinutes(date.getMinutes()); else if (index === 2) controller.$dateValue.setSeconds(date.getSeconds());\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n        if (options.autoclose && !keep) {\n          $timeout(function() {\n            $timepicker.hide(true);\n          });\n        }\n      };\n      $timepicker.switchMeridian = function(date) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          return;\n        }\n        var hours = (date || controller.$dateValue).getHours();\n        controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n      };\n      $timepicker.$build = function() {\n        var i;\n        var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n        var hours = [];\n        var hour;\n        for (i = 0; i < options.length; i++) {\n          hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n          hours.push({\n            date: hour,\n            label: formatDate(hour, hoursFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n            disabled: $timepicker.$isDisabled(hour, 0)\n          });\n        }\n        var minutes = [];\n        var minute;\n        for (i = 0; i < options.length; i++) {\n          minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n          minutes.push({\n            date: minute,\n            label: formatDate(minute, minutesFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(minute, 1),\n            disabled: $timepicker.$isDisabled(minute, 1)\n          });\n        }\n        var seconds = [];\n        var second;\n        for (i = 0; i < options.length; i++) {\n          second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n          seconds.push({\n            date: second,\n            label: formatDate(second, secondsFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(second, 2),\n            disabled: $timepicker.$isDisabled(second, 2)\n          });\n        }\n        var rows = [];\n        for (i = 0; i < options.length; i++) {\n          if (showSeconds) {\n            rows.push([ hours[i], minutes[i], seconds[i] ]);\n          } else {\n            rows.push([ hours[i], minutes[i] ]);\n          }\n        }\n        scope.rows = rows;\n        scope.showSeconds = showSeconds;\n        scope.showAM = showAM;\n        scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n        scope.timeSeparator = timeSeparator;\n        $timepicker.$isBuilt = true;\n      };\n      $timepicker.$isSelected = function(date, index) {\n        if (!$timepicker.$date) return false; else if (index === 0) {\n          return date.getHours() === $timepicker.$date.getHours();\n        } else if (index === 1) {\n          return date.getMinutes() === $timepicker.$date.getMinutes();\n        } else if (index === 2) {\n          return date.getSeconds() === $timepicker.$date.getSeconds();\n        }\n      };\n      $timepicker.$isDisabled = function(date, index) {\n        var selectedTime;\n        if (index === 0) {\n          selectedTime = date.getTime() + viewDate.minute * 6e4 + viewDate.second * 1e3;\n        } else if (index === 1) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.second * 1e3;\n        } else if (index === 2) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.minute * 6e4;\n        }\n        return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n      };\n      scope.$arrowAction = function(value, index) {\n        if (options.arrowBehavior === 'picker') {\n          $timepicker.$setTimeByStep(value, index);\n        } else {\n          $timepicker.$moveIndex(value, index);\n        }\n      };\n      $timepicker.$setTimeByStep = function(value, index) {\n        var newDate = new Date($timepicker.$date || startDate);\n        var hours = newDate.getHours();\n        var minutes = newDate.getMinutes();\n        var seconds = newDate.getSeconds();\n        if (index === 0) {\n          newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n        } else if (index === 1) {\n          newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n        } else if (index === 2) {\n          newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n        }\n        $timepicker.select(newDate, index, true);\n      };\n      $timepicker.$moveIndex = function(value, index) {\n        var targetDate;\n        if (index === 0) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n          angular.extend(viewDate, {\n            hour: targetDate.getHours()\n          });\n        } else if (index === 1) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n          angular.extend(viewDate, {\n            minute: targetDate.getMinutes()\n          });\n        } else if (index === 2) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n          angular.extend(viewDate, {\n            second: targetDate.getSeconds()\n          });\n        }\n        $timepicker.$build();\n      };\n      $timepicker.$onMouseDown = function(evt) {\n        if (evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $timepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          $timepicker.hide(true);\n          return;\n        }\n        var newDate = new Date($timepicker.$date);\n        var hours = newDate.getHours();\n        var hoursLength = formatDate(newDate, hoursFormat).length;\n        var minutes = newDate.getMinutes();\n        var minutesLength = formatDate(newDate, minutesFormat).length;\n        var seconds = newDate.getSeconds();\n        var secondsLength = formatDate(newDate, secondsFormat).length;\n        var sepLength = 1;\n        var lateralMove = /(37|39)/.test(evt.keyCode);\n        var count = 2 + showSeconds * 1 + showAM * 1;\n        if (lateralMove) {\n          if (evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1; else if (evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n        }\n        var selectRange = [ 0, hoursLength ];\n        var incr = 0;\n        if (evt.keyCode === 38) incr = -1;\n        if (evt.keyCode === 40) incr = +1;\n        var isSeconds = selectedIndex === 2 && showSeconds;\n        var isMeridian = selectedIndex === 2 && !showSeconds || selectedIndex === 3 && showSeconds;\n        if (selectedIndex === 0) {\n          newDate.setHours(hours + incr * parseInt(options.hourStep, 10));\n          hoursLength = formatDate(newDate, hoursFormat).length;\n          selectRange = [ 0, hoursLength ];\n        } else if (selectedIndex === 1) {\n          newDate.setMinutes(minutes + incr * parseInt(options.minuteStep, 10));\n          minutesLength = formatDate(newDate, minutesFormat).length;\n          selectRange = [ hoursLength + sepLength, minutesLength ];\n        } else if (isSeconds) {\n          newDate.setSeconds(seconds + incr * parseInt(options.secondStep, 10));\n          secondsLength = formatDate(newDate, secondsFormat).length;\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength, secondsLength ];\n        } else if (isMeridian) {\n          if (!lateralMove) $timepicker.switchMeridian();\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength + (secondsLength + sepLength) * showSeconds, 2 ];\n        }\n        $timepicker.select(newDate, selectedIndex, true);\n        createSelection(selectRange[0], selectRange[1]);\n        parentScope.$digest();\n      };\n      function createSelection(start, length) {\n        var end = start + length;\n        if (element[0].createTextRange) {\n          var selRange = element[0].createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end);\n          selRange.select();\n        } else if (element[0].setSelectionRange) {\n          element[0].setSelectionRange(start, end);\n        } else if (angular.isUndefined(element[0].selectionStart)) {\n          element[0].selectionStart = start;\n          element[0].selectionEnd = end;\n        }\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $timepicker.init;\n      $timepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'time');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $timepicker.destroy;\n      $timepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $timepicker.show;\n      $timepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if ($timepicker.$element) $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if (options.keyboard) {\n            if (element) element.on('keydown', $timepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $timepicker.hide;\n      $timepicker.hide = function(blur) {\n        if (!$timepicker.$isShown) return;\n        if ($timepicker.$element) $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n        if (options.keyboard) {\n          if (element) element.off('keydown', $timepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $timepicker;\n    }\n    timepickerFactory.defaults = defaults;\n    return timepickerFactory;\n  } ];\n}).directive('bsTimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$timepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n  var defaults = $timepicker.defaults;\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'autoclose', 'timeType', 'timeFormat', 'timezone', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'secondStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'roundDisplay', 'id', 'prefixClass', 'prefixEvent', 'defaultDate' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'roundDisplay' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      if (isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n      var timepicker = $timepicker(element, controller, options);\n      options = timepicker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!timepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          if (newValue === true) {\n            timepicker.show();\n          } else {\n            timepicker.hide();\n          }\n        });\n      }\n      var dateParser = $dateParser({\n        format: options.timeFormat,\n        lang: lang\n      });\n      angular.forEach([ 'minTime', 'maxTime' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            if (!isNaN(timepicker.$options[key])) timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        }\n      });\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        timepicker.update(controller.$dateValue);\n      }, true);\n      function validateAgainstMinMaxTime(parsedTime) {\n        if (!angular.isDate(parsedTime)) return;\n        var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n        var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (!isValid) {\n          return;\n        }\n        controller.$dateValue = parsedTime;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedTime || isNaN(parsedTime.getTime())) {\n          controller.$setValidity('date', false);\n          return undefined;\n        }\n        validateAgainstMinMaxTime(parsedTime);\n        if (options.timeType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedTime, options.timezone, true);\n          return formatDate(date, options.modelTimeFormat || options.timeFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.timeType === 'number') {\n          return date.getTime();\n        } else if (options.timeType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.timeType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.timeType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n        } else if (options.timeType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getTimeFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getTimeFormattedString());\n      };\n      function getTimeFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (timepicker) timepicker.destroy();\n        options = null;\n        timepicker = null;\n      });\n    }\n  };\n} ]);\n\n// Source: tab/tab.js\nangular.module('mgcrea.ngStrap.tab', []).provider('$tab', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    template: 'tab/tab.tpl.html',\n    navClass: 'nav-tabs',\n    activeClass: 'active'\n  };\n  var controller = this.controller = function($scope, $element, $attrs) {\n    var self = this;\n    self.$options = angular.copy(defaults);\n    angular.forEach([ 'animation', 'navClass', 'activeClass' ], function(key) {\n      if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n    });\n    $scope.$navClass = self.$options.navClass;\n    $scope.$activeClass = self.$options.activeClass;\n    self.$panes = $scope.$panes = [];\n    self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n    self.$push = function(pane) {\n      if (angular.isUndefined(self.$panes.$active)) {\n        $scope.$setActive(pane.name || 0);\n      }\n      self.$panes.push(pane);\n    };\n    self.$remove = function(pane) {\n      var index = self.$panes.indexOf(pane);\n      var active = self.$panes.$active;\n      var activeIndex;\n      if (angular.isString(active)) {\n        activeIndex = self.$panes.map(function(pane) {\n          return pane.name;\n        }).indexOf(active);\n      } else {\n        activeIndex = self.$panes.$active;\n      }\n      self.$panes.splice(index, 1);\n      if (index < activeIndex) {\n        activeIndex--;\n      } else if (index === activeIndex && activeIndex === self.$panes.length) {\n        activeIndex--;\n      }\n      if (activeIndex >= 0 && activeIndex < self.$panes.length) {\n        self.$setActive(self.$panes[activeIndex].name || activeIndex);\n      } else {\n        self.$setActive();\n      }\n    };\n    self.$setActive = $scope.$setActive = function(value) {\n      self.$panes.$active = value;\n      self.$activePaneChangeListeners.forEach(function(fn) {\n        fn();\n      });\n    };\n    self.$isActive = $scope.$isActive = function($pane, $index) {\n      return self.$panes.$active === $pane.name || self.$panes.$active === $index;\n    };\n  };\n  this.$get = function() {\n    var $tab = {};\n    $tab.defaults = defaults;\n    $tab.controller = controller;\n    return $tab;\n  };\n}).directive('bsTabs', [ '$window', '$animate', '$tab', '$parse', function($window, $animate, $tab, $parse) {\n  var defaults = $tab.defaults;\n  return {\n    require: [ '?ngModel', 'bsTabs' ],\n    transclude: true,\n    scope: true,\n    controller: [ '$scope', '$element', '$attrs', $tab.controller ],\n    templateUrl: function(element, attr) {\n      return attr.template || defaults.template;\n    },\n    link: function postLink(scope, element, attrs, controllers) {\n      var ngModelCtrl = controllers[0];\n      var bsTabsCtrl = controllers[1];\n      if (ngModelCtrl) {\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n        });\n        ngModelCtrl.$formatters.push(function(modelValue) {\n          bsTabsCtrl.$setActive(modelValue);\n          return modelValue;\n        });\n      }\n      if (attrs.bsActivePane) {\n        var parsedBsActivePane = $parse(attrs.bsActivePane);\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n        });\n        scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n          bsTabsCtrl.$setActive(newValue);\n        }, true);\n      }\n    }\n  };\n} ]).directive('bsPane', [ '$window', '$animate', '$sce', function($window, $animate, $sce) {\n  return {\n    require: [ '^?ngModel', '^bsTabs' ],\n    scope: true,\n    link: function postLink(scope, element, attrs, controllers) {\n      var bsTabsCtrl = controllers[1];\n      element.addClass('tab-pane');\n      attrs.$observe('title', function(newValue, oldValue) {\n        scope.title = $sce.trustAsHtml(newValue);\n      });\n      scope.name = attrs.name;\n      scope.link = attrs.link ? attrs.link : false;\n      if (bsTabsCtrl.$options.animation) {\n        element.addClass(bsTabsCtrl.$options.animation);\n      }\n      attrs.$observe('disabled', function(newValue, oldValue) {\n        scope.disabled = scope.$eval(newValue);\n      });\n      bsTabsCtrl.$push(scope);\n      scope.$on('$destroy', function() {\n        bsTabsCtrl.$remove(scope);\n      });\n      function render() {\n        var index = bsTabsCtrl.$panes.indexOf(scope);\n        $animate[bsTabsCtrl.$isActive(scope, index) ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n      }\n      bsTabsCtrl.$activePaneChangeListeners.push(function() {\n        render();\n      });\n      render();\n    }\n  };\n} ]);\n\n// Source: sort/sort.js\nangular.module('mgcrea.ngStrap.sort', []).directive('bsSort', [function() {\n  return {\n    scope: true,\n    compile: function (element, attrs) {\n      var list = element[0].querySelectorAll('th');\n      for (var i = 0, len = list.length; i < len; i++) {\n        var item = list[i];\n        item = angular.element(item);\n        if (item.attr('data-sortable')) {\n          var dataName = item.attr('data-name');\n          item.append('<div class=\"sorter\"><i class=\"nox-sort-up sort-asc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'asc\\'}\"></i><i class=\"nox-sort-down sort-desc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'desc\\'}\"></i></div>');\n        }\n      }\n\n      return function postLink (scope, element, attrs) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['onSort'], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        if (angular.isDefined(attrs.totalItems)) {\n          attrs.$observe('totalItems', function (newValue) {\n            options.totalItems = newValue;\n          });\n        }\n        // 初始化排序\n        angular.forEach([ 'orderBy', 'sortBy' ], function(key) {\n          if (angular.isDefined(attrs[key])) {\n            scope[key] = scope.$eval(attrs[key]);\n          }\n        });\n        var list = element[0].querySelectorAll('th');\n        for (var i = 0, len = list.length; i < len; i++) {\n          var item = list[i];\n          item = angular.element(item);\n          if (item.attr('data-sortable')) {\n            item.on('click', clickColumn);\n          }\n        }\n\n        function clickColumn (event) {\n          if (options.totalItems === -1) {\n            return;\n          }\n          var target = angular.element(event.currentTarget);\n          var dataName = target.attr('data-name');\n          if (dataName === scope.orderBy) {\n            scope.sortBy = scope.sortBy === 'asc' ? 'desc' : 'asc';\n          } else {\n            scope.orderBy = dataName;\n            scope.sortBy = 'desc';\n          }\n          scope.$apply();\n\n          if (angular.isDefined(options.onSort) && angular.isFunction(options.onSort)) {\n            options.onSort(scope.orderBy, scope.sortBy);\n          }\n        }\n      };\n    }\n  };\n}]);\n\n// Source: select/select.js\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      autoClose: false,\n      search: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"select-arrow\"><i class=\"nox-sort-down\"></i></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$showSearch = options.search; // 单选复选都可以search\n        // scope.$trigger = options.search?true:false;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$searchText = '';\n\n\n        scope.$changeSearchText = function (evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n\n        };\n        scope.$close = function () {\n          scope.$$postDigest(function () {\n            $select.hide(true);\n          });\n        };\n        scope.$searchTextChange = function (evt) {\n          scope.searchText = evt.searchText;\n\n        };\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index, evt);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index, evt) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n          // scope.searchText = '';\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          // Emulate click for mobile devices\n          evt.preventDefault(true);\n          evt.stopPropagation(true);\n\n          if (evt.target.getAttribute('role') === 'search') {\n            evt.target.focus();\n            scope.searchText = '';\n          }\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          } else {\n            // console.log('no touch');\n          }\n\n\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function () {\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n            scope.$activeIndex = -1;\n          }\n          if (options.search) {\n            // search 清空\n            scope.searchText = '';\n           // return;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id',\n          'sort', 'search', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort', 'search'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // search\n        var dataSearch = element.attr('data-search');\n        if (angular.isDefined(dataSearch)) {\n          if (falseValueRegExp.test(dataSearch)) {\n            options.search = false;\n          } else {\n            options.search = dataSearch;\n            scope.searchText = '';\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  })\n  .filter('searchFilter', function () {\n    return function (collection, keyname, value) {\n      var output = [];\n      angular.forEach(collection, function (item) {\n        // 过滤数组中值与指定值相同的元素\n        if (item[keyname].indexOf(value) > -1) {\n          output.push(item);\n        }\n      });\n      return output;\n    };\n  });\n\n// Source: rangedatepicker/rangedatepicker.js\n/**\n * Created by xiashan on 17/5/12.\n */\n\nangular.module('mgcrea.ngStrap.rangedatepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ])\n  .provider('$rangedatepicker', function () {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'rangedatepicker',\n      placement: 'bottom-left',\n      templateUrl: 'rangedatepicker/rangedatepicker.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      connector: ' / ',\n      dateType: 'date',\n      dateFormat: 'yyyy-MM-dd',\n      timezone: null,\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      compare: true\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'rangedatepickerViews', '$tooltip', '$timeout',\n      function ($window, $document, $rootScope, $sce, $dateFormatter, rangedatepickerViews, $tooltip, $timeout) {\n        var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n        var isTouch = 'createTouch' in $window.document && isNative;\n        if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n        function RangeDatepickerFactory (element, controller, config) {\n          var $rangedatepicker = $tooltip(element, angular.extend({}, defaults, config));\n          var options = $rangedatepicker.$options;\n          var scope = $rangedatepicker.$scope;\n          var pickerViews = rangedatepickerViews($rangedatepicker);\n          $rangedatepicker.$views = pickerViews.views;\n          var viewDate = pickerViews.viewDate;\n          scope.$mode = options.minView;\n          scope.$iconLeft = options.iconLeft;\n          scope.$iconRight = options.iconRight;\n          scope.$compare = options.compare;\n          var $picker = $rangedatepicker.$views[0];\n          scope.rangeList = $picker.rangeList;\n\n          var today = new Date();\n          $rangedatepicker.$today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\n          // 区间\n          scope.ctrl = {\n            rangeType: '',\n            compare: ''\n          };\n\n          scope.$select = function (date, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.select(date, index);\n          };\n          scope.$selectPane = function (value, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.$selectPane(value, index);\n          };\n          scope.$selectRange = function (type) {\n            if (type === scope.ctrl.rangeType || scope.ctrl.compare) {\n              return;\n            }\n            $rangedatepicker.$selectRange(type);\n            $rangedatepicker.hide(true);\n          };\n          scope.$toggleCompare = function () {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            // 只变更了勾选compare\n            modelValue.onlyCompare = true;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n          };\n          scope.$closePicker = function () {\n            $rangedatepicker.hide();\n          };\n          scope.$stopPropagation = function (evt) {\n            evt.stopPropagation();\n          };\n\n          $rangedatepicker.update = function (sDate, eDate, force) {\n            if (angular.isDate(sDate) && !isNaN(sDate.getTime()) && angular.isDate(eDate) && !isNaN(eDate.getTime())) {\n              if (!scope.ctrl.compare) {\n                $rangedatepicker.$date = [sDate, eDate];\n              } else {\n                $rangedatepicker.$compareDate = [sDate, eDate];\n              }\n              $picker.update.call($picker, sDate, eDate);\n            } else {\n              $rangedatepicker.$build(!force);\n            }\n          };\n          $rangedatepicker.updateDisabledDates = function (dateRanges) {\n            options.disabledDateRanges = dateRanges;\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], $rangedatepicker.$setDisabledEl);\n            }\n          };\n          $rangedatepicker.select = function (date, index, keep) {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            if (!scope.ctrl.compare) {\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$dateValue[index]) || isNaN(controller.$dateValue[index].getTime())) {\n                  controller.$dateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$dateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.startDate = angular.copy(date);\n              } else {\n                modelValue.endDate = angular.copy(date);\n              }\n            } else {\n              controller.$compareDateValue = !controller.$compareDateValue ? [] : controller.$compareDateValue;\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$compareDateValue[index]) || isNaN(controller.$compareDateValue[index].getTime())) {\n                  controller.$compareDateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$compareDateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.compareStartDate = angular.copy(date);\n              } else {\n                modelValue.compareEndDate = angular.copy(date);\n              }\n            }\n            modelValue.onlyCompare = false;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n            if (options.autoclose && !keep) {\n              $timeout(function () {\n                $rangedatepicker.hide(true);\n              });\n            }\n          };\n          $rangedatepicker.$getCompare = function () {\n            return scope.ctrl && scope.ctrl.compare;\n          };\n          $rangedatepicker.$setCompare = function () {\n            scope.ctrl && (scope.ctrl.compare = 'compare');\n          };\n          $rangedatepicker.$build = function (pristine) {\n            if (pristine === true && $picker.built) return;\n            if (pristine === false && !$picker.built) return;\n            $picker.build.call($picker, $rangedatepicker.$date);\n          };\n          $rangedatepicker.$updateSelected = function () {\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], updateSelected);\n            }\n          };\n          $rangedatepicker.$isSelected = function (date) {\n            return $picker.isSelected(date);\n          };\n          $rangedatepicker.$setDisabledEl = function (el) {\n            el.disabled = $picker.isDisabled(el.date);\n          };\n          $rangedatepicker.$selectPane = function (value, index) {\n            var steps = $picker.steps;\n            var key = (index === 0) ? 'startDate' : 'endDate';\n            var targetDate = new Date(Date.UTC(viewDate[key].year + (steps.year || 0) * value, viewDate[key].month + (steps.month || 0) * value, 1));\n            angular.extend(viewDate[key], {\n              year: targetDate.getUTCFullYear(),\n              month: targetDate.getUTCMonth(),\n              date: targetDate.getUTCDate()\n            });\n            $rangedatepicker.$build();\n          };\n          $rangedatepicker.$selectRange = function (type) {\n            var cate = type.substr(-1);\n            var value = parseInt(type.substr(0, type.length - 1), 10);\n            var endDate = $rangedatepicker.$today;\n            var startDate;\n            switch (cate) {\n              case 'd':\n                if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value + 1);\n                  if (value === -2) {\n                    endDate = startDate;\n                  }\n                } else {\n                  startDate = endDate;\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value);\n                }\n                break;\n              case 'w':\n                var day = endDate.getDay();\n                if (value <= 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (day * -1 + 1));\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + (day * -1));\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + 7 - day + 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (7 - day));\n                }\n                break;\n              case 'm':\n                if (value === 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n                } else if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + value, 1);\n                  // 一月一月的看，并不做区间\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                }\n                break;\n              default:\n                break;\n            }\n            if (angular.isDate(startDate) && angular.isDate(endDate)) {\n              controller.$dateValue[0] = angular.copy(startDate);\n              controller.$dateValue[1] = angular.copy(endDate);\n              var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n              modelValue.startDate = angular.copy(startDate);\n              modelValue.endDate = angular.copy(endDate);\n              modelValue.onlyCompare = false;\n              controller.$setViewValue(modelValue);\n              controller.$render();\n              scope.ctrl.rangeType = type;\n            }\n          };\n          $rangedatepicker.$onMouseDown = function (evt) {\n            evt.preventDefault(true);\n            evt.stopPropagation(true);\n            var targetEl = angular.element(evt.target);\n            if (isTouch) {\n              if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n                targetEl = targetEl.parent();\n              }\n              targetEl.triggerHandler('click');\n            }\n          };\n          function updateSelected (el) {\n            el.selected = $rangedatepicker.$isSelected(el.date);\n          }\n          function focusElement () {\n            element[0].focus();\n          }\n          var _init = $rangedatepicker.init;\n          $rangedatepicker.init = function () {\n            if (isNative && options.useNative) {\n              element.prop('type', 'date');\n              element.css('-webkit-appearance', 'textfield');\n              return;\n            } else if (isTouch) {\n              element.prop('type', 'text');\n              element.attr('readonly', 'true');\n              element.on('click', focusElement);\n            }\n            _init();\n          };\n          var _destroy = $rangedatepicker.destroy;\n          $rangedatepicker.destroy = function () {\n            if (isNative && options.useNative) {\n              element.off('click', focusElement);\n            }\n            _destroy();\n          };\n          var _show = $rangedatepicker.show;\n          $rangedatepicker.show = function () {\n            // if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n            if (element.attr('disabled')) return;\n            _show();\n            $timeout(function () {\n              if (!$rangedatepicker.$isShown) return;\n              $rangedatepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            }, 0, false);\n          };\n          var _hide = $rangedatepicker.hide;\n          $rangedatepicker.hide = function (blur) {\n            if (!$rangedatepicker.$isShown) return;\n            $rangedatepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            _hide(blur);\n          };\n          return $rangedatepicker;\n        }\n        RangeDatepickerFactory.defaults = defaults;\n        return RangeDatepickerFactory;\n      }];\n  })\n  .directive('bsRangedatepicker', ['$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$rangedatepicker',\n    function ($window, $parse, $q, $dateFormatter, $dateParser, $rangedatepicker) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      return {\n        restrict: 'EAC',\n        require: 'ngModel',\n        link: function postLink (scope, element, attr, controller) {\n          var options = {\n            scope: scope\n          };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'connector', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'compare'], function (key) {\n            if (angular.isDefined(attr[key])) options[key] = attr[key];\n          });\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container', 'autoclose', 'useNative', 'compare'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n              options[key] = false;\n            }\n          });\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n          var rangedatepicker = $rangedatepicker(element, controller, options);\n          options = rangedatepicker.$options;\n          if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n          var lang = options.lang;\n          var formatDate = function (date, format) {\n            return $dateFormatter.formatDate(date, format, lang);\n          };\n          var dateParser = $dateParser({\n            format: options.dateFormat,\n            lang: lang,\n            strict: options.strictFormat\n          });\n          angular.forEach(['minDate', 'maxDate'], function (key) {\n            if (angular.isDefined(attr[key])) {\n              attr.$observe(key, function (newValue) {\n                rangedatepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n                if (!isNaN(rangedatepicker.$options[key])) {\n                  rangedatepicker.$build(false);\n                }\n                // if (controller.$dateValue) {\n                //   validateAgainstMinMaxDate(controller.$dateValue[0], controller.$dateValue[1]);\n                // }\n              });\n            }\n          });\n          if (angular.isDefined(attr.dateFormat)) {\n            attr.$observe('dateFormat', function (newValue) {\n              rangedatepicker.$options.dateFormat = newValue;\n            });\n          }\n          scope.$watch(attr.ngModel, function (newValue, oldValue) {\n            if (newValue && newValue.onlyCompare) {\n              rangedatepicker.update(null, null, true);\n            } else if (rangedatepicker.$getCompare()) {\n              rangedatepicker.$date = [controller.$dateValue[0], controller.$dateValue[1]];\n              rangedatepicker.update(controller.$compareDateValue[0], controller.$compareDateValue[1]);\n            } else {\n              rangedatepicker.update(controller.$dateValue[0], controller.$dateValue[1]);\n            }\n          }, true);\n\n          function getFormattedDate (modelValue) {\n            var date;\n            if (angular.isDate(modelValue)) {\n              date = modelValue;\n            } else if (options.dateType === 'string') {\n              date = dateParser.parse(modelValue, null, options.modelDateFormat);\n            } else if (options.dateType === 'unix') {\n              date = new Date(modelValue * 1e3);\n            } else {\n              date = new Date(modelValue);\n            }\n            return date;\n          }\n          function validateAgainstMinMaxDate (parsedDate1, parsedDate2) {\n            if (!angular.isDate(parsedDate1) || !angular.isDate(parsedDate2)) {\n              return false;\n            }\n            var isMinValid = isNaN(rangedatepicker.$options.minDate) || parsedDate1.getTime() >= rangedatepicker.$options.minDate;\n            var isMaxValid = isNaN(rangedatepicker.$options.maxDate) || parsedDate2.getTime() <= rangedatepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            var compare = rangedatepicker.$getCompare();\n            if (isValid) {\n              if (compare) {\n                controller.$compareDateValue[0] = parsedDate1;\n                controller.$compareDateValue[1] = parsedDate2;\n              } else {\n                controller.$dateValue[0] = parsedDate1;\n                controller.$dateValue[1] = parsedDate2;\n              }\n            }\n            return true;\n          }\n          controller.$parsers.unshift(function (viewValue) {\n            var compare = rangedatepicker.$getCompare();\n            if (!viewValue) {\n              controller.$setValidity('date', true);\n              return null;\n            }\n            if (viewValue.onlyCompare) {\n              viewValue.compare = compare;\n              return viewValue;\n            }\n            var parsedDate1;\n            var parsedDate2;\n            if (compare) {\n              parsedDate1 = dateParser.parse(viewValue.compareStartDate, controller.$compareDateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.compareEndDate, controller.$compareDateValue[1]);\n            } else {\n              parsedDate1 = dateParser.parse(viewValue.startDate, controller.$dateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.endDate, controller.$dateValue[1]);\n            }\n            if (parsedDate1 && !parsedDate2) {\n              parsedDate2 = angular.copy(parsedDate1);\n            }\n            if (!parsedDate1 && parsedDate2) {\n              parsedDate1 = angular.copy(parsedDate2);\n            }\n            if (!parsedDate1 || isNaN(parsedDate1.getTime()) || !parsedDate2 || isNaN(parsedDate2.getTime())) {\n              controller.$setValidity('date', false);\n              return false;\n            }\n            validateAgainstMinMaxDate(parsedDate1, parsedDate2);\n            var obj = {\n              dateRange: viewValue.dateRange,\n              compare: compare\n            };\n            var skey = '';\n            var ekey = '';\n            if (compare) {\n              // 原对比日期需要显示，因此这里还是要赋值\n              obj.startDate = viewValue.startDate;\n              obj.endDate = viewValue.endDate;\n              skey = 'compareStartDate';\n              ekey = 'compareEndDate';\n            } else {\n              obj.compareStartDate = viewValue.compareStartDate;\n              obj.compareEndDate = viewValue.compareEndDate;\n              skey = 'startDate';\n              ekey = 'endDate';\n            }\n            if (options.dateType === 'string') {\n              obj[skey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate1, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              obj[ekey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate2, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              return obj;\n            }\n            var date1;\n            var date2;\n            if (compare) {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[1], options.timezone, true);\n            } else {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$dateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$dateValue[1], options.timezone, true);\n            }\n            if (options.dateType === 'number') {\n              obj[skey] = date1.getTime();\n              obj[ekey] = date2.getTime();\n            } else if (options.dateType === 'unix') {\n              obj[skey] = date1.getTime() / 1e3;\n              obj[ekey] = date2.getTime() / 1e3;\n            } else if (options.dateType === 'iso') {\n              obj[skey] = date1.toISOString();\n              obj[ekey] = date2.toISOString();\n            } else {\n              obj[skey] = new Date(date1);\n              obj[ekey] = new Date(date2);\n            }\n            return obj;\n          });\n          controller.$formatters.push(function (modelValue) {\n            if (angular.isUndefined(modelValue) || modelValue === null) {\n              return '';\n            }\n            if (modelValue.dateRange) {\n              controller.$dateRange = modelValue.dateRange;\n              controller.$dateValue = !controller.$dateValue ? [] : controller.$dateValue;\n              rangedatepicker.$selectRange(controller.$dateRange);\n            } else {\n              controller.$dateValue = [];\n              controller.$compareDateValue = [];\n              if (modelValue.startDate && modelValue.endDate) {\n                var startDate = getFormattedDate(modelValue.startDate);\n                var endDate = getFormattedDate(modelValue.endDate);\n                controller.$dateValue = [dateParser.timezoneOffsetAdjust(startDate, options.timezone), dateParser.timezoneOffsetAdjust(endDate, options.timezone)];\n              }\n              if (modelValue.compareStartDate && modelValue.compareEndDate) {\n                var compareStartDate = getFormattedDate(modelValue.compareStartDate);\n                var compareEndDate = getFormattedDate(modelValue.compareEndDate);\n                controller.$compareDateValue = [dateParser.timezoneOffsetAdjust(compareStartDate, options.timezone), dateParser.timezoneOffsetAdjust(compareEndDate, options.timezone)];\n                if (modelValue.compare) {\n                  rangedatepicker.$setCompare();\n                }\n              }\n            }\n            return getDateFormattedString();\n          });\n          controller.$render = function () {\n            element.val(getDateFormattedString());\n          };\n          function getDateFormattedString () {\n            if (!controller.$modelValue || !controller.$modelValue.startDate || isNaN(controller.$modelValue.startDate.getTime())) {\n              return '';\n            }\n            var html = formatDate(controller.$modelValue.startDate, options.dateFormat);\n            if (controller.$modelValue.compare && controller.$modelValue.compareStartDate && !isNaN(controller.$modelValue.compareStartDate.getTime())) {\n              html += ' vs ' + formatDate(controller.$modelValue.compareStartDate, options.dateFormat);\n            } else if (!controller.$modelValue.compare && controller.$modelValue.endDate && !isNaN(controller.$modelValue.endDate.getTime())) {\n              html += ' / ' + formatDate(controller.$modelValue.endDate, options.dateFormat);\n            }\n            return html;\n          }\n          scope.$on('$destroy', function () {\n            if (rangedatepicker) rangedatepicker.destroy();\n            options = null;\n            rangedatepicker = null;\n          });\n        }\n      };\n    }])\n  .provider('rangedatepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      return function (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = (picker.$date && picker.$date[0]) || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var endDate = (picker.$date && picker.$date[1]) || (options.endDate ? dateParser.getDateForAttribute('endDate', options.endDate) : new Date());\n        var viewDate = {\n          startDate: {\n            year: startDate.getFullYear(),\n            month: startDate.getMonth(),\n            date: startDate.getDate()\n          },\n          endDate: {\n            year: endDate.getFullYear(),\n            month: endDate.getMonth(),\n            date: endDate.getDate()\n          }\n        };\n\n        var today = new Date();\n        var t = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        var d = today.getDay();\n        var views = [{\n          format: options.dayFormat,\n          split: 7,\n          steps: {\n            month: 1\n          },\n          rangeList: [\n            {name: 'Today', value: '0d', date: {start: t, end: t}},\n            {name: 'Yesterday', value: '-2d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1)}},\n            {name: 'Last 7 Days', value: '-7d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6), end: t}},\n            {name: 'Last Week', value: '-1w', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6 - d), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - d)}},\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}}\n          ],\n          update: function (sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function () {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var item = viewDate[value];\n              var firstDayOfMonth = new Date(item.year, item.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var currentDate = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === currentDate,\n                  label: formatDate(day, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], day),\n                  inRange: that.isInRange(day),\n                  muted: day.getMonth() !== item.month,\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(day, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], day)\n                });\n              }\n              scope.title[index] = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.rows[index] = split(days, that.split);\n            });\n            scope.showLabels = true;\n            scope.labels = weekDaysLabelsHtml;\n            scope.isTodayDisabled = this.isDisabled(new Date());\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              that.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === picker.$date[0].toDateString() && item.date.end.toDateString() === picker.$date[1].toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            this.built = true;\n          },\n          isSelected: function (currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth() &&\n              date.getDate() === currentDate.getDate();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function (date, index) {\n            var time = date.getTime();\n            if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            if (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1]))) {\n              return true;\n            }\n            if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) {\n              return true;\n            }\n            if (options.disabledDateRanges) {\n              for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                  return true;\n                }\n              }\n            }\n            return false;\n          }\n        }, {\n          name: 'month',\n          format: options.monthFormat,\n          split: 4,\n          steps: {\n            year: 1\n          },\n          rangeList: [\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}},\n            {name: 'Two Months Ago', value: '-2m', date: {start: new Date(t.getFullYear(), t.getMonth() - 2, 1), end: new Date(t.getFullYear(), t.getMonth() - 1, 0)}}\n          ],\n          update: function(sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function() {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var months = [];\n              var month;\n\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate[value].year, i, 1);\n                months.push({\n                  date: month,\n                  label: formatDate(month, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], month),\n                  inRange: that.isInRange(month),\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(month, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], month)\n                });\n              }\n              scope.title[index] = formatDate(month, options.yearTitleFormat);\n              scope.rows[index] = split(months, that.split);\n            });\n            scope.showLabels = false;\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              that.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === picker.$date[0].toDateString() && item.date.end.toDateString() === picker.$date[1].toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            this.built = true;\n\n          },\n          isSelected: function(currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function(date, index) {\n            var time = date.getTime();\n            var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n            if (lastDate < options.minDate || date.getTime() > options.maxDate) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            return (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1])));\n          }\n        }];\n        return {\n          views: Array.prototype.slice.call(views, options.minView, options.minView + 1),\n          viewDate: viewDate\n        };\n      };\n    }];\n  });\n\n// Source: popover/popover.js\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      // uncommenting the next two lines will break backwards compatability\n      // prefixClass: 'popover',\n      // prefixEvent: 'popover',\n      container: false,\n      target: false,\n      placement: 'right',\n      templateUrl: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function ($tooltip) {\n\n      function PopoverFactory (element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if (options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function ($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr) {\n\n        var popover;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent', 'bsEnabled'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n              if (angular.isDefined(oldValue)) {\n                requestAnimationFrame(function () {\n                  if (popover) popover.$applyPlacement();\n                });\n              }\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsPopover) {\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              requestAnimationFrame(function () {\n                if (popover) popover.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n            if (newValue === true) {\n              popover.show();\n            } else {\n              popover.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(popover),?/i);\n            if (newValue === false) {\n              popover.setEnabled(false);\n            } else {\n              popover.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            popover.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: pagination/pagination.js\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n\n// Source: modal/modal.js\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n\n// Source: helpers/raf.js\nif (angular.version.minor < 3 && angular.version.dot < 14) {\n  angular.module('ng')\n\n  .factory('$$rAF', function ($window, $timeout) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported ?\n      function (fn) {\n        var id = requestAnimationFrame(fn);\n        return function () {\n          cancelAnimationFrame(id);\n        };\n      } :\n      function (fn) {\n        var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n        return function () {\n          $timeout.cancel(timer);\n        };\n      };\n\n    raf.supported = rafSupported;\n\n    return raf;\n\n  });\n}\n\n// Source: helpers/parse-options.js\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function () {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function ($parse, $q) {\n\n      function ParseOptionsFactory (attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match;\n        var displayFn;\n        var valueName;\n        /* eslint-disable no-unused-vars */\n        var keyName;\n        var groupByFn;\n        /* eslint-enable no-unused-vars */\n        var valueFn;\n        var valuesFn;\n\n        $parseOptions.init = function () {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]);\n          valueName = match[4] || match[6];\n          keyName = match[5];\n          groupByFn = $parse(match[3] || '');\n          valueFn = $parse(match[2] ? match[1] : valueName);\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function (scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function (values) {\n            if (!angular.isArray(values)) {\n              values = [];\n            }\n            $parseOptions.$values = values.length ? parseValues(values, scope) : [];\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function (modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues (values, scope) {\n          return values.map(function (match, index) {\n            var locals = {};\n            var label;\n            var value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n\n// Source: helpers/dimensions.js\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function () {\n\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function (element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function (element, prop, extra) {\n      var value;\n      if (element.currentStyle) { // IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function (element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides set equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip\n     * @url http://api.jquery.com/offset/\n     * @param element\n     * @param options\n     * @param i\n     */\n    fn.setOffset = function (element, options, i) {\n      var curPosition;\n      var curLeft;\n      var curCSSTop;\n      var curTop;\n      var curOffset;\n      var curCSSLeft;\n      var calculatePosition;\n      var position = fn.css(element, 'position');\n      var curElem = angular.element(element);\n      var props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        element.style.position = 'relative';\n      }\n\n      curOffset = fn.offset(element);\n      curCSSTop = fn.css(element, 'top');\n      curCSSLeft = fn.css(element, 'left');\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = fn.position(element);\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (angular.isFunction(options)) {\n        options = options.call(element, i, curOffset);\n      }\n\n      if (options.top !== null) {\n        props.top = (options.top - curOffset.top) + curTop;\n      }\n      if (options.left !== null) {\n        props.left = (options.left - curOffset.left) + curLeft;\n      }\n\n      if ('using' in options) {\n        options.using.call(curElem, props);\n      } else {\n        curElem.css({\n          top: props.top + 'px',\n          left: props.left + 'px'\n        });\n      }\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function (element) {\n\n      var offsetParentRect = {top: 0, left: 0};\n      var offsetParentEl;\n      var offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentEl\n        offsetParentEl = offsetParentElement(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentEl, 'html')) {\n          offsetParentRect = fn.offset(offsetParentEl);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    function offsetParentElement (element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    }\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function (element, outer) {\n      var value = element.offsetHeight;\n      if (outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function (element, outer) {\n      var value = element.offsetWidth;\n      if (outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n\n// Source: helpers/debounce.js\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', function ($timeout) {\n  return function (func, wait, immediate) {\n    var timeout = null;\n    return function () {\n      var context = this;\n      var args = arguments;\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if (callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = null;\n    if (!options) options = {};\n    return function () {\n      var context = this;\n      var args = arguments;\n      if (!timeout) {\n        if (options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later () {\n          timeout = null;\n          if (options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n});\n\n// Source: helpers/date-parser.js\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function ($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate () {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function (value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function (value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function (value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function (value) { this.hours = value; };\n  ParseDate.prototype.getHours = function () { return this.hours; };\n  ParseDate.prototype.setDate = function (value) { this.day = value; };\n  ParseDate.prototype.setMonth = function (value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function (value) { this.year = value; };\n  ParseDate.prototype.fromDate = function (value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function () {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop () {\n  }\n\n  function isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive (array, value) {\n    var len = array.length;\n    var str = value.toString().toLowerCase();\n    for (var i = 0; i < len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function ($locale, dateFilter) {\n\n    var DateParserFactory = function (config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      /* eslint-disable key-spacing, quote-props */\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}'\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function (value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function (value) { return this.setMonth(1 * value - 1); },\n        'M'     : function (value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function (value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : function (value) { return (1 * value <= 50 && value.length === 2) ? this.setFullYear(2000 + 1 * value) : this.setFullYear(1 * value); }\n      };\n      /* eslint-enable key-spacing, quote-props */\n\n      var regex;\n      var setMap;\n\n      $dateParser.init = function () {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function (date) {\n        if (angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function (value, baseDate, format, timezone) {\n        // check for date format special names\n        if (format) format = $locale.DATETIME_FORMATS[format] || format;\n        if (angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format, timezone);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if (!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for (var i = 0; i < matches.length - 1; i++) {\n          if (formatSetMap[i]) formatSetMap[i].call(date, matches[i + 1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function (key, value) {\n        var date;\n\n        if (value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if (isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && value.length === 0) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function (key, value) {\n        var time;\n\n        if (value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if (isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.length === 0) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function (date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      /* Correct the date for timezone offset.\n      * @param  date  (Date) the date to adjust\n      * @param  timezone  (string) the timezone to adjust for\n      * @param  undo  (boolean) to add or subtract timezone offset\n      * @return  (Date) the corrected date\n      */\n      $dateParser.timezoneOffsetAdjust = function (date, timezone, undo) {\n        if (!date) {\n          return null;\n        }\n        // Right now, only 'UTC' is supported.\n        if (timezone && timezone === 'UTC') {\n          date = new Date(date.getTime());\n          date.setMinutes(date.getMinutes() + (undo ? -1 : 1) * date.getTimezoneOffset());\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function regExpForFormat (format) {\n        // `format` string can contain literal values.\n        // These need to be escaped by surrounding with\n        // single quotes (e.g. `\"h 'in the morning'\"`).\n        // In order to output a single quote, escape it - i.e.,\n        // two single quotes in a sequence (e.g. `\"h 'o''clock'\"`).\n\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseRegex(re);\n      }\n\n      function buildDateAbstractRegex (format) {\n        var escapedFormat = escapeReservedSymbols(format);\n        var escapedLiteralFormat = escapedFormat.replace(/''/g, '\\\\\\'');\n        var literalRegex = /('(?:\\\\'|.)*?')/;\n        var formatParts = escapedLiteralFormat.split(literalRegex);\n        var dateElements = Object.keys(regExpMap);\n        var dateRegexParts = [];\n\n        angular.forEach(formatParts, function (part) {\n          if (isFormatStringLiteral(part)) {\n            part = trimLiteralEscapeChars(part);\n          } else {\n            // Abstract replaces to avoid collisions\n            for (var i = 0; i < dateElements.length; i++) {\n              part = part.split(dateElements[i]).join('${' + i + '}');\n            }\n          }\n          dateRegexParts.push(part);\n        });\n\n        return dateRegexParts.join('');\n      }\n\n      function escapeReservedSymbols (text) {\n        return text.replace(/\\\\/g, '[\\\\\\\\]')\n                   .replace(/-/g, '[-]')\n                   .replace(/\\./g, '[.]')\n                   .replace(/\\*/g, '[*]')\n                   .replace(/\\+/g, '[+]')\n                   .replace(/\\?/g, '[?]')\n                   .replace(/\\$/g, '[$]')\n                   .replace(/\\^/g, '[^]')\n                   .replace(/\\//g, '[/]')\n                   .replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function isFormatStringLiteral (text) {\n        return /^'.*'$/.test(text);\n      }\n\n      function trimLiteralEscapeChars (text) {\n        return text.replace(/^'(.*)'$/, '$1');\n      }\n\n      function buildDateParseRegex (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var re = abstractRegex;\n\n        // Replace abstracted values\n        for (var i = 0; i < dateElements.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[dateElements[i]] + ')');\n        }\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      function setMapForFormat (format) {\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseValuesMap(re);\n      }\n\n      function buildDateParseValuesMap (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var valuesRegex = new RegExp('\\\\${(\\\\d+)}', 'g');\n        var valuesMatch;\n        var keyIndex;\n        var valueKey;\n        var valueFunction;\n        var valuesFunctionMap = [];\n\n        /* eslint-disable no-cond-assign */\n        while ((valuesMatch = valuesRegex.exec(abstractRegex)) !== null) {\n          keyIndex = valuesMatch[1];\n          valueKey = dateElements[keyIndex];\n          valueFunction = setFnMap[valueKey];\n\n          valuesFunctionMap.push(valueFunction);\n        }\n\n        return valuesFunctionMap;\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n\n// Source: helpers/date-formatter.js\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n\n// Source: helpers/compiler.js\n// NOTICE: This file was forked from the angular-material project (github.com/angular/material)\n// MIT Licensed - Copyright (c) 2014-2015 Google, Inc. http://angularjs.org\n\nangular.module('mgcrea.ngStrap.core', [])\n  .service('$bsCompiler', bsCompilerService);\n\nfunction bsCompilerService ($q, $http, $injector, $compile, $controller, $templateCache) {\n\n  /*\n   * @ngdoc service\n   * @name $bsCompiler\n   * @module material.core\n   * @description\n   * The $bsCompiler service is an abstraction of angular's compiler, that allows the developer\n   * to easily compile an element with a templateUrl, controller, and locals.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * $bsCompiler.compile({\n   *   templateUrl: 'modal.html',\n   *   controller: 'ModalCtrl',\n   *   locals: {\n   *     modal: myModalInstance;\n   *   }\n   * }).then(function(compileData) {\n   *   compileData.element; // modal.html's template in an element\n   *   compileData.link(myScope); //attach controller & scope to element\n   * });\n   * </hljs>\n   */\n\n   /*\n    * @ngdoc method\n    * @name $bsCompiler#compile\n    * @description A helper to compile an HTML template/templateUrl with a given controller,\n    * locals, and scope.\n    * @param {object} options An options object, with the following properties:\n    *\n    *    - `controller` - `{(string=|function()=}` Controller fn that should be associated with\n    *      newly created scope or the name of a registered controller if passed as a string.\n    *    - `controllerAs` - `{string=}` A controller alias name. If present the controller will be\n    *      published to scope under the `controllerAs` name.\n    *    - `template` - `{string=}` An html template as a string.\n    *    - `templateUrl` - `{string=}` A path to an html template.\n    *    - `transformTemplate` - `{function(template)=}` A function which transforms the template after\n    *      it is loaded. It will be given the template string as a parameter, and should\n    *      return a a new string representing the transformed template.\n    *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n    *      be injected into the controller. If any of these dependencies are promises, the compiler\n    *      will wait for them all to be resolved, or if one is rejected before the controller is\n    *      instantiated `compile()` will fail..\n    *      * `key` - `{string}`: a name of a dependency to be injected into the controller.\n    *      * `factory` - `{string|function}`: If `string` then it is an alias for a service.\n    *        Otherwise if function, then it is injected and the return value is treated as the\n    *        dependency. If the result is a promise, it is resolved before its value is\n    *        injected into the controller.\n    *\n    * @returns {object=} promise A promise, which will be resolved with a `compileData` object.\n    * `compileData` has the following properties:\n    *\n    *   - `element` - `{element}`: an uncompiled element matching the provided template.\n    *   - `link` - `{function(scope)}`: A link function, which, when called, will compile\n    *     the element and instantiate the provided controller (if given).\n    *   - `locals` - `{object}`: The locals which will be passed into the controller once `link` is\n    *     called. If `bindToController` is true, they will be coppied to the ctrl instead\n    *   - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n    */\n  this.compile = function (options) {\n\n    if (options.template && /\\.html$/.test(options.template)) {\n      console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.');\n      options.templateUrl = options.template;\n      options.template = '';\n    }\n\n    var templateUrl = options.templateUrl;\n    var template = options.template || '';\n    var controller = options.controller;\n    var controllerAs = options.controllerAs;\n    var resolve = angular.copy(options.resolve || {});\n    var locals = angular.copy(options.locals || {});\n    var transformTemplate = options.transformTemplate || angular.identity;\n    var bindToController = options.bindToController;\n\n    // Take resolve values and invoke them.\n    // Resolves can either be a string (value: 'MyRegisteredAngularConst'),\n    // or an invokable 'factory' of sorts: (value: function ValueGetter($dependency) {})\n    angular.forEach(resolve, function (value, key) {\n      if (angular.isString(value)) {\n        resolve[key] = $injector.get(value);\n      } else {\n        resolve[key] = $injector.invoke(value);\n      }\n    });\n    // Add the locals, which are just straight values to inject\n    // eg locals: { three: 3 }, will inject three into the controller\n    angular.extend(resolve, locals);\n\n    if (template) {\n      resolve.$template = $q.when(template);\n    } else if (templateUrl) {\n      resolve.$template = fetchTemplate(templateUrl);\n    } else {\n      throw new Error('Missing `template` / `templateUrl` option.');\n    }\n\n    if (options.titleTemplate) {\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.titleTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          findElement('[ng-bind=\"title\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    if (options.contentTemplate) {\n      // TODO(mgcrea): deprecate?\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.contentTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n          if (!options.templateUrl) contentEl.next().remove();\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    // Wait for all the resolves to finish if they are promises\n    return $q.all(resolve).then(function (locals) {\n\n      var template = transformTemplate(locals.$template);\n      if (options.html) {\n        template = template.replace(/ng-bind=\"/ig, 'ng-bind-html=\"');\n      }\n      // var element = options.element || angular.element('<div>').html(template.trim()).contents();\n      var element = angular.element('<div>').html(template.trim()).contents();\n      var linkFn = $compile(element);\n\n      // Return a linking function that can be used later when the element is ready\n      return {\n        locals: locals,\n        element: element,\n        link: function link (scope) {\n          locals.$scope = scope;\n\n          // Instantiate controller if it exists, because we have scope\n          if (controller) {\n            var invokeCtrl = $controller(controller, locals, true);\n            if (bindToController) {\n              angular.extend(invokeCtrl.instance, locals);\n            }\n            // Support angular@~1.2 invokeCtrl\n            var ctrl = angular.isObject(invokeCtrl) ? invokeCtrl : invokeCtrl();\n            // See angular-route source for this logic\n            element.data('$ngControllerController', ctrl);\n            element.children().data('$ngControllerController', ctrl);\n\n            if (controllerAs) {\n              scope[controllerAs] = ctrl;\n            }\n          }\n\n          return linkFn.apply(null, arguments);\n        }\n      };\n    });\n\n  };\n\n  function findElement (query, element) {\n    return angular.element((element || document).querySelectorAll(query));\n  }\n\n  var fetchPromises = {};\n  function fetchTemplate (template) {\n    if (fetchPromises[template]) return fetchPromises[template];\n    return (fetchPromises[template] = $http.get(template, {cache: $templateCache})\n      .then(function (res) {\n        return res.data;\n      }));\n  }\n\n}\n\n// Source: dropdown/dropdown.js\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) return;\n          if (options.keyboard && $dropdown.$element) $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          var options = {scope: scope};\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n\n// Source: datetimepicker/datetimepicker.js\n/**\n * Created by xiashan on 17/12/8.\n */\nangular.module('mgcrea.ngStrap.datetimepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip'])\n  .provider('datetimepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      function DatetimepickerViewsFactory (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var format = $dateFormatter.getDatetimeFormat(options.dateFormat, lang);\n        var timeSeparator = $dateFormatter.timeSeparator(format);\n        var showSeconds = $dateFormatter.showSeconds(format);\n        scope.$iconUp = options.iconUp;\n        scope.$iconDown = options.iconDown;\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n        var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var viewDate = {\n          year: startDate.getFullYear(),\n          month: startDate.getMonth(),\n          date: startDate.getDate(),\n          hour: startDate.getHours(),\n          minute: startDate.getMinutes(),\n          second: startDate.getSeconds(),\n          millisecond: startDate.getMilliseconds()\n        };\n        var views = [\n          {\n            hourFormat: options.hourFormat,\n            minuteFormat: options.minuteFormat,\n            secondFormat: options.secondFormat,\n            split: 7,\n            steps: {\n              date: 1\n            },\n            update: function (date, force) {\n              if (angular.isDate(date) && !isNaN(date.getTime())) {\n                // picker.$date === date\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate(),\n                  hour: picker.$date.getHours(),\n                  minute: picker.$date.getMinutes(),\n                  second: picker.$date.getSeconds(),\n                  millisecond: picker.$date.getMilliseconds()\n                });\n                picker.$build();\n              } else if (!this.built || force) {\n                picker.$build();\n              }\n            },\n            build: function () {\n              var i;\n              var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n              var hours = [];\n              var hour;\n              var step;\n              for (i = 0; i < options.length; i++) {\n                // hour = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour - (midIndex - i) * options.hourStep);\n                step = viewDate.hour - (midIndex - i) * options.hourStep;\n                step = step < 0 ? (24 + step) : step;\n                hour = new Date(viewDate.year, viewDate.month, viewDate.date, step, viewDate.minute, viewDate.second);\n                hours.push({\n                  date: hour,\n                  label: formatDate(hour, this.hourFormat),\n                  selected: picker.$date && this.isSelected(hour, 0),\n                  disabled: this.isDisabled(hour, 0)\n                  // selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n                  // disabled: $timepicker.$isDisabled(hour, 0)\n                });\n              }\n              var minutes = [];\n              var minute;\n              for (i = 0; i < options.length; i++) {\n                // minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n                step = viewDate.minute - (midIndex - i) * options.minuteStep;\n                step = step < 0 ? (60 + step) : step;\n                minute = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, step, viewDate.second);\n                minutes.push({\n                  date: minute,\n                  label: formatDate(minute, this.minuteFormat),\n                  selected: picker.$date && this.isSelected(minute, 1),\n                  disabled: this.isDisabled(minute, 1)\n                });\n              }\n              var seconds = [];\n              var second;\n              for (i = 0; i < options.length; i++) {\n                // second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n                step = viewDate.second - (midIndex - i) * options.secondStep;\n                step = step < 0 ? (60 + step) : step;\n                second = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute, step);\n                seconds.push({\n                  date: second,\n                  label: formatDate(second, this.secondFormat),\n                  selected: picker.$date && this.isSelected(second, 2),\n                  disabled: this.isDisabled(second, 2)\n                });\n              }\n              var rows = [];\n              for (i = 0; i < options.length; i++) {\n                if (showSeconds) {\n                  rows.push([hours[i], minutes[i], seconds[i]]);\n                } else {\n                  rows.push([hours[i], minutes[i]]);\n                }\n              }\n              scope.title = formatDate(new Date(viewDate.year, viewDate.month, viewDate.date), options.timeTitleFormat);\n              scope.rows = rows;\n              scope.showSeconds = showSeconds;\n              scope.timeSeparator = timeSeparator;\n              this.built = true;\n            },\n            isSelected: function (date, index) {\n              if (!picker.$date) {\n                return false;\n              } else if (index === 0) {\n                return date.getHours() === picker.$date.getHours();\n              } else if (index === 1) {\n                return date.getMinutes() === picker.$date.getMinutes();\n              } else if (index === 2) {\n                return date.getSeconds() === picker.$date.getSeconds();\n              }\n              return false;\n            },\n            isDisabled: function (date, index) {\n              var time = date.getTime();\n              return options.minDate && angular.isDate(options.minDate) && time < options.minDate.getTime() ||\n                (options.maxDate && angular.isDate(options.maxDate) && time > options.maxDate.getTime());\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n            }\n          },\n          {\n            format: options.dayFormat,\n            split: 7,\n            steps: {\n              month: 1\n            },\n            update: function (date, force) {\n              if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n                viewDate.date = picker.$date.getDate();\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === today,\n                  label: formatDate(day, this.format),\n                  selected: picker.$date && this.isSelected(day),\n                  muted: day.getMonth() !== viewDate.month,\n                  disabled: this.isDisabled(day)\n                });\n              }\n              scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.showLabels = true;\n              scope.labels = weekDaysLabelsHtml;\n              scope.rows = split(days, this.split);\n              scope.isTodayDisabled = this.isDisabled(new Date());\n              this.built = true;\n            },\n            isSelected: function (date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n            },\n            isDisabled: function (date) {\n              var time = date.getTime();\n              if (options.minDate && angular.isDate(options.minDate)) {\n                var minDate = new Date(options.minDate.getFullYear(), options.minDate.getMonth(), options.minDate.getDate(), 0, 0, 0);\n                if (time < Date.parse(minDate)) {\n                  return true;\n                }\n              }\n              if (options.maxDate && angular.isDate(options.maxDate)) {\n                var maxDate = new Date(options.maxDate.getFullYear(), options.maxDate.getMonth(), options.maxDate.getDate() + 1, 0, 0, 0);\n                if (time >= Date.parse(maxDate)) {\n                  return true;\n                }\n              }\n              // if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n              if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n              if (options.disabledDateRanges) {\n                for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                  if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualTime = picker.$date.getTime();\n              var newDate;\n              if (evt.keyCode === 37) {\n                newDate = new Date(actualTime - 1 * 864e5);\n              } else if (evt.keyCode === 38) {\n                newDate = new Date(actualTime - 7 * 864e5);\n              } else if (evt.keyCode === 39) {\n                newDate = new Date(actualTime + 1 * 864e5);\n              } else if (evt.keyCode === 40) {\n                newDate = new Date(actualTime + 7 * 864e5);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          },\n          {\n            name: 'month',\n            format: options.monthFormat,\n            split: 4,\n            steps: {\n              year: 1\n            },\n            update: function (date, force) {\n              if (!this.built || date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var months = [];\n              var month;\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate.year, i, 1);\n                months.push({\n                  date: month,\n                  label: formatDate(month, this.format),\n                  selected: picker.$isSelected(month),\n                  disabled: this.isDisabled(month)\n                });\n              }\n              scope.title = formatDate(month, options.yearTitleFormat);\n              scope.showLabels = false;\n              scope.rows = split(months, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n            },\n            isDisabled: function(date) {\n              var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function(evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualMonth = picker.$date.getMonth();\n              var newDate = new Date(picker.$date);\n              if (evt.keyCode === 37) {\n                newDate.setMonth(actualMonth - 1);\n              } else if (evt.keyCode === 38) {\n                newDate.setMonth(actualMonth - 4);\n              } else if (evt.keyCode === 39) {\n                newDate.setMonth(actualMonth + 1);\n              } else if (evt.keyCode === 40) {\n                newDate.setMonth(actualMonth + 4);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          },\n          {\n            name: 'year',\n            format: options.yearFormat,\n            split: 4,\n            steps: {\n              year: 12\n            },\n            update: function (date, force) {\n              if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n              var years = [];\n              var year;\n              for (var i = 0; i < 12; i++) {\n                year = new Date(firstYear + i, 0, 1);\n                years.push({\n                  date: year,\n                  label: formatDate(year, this.format),\n                  selected: picker.$isSelected(year),\n                  disabled: this.isDisabled(year)\n                });\n              }\n              scope.title = years[0].label + '-' + years[years.length - 1].label;\n              scope.showLabels = false;\n              scope.rows = split(years, this.split);\n              this.built = true;\n            },\n            isSelected: function (date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n            },\n            isDisabled: function (date) {\n              var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualYear = picker.$date.getFullYear();\n              var newDate = new Date(picker.$date);\n              if (evt.keyCode === 37) {\n                newDate.setYear(actualYear - 1);\n              } else if (evt.keyCode === 38) {\n                newDate.setYear(actualYear - 4);\n              } else if (evt.keyCode === 39) {\n                newDate.setYear(actualYear + 1);\n              } else if (evt.keyCode === 40) {\n                newDate.setYear(actualYear + 4);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          }];\n        return {\n          views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n          viewDate: viewDate\n        };\n      }\n      return DatetimepickerViewsFactory;\n    }];\n  })\n  .provider('$datetimepicker', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'datepicker',\n      placement: 'bottom-left',\n      templateUrl: 'datetimepicker/datetimepicker.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      dateType: 'date',\n      dateFormat: 'shortDate',\n      timezone: null,\n      modelDateFormat: null,\n      hourFormat: 'HH',\n      minuteFormat: 'mm',\n      secondFormat: 'ss',\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      timeTitleFormat: 'dd MMM',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      startView: 1,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      hasToday: false,\n      hasClear: false,\n      length: 5,\n      hourStep: 1,\n      minuteStep: 5,\n      secondStep: 5,\n      roundDisplay: false,\n      iconUp: 'nox-sort-up',\n      iconDown: 'nox-sort-down',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      arrowBehavior: 'pager'\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datetimepickerViews', '$tooltip', '$timeout', function ($window, $document, $rootScope, $sce, $dateFormatter, datetimepickerViews, $tooltip, $timeout) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      var isTouch = 'createTouch' in $window.document && isNative;\n      if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n      function DatetimepickerFactory (element, controller, config) {\n        var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n        var parentScope = config.scope;\n        var options = $datepicker.$options;\n        var scope = $datepicker.$scope;\n        if (options.startView) options.startView -= options.minView;\n        var pickerViews = datetimepickerViews($datepicker);\n        $datepicker.$views = pickerViews.views;\n        var viewDate = pickerViews.viewDate;\n        scope.$mode = options.startView;\n        scope.$iconLeft = options.iconLeft;\n        scope.$iconRight = options.iconRight;\n        scope.$hasToday = options.hasToday;\n        scope.$hasClear = options.hasClear;\n        var $picker = $datepicker.$views[scope.$mode];\n        scope.$select = function(date) {\n          $datepicker.select(date);\n        };\n        scope.$selectPane = function(value) {\n          $datepicker.$selectPane(value);\n        };\n        scope.$selectTime = function(date, index) {\n          $datepicker.selectTime(date, index);\n        };\n        scope.$arrowAction = function(value, index) {\n          if (options.arrowBehavior === 'picker') {\n            $datepicker.$setTimeByStep(value, index);\n          } else {\n            $datepicker.$moveIndex(value, index);\n          }\n        };\n        scope.$toggleMode = function() {\n          $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n        };\n        scope.$setToday = function() {\n          if (options.autoclose) {\n            $datepicker.setMode(0);\n            $datepicker.select(new Date());\n          } else {\n            $datepicker.select(new Date(), true);\n          }\n        };\n        scope.$clear = function() {\n          if (options.autoclose) {\n            $datepicker.setMode(0);\n            $datepicker.select(null);\n          } else {\n            $datepicker.select(null, true);\n          }\n        };\n        $datepicker.update = function(date) {\n          if (angular.isDate(date) && !isNaN(date.getTime())) {\n            $datepicker.$date = date;\n            $picker.update.call($picker, date);\n          }\n          $datepicker.$build(true);\n        };\n        $datepicker.updateDisabledDates = function(dateRanges) {\n          options.disabledDateRanges = dateRanges;\n          for (var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n          }\n        };\n        $datepicker.select = function(date, keep) {\n          if (angular.isDate(date)) {\n            if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n              controller.$dateValue = new Date(date);\n            }\n          } else {\n            controller.$dateValue = null;\n          }\n          if (!scope.$mode || keep) {\n            controller.$setViewValue(angular.copy(date));\n            controller.$render();\n            if (options.autoclose && !keep) {\n              $timeout(function() {\n                $datepicker.hide(true);\n              });\n            }\n          } else {\n            angular.extend(viewDate, {\n              year: date.getFullYear(),\n              month: date.getMonth(),\n              date: date.getDate(),\n              hour: date.getHours(),\n              minute: date.getMinutes(),\n              second: date.getSeconds(),\n              millisecond: date.getMilliseconds()\n            });\n            $datepicker.setMode(scope.$mode - 1);\n            $datepicker.$build();\n          }\n        };\n        $datepicker.selectTime = function(date, index, keep) {\n          if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date();\n          }\n          if (!angular.isDate(date)) {\n            date = new Date(date);\n          }\n          controller.$dateValue.setFullYear(date.getFullYear());\n          controller.$dateValue.setMonth(date.getMonth());\n          controller.$dateValue.setDate(date.getDate());\n          if (index === 0) {\n            controller.$dateValue.setHours(date.getHours());\n          } else if (index === 1) {\n            controller.$dateValue.setMinutes(date.getMinutes());\n          } else if (index === 2) {\n            controller.$dateValue.setSeconds(date.getSeconds());\n          }\n          controller.$setViewValue(angular.copy(controller.$dateValue));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              // $datepicker.setMode(options.startView);\n              $datepicker.hide(true);\n            });\n          }\n        };\n        $datepicker.setMode = function(mode) {\n          scope.$mode = mode;\n          $picker = $datepicker.$views[scope.$mode];\n          $datepicker.$build();\n        };\n        $datepicker.$build = function(pristine) {\n          if (pristine === true && $picker.built) return;\n          if (pristine === false && !$picker.built) return;\n          $picker.build.call($picker);\n        };\n        function updateSelected(el) {\n          el.selected = $datepicker.$isSelected(el.date);\n        }\n        $datepicker.$updateSelected = function() {\n          for (var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], updateSelected);\n          }\n        };\n        $datepicker.$isSelected = function(date) {\n          return $picker.isSelected(date);\n        };\n        $datepicker.$setDisabledEl = function(el) {\n          el.disabled = $picker.isDisabled(el.date);\n        };\n        $datepicker.$selectPane = function(value) {\n          var steps = $picker.steps;\n          var targetDate = new Date(Date.UTC(\n            viewDate.year + (steps.year || 0) * value,\n            viewDate.month + (steps.month || 0) * value,\n            steps.date ? (viewDate.date + steps.date * value) : 1\n          ));\n          angular.extend(viewDate, {\n            year: targetDate.getUTCFullYear(),\n            month: targetDate.getUTCMonth(),\n            date: targetDate.getUTCDate()\n          });\n          $datepicker.$build();\n        };\n        $datepicker.$setTimeByStep = function(value, index) {\n          var newDate = new Date($datepicker.$date);\n          var hours = newDate.getHours();\n          var minutes = newDate.getMinutes();\n          var seconds = newDate.getSeconds();\n          if (index === 0) {\n            newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n          } else if (index === 1) {\n            newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n          } else if (index === 2) {\n            newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n          }\n          $datepicker.selectTime(newDate, index, true);\n        };\n        $datepicker.$moveIndex = function(value, index) {\n          var targetDate;\n          if (index === 0) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n            angular.extend(viewDate, {\n              hour: targetDate.getHours()\n            });\n          } else if (index === 1) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n            angular.extend(viewDate, {\n              minute: targetDate.getMinutes()\n            });\n          } else if (index === 2) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n            angular.extend(viewDate, {\n              second: targetDate.getSeconds()\n            });\n          }\n          $datepicker.$build();\n        };\n        $datepicker.$onMouseDown = function(evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n              targetEl = targetEl.parent();\n            }\n            targetEl.triggerHandler('click');\n          }\n        };\n        $datepicker.$onKeyDown = function(evt) {\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (evt.keyCode === 13) {\n            if (!scope.$mode) {\n              $datepicker.hide(true);\n            } else {\n              scope.$apply(function() {\n                $datepicker.setMode(scope.$mode - 1);\n              });\n            }\n            return;\n          }\n          $picker.onKeyDown(evt);\n          parentScope.$digest();\n        };\n        function focusElement() {\n          element[0].focus();\n        }\n        var _init = $datepicker.init;\n        $datepicker.init = function() {\n          if (isNative && options.useNative) {\n            element.prop('type', 'date');\n            element.css('-webkit-appearance', 'textfield');\n            return;\n          } else if (isTouch) {\n            element.prop('type', 'text');\n            element.attr('readonly', 'true');\n            element.on('click', focusElement);\n          }\n          _init();\n        };\n        var _destroy = $datepicker.destroy;\n        $datepicker.destroy = function() {\n          if (isNative && options.useNative) {\n            element.off('click', focusElement);\n          }\n          _destroy();\n        };\n        var _show = $datepicker.show;\n        $datepicker.show = function() {\n          if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n          _show();\n          $timeout(function() {\n            if (!$datepicker.$isShown) return;\n            $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $datepicker.$onKeyDown);\n            }\n          }, 0, false);\n        };\n        var _hide = $datepicker.hide;\n        $datepicker.hide = function(blur) {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $datepicker.$onKeyDown);\n          }\n          _hide(blur);\n        };\n        return $datepicker;\n      }\n      DatetimepickerFactory.defaults = defaults;\n      return DatetimepickerFactory;\n    }];\n  })\n  .directive('bsDatetimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datetimepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datetimepicker) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n        var options = {\n          scope: scope\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        var datepicker = $datetimepicker(element, controller, options);\n        options = datepicker.$options;\n        if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n        var lang = options.lang;\n        var formatDate = function(date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function(newValue, oldValue) {\n            if (!datepicker || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n            if (newValue === true) {\n              datepicker.show();\n            } else {\n              datepicker.hide();\n            }\n          });\n        }\n        angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n          if (angular.isDefined(attr[key])) {\n            attr.$observe(key, function(newValue) {\n              datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n              if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n              validateAgainstMinMaxDate(controller.$dateValue);\n            });\n          }\n        });\n        if (angular.isDefined(attr.dateFormat)) {\n          attr.$observe('dateFormat', function(newValue) {\n            datepicker.$options.dateFormat = newValue;\n          });\n        }\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          datepicker.update(controller.$dateValue);\n        }, true);\n        function normalizeDateRanges(ranges) {\n          if (!ranges || !ranges.length) return null;\n          return ranges;\n        }\n        if (angular.isDefined(attr.disabledDates)) {\n          scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n            disabledRanges = normalizeDateRanges(disabledRanges);\n            previousValue = normalizeDateRanges(previousValue);\n            if (disabledRanges) {\n              datepicker.updateDisabledDates(disabledRanges);\n            }\n          });\n        }\n        function validateAgainstMinMaxDate(parsedDate) {\n          if (!angular.isDate(parsedDate)) return;\n          var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n          var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n          var isValid = isMinValid && isMaxValid;\n          controller.$setValidity('date', isValid);\n          controller.$setValidity('min', isMinValid);\n          controller.$setValidity('max', isMaxValid);\n          if (isValid) controller.$dateValue = parsedDate;\n        }\n        controller.$parsers.unshift(function(viewValue) {\n          var date;\n          if (!viewValue) {\n            controller.$setValidity('date', true);\n            return null;\n          }\n          var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n          if (!parsedDate || isNaN(parsedDate.getTime())) {\n            controller.$setValidity('date', false);\n            return;\n          }\n          validateAgainstMinMaxDate(parsedDate);\n          if (options.dateType === 'string') {\n            date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n            return formatDate(date, options.modelDateFormat || options.dateFormat);\n          }\n          date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n          if (options.dateType === 'number') {\n            return date.getTime();\n          } else if (options.dateType === 'unix') {\n            return date.getTime() / 1e3;\n          } else if (options.dateType === 'iso') {\n            return date.toISOString();\n          }\n          return new Date(date);\n        });\n        controller.$formatters.push(function(modelValue) {\n          var date;\n          if (angular.isUndefined(modelValue) || modelValue === null) {\n            date = NaN;\n          } else if (angular.isDate(modelValue)) {\n            date = modelValue;\n          } else if (options.dateType === 'string') {\n            date = dateParser.parse(modelValue, null, options.modelDateFormat);\n          } else if (options.dateType === 'unix') {\n            date = new Date(modelValue * 1e3);\n          } else {\n            date = new Date(modelValue);\n          }\n          controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n          return getDateFormattedString();\n        });\n        controller.$render = function() {\n          element.val(getDateFormattedString());\n        };\n        function getDateFormattedString() {\n          return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n        }\n        scope.$on('$destroy', function() {\n          if (datepicker) datepicker.destroy();\n          options = null;\n          datepicker = null;\n        });\n      }\n    };\n  }]);\n\n// Source: datepicker/datepicker.js\nangular.module('mgcrea.ngStrap.datepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$datepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    prefixClass: 'datepicker',\n    placement: 'bottom-left',\n    templateUrl: 'datepicker/datepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: false,\n    dateType: 'date',\n    dateFormat: 'shortDate',\n    timezone: null,\n    modelDateFormat: null,\n    dayFormat: 'dd',\n    monthFormat: 'MMM',\n    yearFormat: 'yyyy',\n    monthTitleFormat: 'MMMM yyyy',\n    yearTitleFormat: 'yyyy',\n    strictFormat: false,\n    autoclose: false,\n    minDate: -Infinity,\n    maxDate: +Infinity,\n    startView: 0,\n    minView: 0,\n    startWeek: 0,\n    daysOfWeekDisabled: '',\n    hasToday: false,\n    hasClear: false,\n    iconLeft: 'nox-sort-left',\n    iconRight: 'nox-sort-right'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datepickerViews', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n    function DatepickerFactory(element, controller, config) {\n      var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $datepicker.$options;\n      var scope = $datepicker.$scope;\n      if (options.startView) options.startView -= options.minView;\n      var pickerViews = datepickerViews($datepicker);\n      $datepicker.$views = pickerViews.views;\n      var viewDate = pickerViews.viewDate;\n      scope.$mode = options.startView;\n      scope.$iconLeft = options.iconLeft;\n      scope.$iconRight = options.iconRight;\n      scope.$hasToday = options.hasToday;\n      scope.$hasClear = options.hasClear;\n      var $picker = $datepicker.$views[scope.$mode];\n      scope.$select = function(date) {\n        $datepicker.select(date);\n      };\n      scope.$selectPane = function(value) {\n        $datepicker.$selectPane(value);\n      };\n      scope.$toggleMode = function() {\n        $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n      };\n      scope.$setToday = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(new Date());\n        } else {\n          $datepicker.select(new Date(), true);\n        }\n      };\n      scope.$clear = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(null);\n        } else {\n          $datepicker.select(null, true);\n        }\n      };\n      $datepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $datepicker.$date = date;\n          $picker.update.call($picker, date);\n        }\n        $datepicker.$build(true);\n      };\n      $datepicker.updateDisabledDates = function(dateRanges) {\n        options.disabledDateRanges = dateRanges;\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n        }\n      };\n      $datepicker.select = function(date, keep) {\n        if (angular.isDate(date)) {\n          if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date(date);\n          }\n        } else {\n          controller.$dateValue = null;\n        }\n        if (!scope.$mode || keep) {\n          controller.$setViewValue(angular.copy(date));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              $datepicker.hide(true);\n            });\n          }\n        } else {\n          angular.extend(viewDate, {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            date: date.getDate()\n          });\n          $datepicker.setMode(scope.$mode - 1);\n          $datepicker.$build();\n        }\n      };\n      $datepicker.setMode = function(mode) {\n        scope.$mode = mode;\n        $picker = $datepicker.$views[scope.$mode];\n        $datepicker.$build();\n      };\n      $datepicker.$build = function(pristine) {\n        if (pristine === true && $picker.built) return;\n        if (pristine === false && !$picker.built) return;\n        $picker.build.call($picker);\n      };\n      $datepicker.$updateSelected = function() {\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], updateSelected);\n        }\n      };\n      $datepicker.$isSelected = function(date) {\n        return $picker.isSelected(date);\n      };\n      $datepicker.$setDisabledEl = function(el) {\n        el.disabled = $picker.isDisabled(el.date);\n      };\n      $datepicker.$selectPane = function(value) {\n        var steps = $picker.steps;\n        var targetDate = new Date(Date.UTC(viewDate.year + (steps.year || 0) * value, viewDate.month + (steps.month || 0) * value, 1));\n        angular.extend(viewDate, {\n          year: targetDate.getUTCFullYear(),\n          month: targetDate.getUTCMonth(),\n          date: targetDate.getUTCDate()\n        });\n        $datepicker.$build();\n      };\n      $datepicker.$onMouseDown = function(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $datepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          if (!scope.$mode) {\n            $datepicker.hide(true);\n          } else {\n            scope.$apply(function() {\n              $datepicker.setMode(scope.$mode - 1);\n            });\n          }\n          return;\n        }\n        $picker.onKeyDown(evt);\n        parentScope.$digest();\n      };\n      function updateSelected(el) {\n        el.selected = $datepicker.$isSelected(el.date);\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $datepicker.init;\n      $datepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'date');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $datepicker.destroy;\n      $datepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $datepicker.show;\n      $datepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.on('keydown', $datepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $datepicker.hide;\n      $datepicker.hide = function(blur) {\n        if (!$datepicker.$isShown) return;\n        $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n        if (options.keyboard) {\n          element.off('keydown', $datepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $datepicker;\n    }\n    DatepickerFactory.defaults = defaults;\n    return DatepickerFactory;\n  } ];\n}).directive('bsDatepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      var datepicker = $datepicker(element, controller, options);\n      options = datepicker.$options;\n      if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!datepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          if (newValue === true) {\n            datepicker.show();\n          } else {\n            datepicker.hide();\n          }\n        });\n      }\n      angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        }\n      });\n      if (angular.isDefined(attr.dateFormat)) {\n        attr.$observe('dateFormat', function(newValue) {\n          datepicker.$options.dateFormat = newValue;\n        });\n      }\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        datepicker.update(controller.$dateValue);\n      }, true);\n      function normalizeDateRanges(ranges) {\n        if (!ranges || !ranges.length) return null;\n        return ranges;\n      }\n      if (angular.isDefined(attr.disabledDates)) {\n        scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n          disabledRanges = normalizeDateRanges(disabledRanges);\n          previousValue = normalizeDateRanges(previousValue);\n          if (disabledRanges) {\n            datepicker.updateDisabledDates(disabledRanges);\n          }\n        });\n      }\n      function validateAgainstMinMaxDate(parsedDate) {\n        if (!angular.isDate(parsedDate)) return;\n        var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n        var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (isValid) controller.$dateValue = parsedDate;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedDate || isNaN(parsedDate.getTime())) {\n          controller.$setValidity('date', false);\n          return;\n        }\n        validateAgainstMinMaxDate(parsedDate);\n        if (options.dateType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n          return formatDate(date, options.modelDateFormat || options.dateFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.dateType === 'number') {\n          return date.getTime();\n        } else if (options.dateType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.dateType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.dateType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelDateFormat);\n        } else if (options.dateType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getDateFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getDateFormattedString());\n      };\n      function getDateFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (datepicker) datepicker.destroy();\n        options = null;\n        datepicker = null;\n      });\n    }\n  };\n} ]).provider('datepickerViews', function() {\n  function split(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  }\n  function mod(n, m) {\n    return (n % m + m) % m;\n  }\n  this.$get = [ '$dateFormatter', '$dateParser', '$sce', function($dateFormatter, $dateParser, $sce) {\n    return function(picker) {\n      var scope = picker.$scope;\n      var options = picker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n      var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n      var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n      var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n      var viewDate = {\n        year: startDate.getFullYear(),\n        month: startDate.getMonth(),\n        date: startDate.getDate()\n      };\n      var views = [ {\n        format: options.dayFormat,\n        split: 7,\n        steps: {\n          month: 1\n        },\n        update: function(date, force) {\n          if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n            viewDate.date = picker.$date.getDate();\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n          var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n          var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n          var firstDateOffset = firstDate.getTimezoneOffset();\n          var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n          if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n          var days = [];\n          var day;\n          for (var i = 0; i < 42; i++) {\n            day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n            days.push({\n              date: day,\n              isToday: day.toDateString() === today,\n              label: formatDate(day, this.format),\n              selected: picker.$date && this.isSelected(day),\n              muted: day.getMonth() !== viewDate.month,\n              disabled: this.isDisabled(day)\n            });\n          }\n          scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n          scope.showLabels = true;\n          scope.labels = weekDaysLabelsHtml;\n          scope.rows = split(days, this.split);\n          scope.isTodayDisabled = this.isDisabled(new Date());\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n        },\n        isDisabled: function(date) {\n          var time = date.getTime();\n          if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n          if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n          if (options.disabledDateRanges) {\n            for (var i = 0; i < options.disabledDateRanges.length; i++) {\n              if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                return true;\n              }\n            }\n          }\n          return false;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualTime = picker.$date.getTime();\n          var newDate;\n          if (evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5); else if (evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5); else if (evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5); else if (evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'month',\n        format: options.monthFormat,\n        split: 4,\n        steps: {\n          year: 1\n        },\n        update: function(date, force) {\n          if (!this.built || date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var months = [];\n          var month;\n          for (var i = 0; i < 12; i++) {\n            month = new Date(viewDate.year, i, 1);\n            months.push({\n              date: month,\n              label: formatDate(month, this.format),\n              selected: picker.$isSelected(month),\n              disabled: this.isDisabled(month)\n            });\n          }\n          scope.title = formatDate(month, options.yearTitleFormat);\n          scope.showLabels = false;\n          scope.rows = split(months, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualMonth = picker.$date.getMonth();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setMonth(actualMonth - 1); else if (evt.keyCode === 38) newDate.setMonth(actualMonth - 4); else if (evt.keyCode === 39) newDate.setMonth(actualMonth + 1); else if (evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'year',\n        format: options.yearFormat,\n        split: 4,\n        steps: {\n          year: 12\n        },\n        update: function(date, force) {\n          if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n          var years = [];\n          var year;\n          for (var i = 0; i < 12; i++) {\n            year = new Date(firstYear + i, 0, 1);\n            years.push({\n              date: year,\n              label: formatDate(year, this.format),\n              selected: picker.$isSelected(year),\n              disabled: this.isDisabled(year)\n            });\n          }\n          scope.title = years[0].label + '-' + years[years.length - 1].label;\n          scope.showLabels = false;\n          scope.rows = split(years, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualYear = picker.$date.getFullYear();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setYear(actualYear - 1); else if (evt.keyCode === 38) newDate.setYear(actualYear - 4); else if (evt.keyCode === 39) newDate.setYear(actualYear + 1); else if (evt.keyCode === 40) newDate.setYear(actualYear + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      } ];\n      return {\n        views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n        viewDate: viewDate\n      };\n    };\n  } ];\n});\n\n// Source: alert/alert.js\n// @BUG: following snippet won't compile correctly\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      templateUrl: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissible: true\n    };\n\n    this.$get = function ($modal, $timeout) {\n\n      function AlertFactory (config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissible]\n        $alert.$scope.dismissible = !!options.dismissible;\n        if (options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if (options.duration) {\n          $alert.show = function () {\n            show();\n            $timeout(function () {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function ($window, $sce, $alert) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsAlert) {\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: module.js\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.rangedatepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.datetimepicker',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.pagination',\n  'mgcrea.ngStrap.sort'\n]);\n\n})(window, document);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      templateUrl: 'tooltip/tooltip.tpl.html',\n      template: '',\n      titleTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true,\n      mouseDownPreventDefault: true,\n      mouseDownStopPropagation: true,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory (element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        var promise = $tooltip.$promise = $bsCompiler.compile(options);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        var nodeName = element[0].nodeName.toLowerCase();\n        if (options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if (options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function (isEnabled) {\n          scope.$$postDigest(function () {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout;\n        var hoverState;\n\n        // Fetch, compile then initialize tooltip\n        var compileData;\n        var tipElement;\n        var tipContainer;\n        var tipScope;\n        promise.then(function (data) {\n          compileData = data;\n          $tooltip.init();\n        });\n\n        $tooltip.init = function () {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if (options.container === 'self') {\n            tipContainer = element;\n          } else if (angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if (options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if (options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              if (options.trigger === 'focus') {\n                element[0].focus();\n              } else {\n                $tooltip.show();\n              }\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function () {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function () {\n            if (hoverState === 'in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function () {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($tooltip);\n          }\n          var parent;\n          var after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if (tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = compileData.link(tipScope, function (clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', right: 'auto', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if (options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if (options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if (options.customClass) tipElement.addClass(options.customClass);\n\n          // Append the element, without any animations.  If we append\n          // using $animate.enter, some of the animations cause the placement\n          // to be off due to the transforms.\n          if (after) {\n            after.after(tipElement);\n          } else {\n            parent.prepend(tipElement);\n          }\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n\n          // Now, apply placement\n          $tooltip.$applyPlacement();\n\n          // Once placed, animate it.\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(tipElement, parent, after).then(enterAnimateCallback);\n          }\n          safeDigest(scope);\n\n          $$rAF(function () {\n            // Once the tooltip is placed and the animation starts, make the tooltip visible\n            if (tipElement) tipElement.css({visibility: 'visible'});\n\n            // Bind events\n            if (options.keyboard) {\n              if (options.trigger !== 'focus') {\n                $tooltip.focus();\n              }\n              bindKeyboardEvents();\n            }\n          });\n\n          if (options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($tooltip);\n          }\n        }\n\n        $tooltip.leave = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function (blur) {\n\n          if (!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($tooltip);\n          }\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(tipElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(tipElement).then(leaveAnimateCallback);\n          }\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if (options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if (options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($tooltip);\n          }\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if (_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function (evt) {\n          if (evt) { evt.preventDefault(); }\n          if ($tooltip.$isShown) {\n            $tooltip.leave();\n          } else {\n            $tooltip.enter();\n          }\n        };\n\n        $tooltip.focus = function () {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function (isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        $tooltip.setViewport = function (viewport) {\n          options.viewport = viewport;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function () {\n          if (!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement;\n          var autoToken = /\\s?auto?\\s?/i;\n          var autoPlace = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition();\n          var tipWidth = tipElement.prop('offsetWidth');\n          var tipHeight = tipElement.prop('offsetHeight');\n\n          // Refresh viewport position\n          $tooltip.$viewport = options.viewport && findElement(options.viewport.selector || options.viewport);\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var viewportPosition = getPosition($tooltip.$viewport);\n\n            if (/bottom/.test(originalPlacement) && elementPosition.bottom + tipHeight > viewportPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (/top/.test(originalPlacement) && elementPosition.top - tipHeight < viewportPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            if (/left/.test(originalPlacement) && elementPosition.left - tipWidth < viewportPosition.left) {\n              placement = placement.replace('left', 'right');\n            } else if (/right/.test(originalPlacement) && elementPosition.right + tipWidth > viewportPosition.width) {\n              placement = placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacement(tipPosition, placement);\n        };\n\n        $tooltip.$onKeyUp = function (evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function (evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function (evt) {\n          if (options.mouseDownPreventDefault) { evt.preventDefault(); }\n          if (options.mouseDownStopPropagation) { evt.stopPropagation(); }\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          if ($tooltip.$isShown) {\n            element[0].blur();\n          } else {\n            element[0].focus();\n          }\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function (trigger) {\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.on(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n\n              if (nodeName === 'button' && trigger !== 'hover' || (nodeName === 'input')) {\n                element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          });\n        }\n\n        function unbindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.off(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover' || (nodeName === 'input')) {\n                element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents () {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents () {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation (event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition ($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n          var isBody = el.tagName === 'BODY';\n\n          var elRect = el.getBoundingClientRect();\n          var rect = {};\n\n          // IE8 has issues with angular.extend and using elRect directly.\n          // By coping the values of elRect into a new object, we can continue to use extend\n          /* eslint-disable guard-for-in */\n          for (var p in elRect) { // eslint-disable-line\n            // DO NOT use hasOwnProperty when inspecting the return of getBoundingClientRect.\n            rect[p] = elRect[p];\n          }\n          /* eslint-enable guard-for-in */\n\n          if (rect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            rect = angular.extend({}, rect, {width: elRect.right - elRect.left, height: elRect.bottom - elRect.top});\n          }\n          var elOffset = isBody ? {top: 0, left: 0} : dimensions.offset(el);\n          var scroll = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.prop('scrollTop') || 0};\n          var outerDims = isBody ? {width: document.documentElement.clientWidth, height: $window.innerHeight} : null;\n\n          return angular.extend({}, rect, scroll, outerDims, elOffset);\n        }\n\n        function getCalculatedOffset (placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n            case 'right':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left + position.width\n              };\n              break;\n            case 'bottom':\n              offset = {\n                top: position.top + position.height,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n            case 'left':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left - actualWidth\n              };\n              break;\n            default:\n              offset = {\n                top: position.top - actualHeight,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n          }\n\n          if (!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if (split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n              case 'left':\n                offset.left = position.left;\n                break;\n              case 'right':\n                offset.left = position.left + position.width - actualWidth;\n                break;\n              default:\n                break;\n            }\n          } else if (split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n              case 'top':\n                offset.top = position.top - actualHeight + position.height;\n                break;\n              case 'bottom':\n                offset.top = position.top;\n                break;\n              default:\n                break;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacement (offset, placement) {\n          var tip = tipElement[0];\n          var width = tip.offsetWidth;\n          var height = tip.offsetHeight;\n\n          // manually read margins because getBoundingClientRect includes difference\n          var marginTop = parseInt(dimensions.css(tip, 'margin-top'), 10);\n          var marginLeft = parseInt(dimensions.css(tip, 'margin-left'), 10);\n\n          // we must check for NaN for ie 8/9\n          if (isNaN(marginTop)) marginTop = 0;\n          if (isNaN(marginLeft)) marginLeft = 0;\n\n          offset.top = offset.top + marginTop;\n          offset.left = offset.left + marginLeft;\n\n          // dimensions setOffset doesn't round pixel values\n          // so we use setOffset directly with our own function\n          dimensions.setOffset(tip, angular.extend({\n            using: function (props) {\n              tipElement.css({\n                top: Math.round(props.top) + 'px',\n                left: Math.round(props.left) + 'px',\n                right: ''\n              });\n            }\n          }, offset), 0);\n\n          // check to see if placing tip in new offset caused the tip to resize itself\n          var actualWidth = tip.offsetWidth;\n          var actualHeight = tip.offsetHeight;\n\n          if (placement === 'top' && actualHeight !== height) {\n            offset.top = offset.top + height - actualHeight;\n          }\n\n          // If it's an exotic placement, exit now instead of\n          // applying a delta and changing the arrow\n          if (/top-left|top-right|bottom-left|bottom-right/.test(placement)) return;\n\n          var delta = getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n\n          if (delta.left) {\n            offset.left += delta.left;\n          } else {\n            offset.top += delta.top;\n          }\n\n          dimensions.setOffset(tip, offset);\n\n          if (/top|right|bottom|left/.test(placement)) {\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n\n            replaceArrow(arrowDelta, tip[arrowOffsetPosition], isVertical);\n          }\n        }\n\n        // @source https://github.com/twbs/bootstrap/blob/v3.3.5/js/tooltip.js#L380\n        function getViewportAdjustedDelta (placement, position, actualWidth, actualHeight) {\n          var delta = {top: 0, left: 0};\n          if (!$tooltip.$viewport) return delta;\n\n          var viewportPadding = options.viewport && options.viewport.padding || 0;\n          var viewportDimensions = getPosition($tooltip.$viewport);\n\n          if (/right|left/.test(placement)) {\n            var topEdgeOffset = position.top - viewportPadding - viewportDimensions.scroll;\n            var bottomEdgeOffset = position.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\n              delta.top = viewportDimensions.top - topEdgeOffset;\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n              delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n            }\n          } else {\n            var leftEdgeOffset = position.left - viewportPadding;\n            var rightEdgeOffset = position.left + viewportPadding + actualWidth;\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n              delta.left = viewportDimensions.left - leftEdgeOffset;\n            } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n              delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n            }\n          }\n\n          return delta;\n        }\n\n        function replaceArrow (delta, dimension, isHorizontal) {\n          var $arrow = findElement('.tooltip-arrow, .arrow', tipElement[0]);\n\n          $arrow.css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n                .css(isHorizontal ? 'top' : 'left', '');\n        }\n\n        function destroyTipElement () {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if ($tooltip.$isShown && tipElement !== null) {\n            if (options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if (options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if (tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if (tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function ($window, $location, $sce, $parse, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        var tooltip;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'titleTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function (newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }\n        });\n\n        attr.$observe('disabled', function (newValue) {\n          if (newValue && tooltip.$isShown) {\n            tooltip.hide();\n          }\n        });\n\n        // Support scope as an object\n\n        if (attr.bsTooltip) {\n          scope.$watch(attr.bsTooltip, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.title = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n            if (newValue === true) {\n              tooltip.show();\n            } else {\n              tooltip.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n            if (newValue === false) {\n              tooltip.setEnabled(false);\n            } else {\n              tooltip.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            tooltip.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\n// NOTICE: This file was forked from the angular-material project (github.com/angular/material)\n// MIT Licensed - Copyright (c) 2014-2015 Google, Inc. http://angularjs.org\n\nangular.module('mgcrea.ngStrap.core', [])\n  .service('$bsCompiler', bsCompilerService);\n\nfunction bsCompilerService ($q, $http, $injector, $compile, $controller, $templateCache) {\n\n  /*\n   * @ngdoc service\n   * @name $bsCompiler\n   * @module material.core\n   * @description\n   * The $bsCompiler service is an abstraction of angular's compiler, that allows the developer\n   * to easily compile an element with a templateUrl, controller, and locals.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * $bsCompiler.compile({\n   *   templateUrl: 'modal.html',\n   *   controller: 'ModalCtrl',\n   *   locals: {\n   *     modal: myModalInstance;\n   *   }\n   * }).then(function(compileData) {\n   *   compileData.element; // modal.html's template in an element\n   *   compileData.link(myScope); //attach controller & scope to element\n   * });\n   * </hljs>\n   */\n\n   /*\n    * @ngdoc method\n    * @name $bsCompiler#compile\n    * @description A helper to compile an HTML template/templateUrl with a given controller,\n    * locals, and scope.\n    * @param {object} options An options object, with the following properties:\n    *\n    *    - `controller` - `{(string=|function()=}` Controller fn that should be associated with\n    *      newly created scope or the name of a registered controller if passed as a string.\n    *    - `controllerAs` - `{string=}` A controller alias name. If present the controller will be\n    *      published to scope under the `controllerAs` name.\n    *    - `template` - `{string=}` An html template as a string.\n    *    - `templateUrl` - `{string=}` A path to an html template.\n    *    - `transformTemplate` - `{function(template)=}` A function which transforms the template after\n    *      it is loaded. It will be given the template string as a parameter, and should\n    *      return a a new string representing the transformed template.\n    *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n    *      be injected into the controller. If any of these dependencies are promises, the compiler\n    *      will wait for them all to be resolved, or if one is rejected before the controller is\n    *      instantiated `compile()` will fail..\n    *      * `key` - `{string}`: a name of a dependency to be injected into the controller.\n    *      * `factory` - `{string|function}`: If `string` then it is an alias for a service.\n    *        Otherwise if function, then it is injected and the return value is treated as the\n    *        dependency. If the result is a promise, it is resolved before its value is\n    *        injected into the controller.\n    *\n    * @returns {object=} promise A promise, which will be resolved with a `compileData` object.\n    * `compileData` has the following properties:\n    *\n    *   - `element` - `{element}`: an uncompiled element matching the provided template.\n    *   - `link` - `{function(scope)}`: A link function, which, when called, will compile\n    *     the element and instantiate the provided controller (if given).\n    *   - `locals` - `{object}`: The locals which will be passed into the controller once `link` is\n    *     called. If `bindToController` is true, they will be coppied to the ctrl instead\n    *   - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n    */\n  this.compile = function (options) {\n\n    if (options.template && /\\.html$/.test(options.template)) {\n      console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.');\n      options.templateUrl = options.template;\n      options.template = '';\n    }\n\n    var templateUrl = options.templateUrl;\n    var template = options.template || '';\n    var controller = options.controller;\n    var controllerAs = options.controllerAs;\n    var resolve = angular.copy(options.resolve || {});\n    var locals = angular.copy(options.locals || {});\n    var transformTemplate = options.transformTemplate || angular.identity;\n    var bindToController = options.bindToController;\n\n    // Take resolve values and invoke them.\n    // Resolves can either be a string (value: 'MyRegisteredAngularConst'),\n    // or an invokable 'factory' of sorts: (value: function ValueGetter($dependency) {})\n    angular.forEach(resolve, function (value, key) {\n      if (angular.isString(value)) {\n        resolve[key] = $injector.get(value);\n      } else {\n        resolve[key] = $injector.invoke(value);\n      }\n    });\n    // Add the locals, which are just straight values to inject\n    // eg locals: { three: 3 }, will inject three into the controller\n    angular.extend(resolve, locals);\n\n    if (template) {\n      resolve.$template = $q.when(template);\n    } else if (templateUrl) {\n      resolve.$template = fetchTemplate(templateUrl);\n    } else {\n      throw new Error('Missing `template` / `templateUrl` option.');\n    }\n\n    if (options.titleTemplate) {\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.titleTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          findElement('[ng-bind=\"title\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    if (options.contentTemplate) {\n      // TODO(mgcrea): deprecate?\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.contentTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n          if (!options.templateUrl) contentEl.next().remove();\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    // Wait for all the resolves to finish if they are promises\n    return $q.all(resolve).then(function (locals) {\n\n      var template = transformTemplate(locals.$template);\n      if (options.html) {\n        template = template.replace(/ng-bind=\"/ig, 'ng-bind-html=\"');\n      }\n      // var element = options.element || angular.element('<div>').html(template.trim()).contents();\n      var element = angular.element('<div>').html(template.trim()).contents();\n      var linkFn = $compile(element);\n\n      // Return a linking function that can be used later when the element is ready\n      return {\n        locals: locals,\n        element: element,\n        link: function link (scope) {\n          locals.$scope = scope;\n\n          // Instantiate controller if it exists, because we have scope\n          if (controller) {\n            var invokeCtrl = $controller(controller, locals, true);\n            if (bindToController) {\n              angular.extend(invokeCtrl.instance, locals);\n            }\n            // Support angular@~1.2 invokeCtrl\n            var ctrl = angular.isObject(invokeCtrl) ? invokeCtrl : invokeCtrl();\n            // See angular-route source for this logic\n            element.data('$ngControllerController', ctrl);\n            element.children().data('$ngControllerController', ctrl);\n\n            if (controllerAs) {\n              scope[controllerAs] = ctrl;\n            }\n          }\n\n          return linkFn.apply(null, arguments);\n        }\n      };\n    });\n\n  };\n\n  function findElement (query, element) {\n    return angular.element((element || document).querySelectorAll(query));\n  }\n\n  var fetchPromises = {};\n  function fetchTemplate (template) {\n    if (fetchPromises[template]) return fetchPromises[template];\n    return (fetchPromises[template] = $http.get(template, {cache: $templateCache})\n      .then(function (res) {\n        return res.data;\n      }));\n  }\n\n}\n","'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) return;\n          if (options.keyboard && $dropdown.$element) $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          var options = {scope: scope};\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.timepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$timepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    defaultDate: 'auto',\n    prefixClass: 'timepicker',\n    placement: 'bottom-left',\n    templateUrl: 'timepicker/timepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: true,\n    timeType: 'date',\n    timeFormat: 'shortTime',\n    timezone: null,\n    modelTimeFormat: null,\n    autoclose: false,\n    minTime: -Infinity,\n    maxTime: +Infinity,\n    length: 5,\n    hourStep: 1,\n    minuteStep: 5,\n    secondStep: 5,\n    roundDisplay: false,\n    iconUp: 'nox-sort-up',\n    iconDown: 'nox-sort-down',\n    arrowBehavior: 'pager'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) {\n      defaults.lang = $dateFormatter.getDefaultLocale();\n    }\n    function timepickerFactory(element, controller, config) {\n      var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $timepicker.$options;\n      var scope = $timepicker.$scope;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      function floorMinutes(time) {\n        var coeff = 1e3 * 60 * options.minuteStep;\n        return new Date(Math.floor(time.getTime() / coeff) * coeff);\n      }\n      var selectedIndex = 0;\n      var defaultDate = options.roundDisplay ? floorMinutes(new Date()) : new Date();\n      var startDate = controller.$dateValue || defaultDate;\n      var viewDate = {\n        hour: startDate.getHours(),\n        meridian: startDate.getHours() < 12,\n        minute: startDate.getMinutes(),\n        second: startDate.getSeconds(),\n        millisecond: startDate.getMilliseconds()\n      };\n      var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n      var hoursFormat = $dateFormatter.hoursFormat(format);\n      var timeSeparator = $dateFormatter.timeSeparator(format);\n      var minutesFormat = $dateFormatter.minutesFormat(format);\n      var secondsFormat = $dateFormatter.secondsFormat(format);\n      var showSeconds = $dateFormatter.showSeconds(format);\n      var showAM = $dateFormatter.showAM(format);\n      scope.$iconUp = options.iconUp;\n      scope.$iconDown = options.iconDown;\n      scope.$select = function(date, index) {\n        $timepicker.select(date, index);\n      };\n      scope.$moveIndex = function(value, index) {\n        $timepicker.$moveIndex(value, index);\n      };\n      scope.$switchMeridian = function(date) {\n        $timepicker.switchMeridian(date);\n      };\n      $timepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $timepicker.$date = date;\n          angular.extend(viewDate, {\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            millisecond: date.getMilliseconds()\n          });\n          $timepicker.$build();\n        } else if (!$timepicker.$isBuilt) {\n          $timepicker.$build();\n        }\n      };\n      $timepicker.select = function(date, index, keep) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          controller.$dateValue = options.defaultDate === 'today' ? new Date() : new Date(1970, 0, 1);\n        }\n        if (!angular.isDate(date)) date = new Date(date);\n        if (index === 0) controller.$dateValue.setHours(date.getHours()); else if (index === 1) controller.$dateValue.setMinutes(date.getMinutes()); else if (index === 2) controller.$dateValue.setSeconds(date.getSeconds());\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n        if (options.autoclose && !keep) {\n          $timeout(function() {\n            $timepicker.hide(true);\n          });\n        }\n      };\n      $timepicker.switchMeridian = function(date) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          return;\n        }\n        var hours = (date || controller.$dateValue).getHours();\n        controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n      };\n      $timepicker.$build = function() {\n        var i;\n        var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n        var hours = [];\n        var hour;\n        for (i = 0; i < options.length; i++) {\n          hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n          hours.push({\n            date: hour,\n            label: formatDate(hour, hoursFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n            disabled: $timepicker.$isDisabled(hour, 0)\n          });\n        }\n        var minutes = [];\n        var minute;\n        for (i = 0; i < options.length; i++) {\n          minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n          minutes.push({\n            date: minute,\n            label: formatDate(minute, minutesFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(minute, 1),\n            disabled: $timepicker.$isDisabled(minute, 1)\n          });\n        }\n        var seconds = [];\n        var second;\n        for (i = 0; i < options.length; i++) {\n          second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n          seconds.push({\n            date: second,\n            label: formatDate(second, secondsFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(second, 2),\n            disabled: $timepicker.$isDisabled(second, 2)\n          });\n        }\n        var rows = [];\n        for (i = 0; i < options.length; i++) {\n          if (showSeconds) {\n            rows.push([ hours[i], minutes[i], seconds[i] ]);\n          } else {\n            rows.push([ hours[i], minutes[i] ]);\n          }\n        }\n        scope.rows = rows;\n        scope.showSeconds = showSeconds;\n        scope.showAM = showAM;\n        scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n        scope.timeSeparator = timeSeparator;\n        $timepicker.$isBuilt = true;\n      };\n      $timepicker.$isSelected = function(date, index) {\n        if (!$timepicker.$date) return false; else if (index === 0) {\n          return date.getHours() === $timepicker.$date.getHours();\n        } else if (index === 1) {\n          return date.getMinutes() === $timepicker.$date.getMinutes();\n        } else if (index === 2) {\n          return date.getSeconds() === $timepicker.$date.getSeconds();\n        }\n      };\n      $timepicker.$isDisabled = function(date, index) {\n        var selectedTime;\n        if (index === 0) {\n          selectedTime = date.getTime() + viewDate.minute * 6e4 + viewDate.second * 1e3;\n        } else if (index === 1) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.second * 1e3;\n        } else if (index === 2) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.minute * 6e4;\n        }\n        return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n      };\n      scope.$arrowAction = function(value, index) {\n        if (options.arrowBehavior === 'picker') {\n          $timepicker.$setTimeByStep(value, index);\n        } else {\n          $timepicker.$moveIndex(value, index);\n        }\n      };\n      $timepicker.$setTimeByStep = function(value, index) {\n        var newDate = new Date($timepicker.$date || startDate);\n        var hours = newDate.getHours();\n        var minutes = newDate.getMinutes();\n        var seconds = newDate.getSeconds();\n        if (index === 0) {\n          newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n        } else if (index === 1) {\n          newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n        } else if (index === 2) {\n          newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n        }\n        $timepicker.select(newDate, index, true);\n      };\n      $timepicker.$moveIndex = function(value, index) {\n        var targetDate;\n        if (index === 0) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n          angular.extend(viewDate, {\n            hour: targetDate.getHours()\n          });\n        } else if (index === 1) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n          angular.extend(viewDate, {\n            minute: targetDate.getMinutes()\n          });\n        } else if (index === 2) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n          angular.extend(viewDate, {\n            second: targetDate.getSeconds()\n          });\n        }\n        $timepicker.$build();\n      };\n      $timepicker.$onMouseDown = function(evt) {\n        if (evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $timepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          $timepicker.hide(true);\n          return;\n        }\n        var newDate = new Date($timepicker.$date);\n        var hours = newDate.getHours();\n        var hoursLength = formatDate(newDate, hoursFormat).length;\n        var minutes = newDate.getMinutes();\n        var minutesLength = formatDate(newDate, minutesFormat).length;\n        var seconds = newDate.getSeconds();\n        var secondsLength = formatDate(newDate, secondsFormat).length;\n        var sepLength = 1;\n        var lateralMove = /(37|39)/.test(evt.keyCode);\n        var count = 2 + showSeconds * 1 + showAM * 1;\n        if (lateralMove) {\n          if (evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1; else if (evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n        }\n        var selectRange = [ 0, hoursLength ];\n        var incr = 0;\n        if (evt.keyCode === 38) incr = -1;\n        if (evt.keyCode === 40) incr = +1;\n        var isSeconds = selectedIndex === 2 && showSeconds;\n        var isMeridian = selectedIndex === 2 && !showSeconds || selectedIndex === 3 && showSeconds;\n        if (selectedIndex === 0) {\n          newDate.setHours(hours + incr * parseInt(options.hourStep, 10));\n          hoursLength = formatDate(newDate, hoursFormat).length;\n          selectRange = [ 0, hoursLength ];\n        } else if (selectedIndex === 1) {\n          newDate.setMinutes(minutes + incr * parseInt(options.minuteStep, 10));\n          minutesLength = formatDate(newDate, minutesFormat).length;\n          selectRange = [ hoursLength + sepLength, minutesLength ];\n        } else if (isSeconds) {\n          newDate.setSeconds(seconds + incr * parseInt(options.secondStep, 10));\n          secondsLength = formatDate(newDate, secondsFormat).length;\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength, secondsLength ];\n        } else if (isMeridian) {\n          if (!lateralMove) $timepicker.switchMeridian();\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength + (secondsLength + sepLength) * showSeconds, 2 ];\n        }\n        $timepicker.select(newDate, selectedIndex, true);\n        createSelection(selectRange[0], selectRange[1]);\n        parentScope.$digest();\n      };\n      function createSelection(start, length) {\n        var end = start + length;\n        if (element[0].createTextRange) {\n          var selRange = element[0].createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end);\n          selRange.select();\n        } else if (element[0].setSelectionRange) {\n          element[0].setSelectionRange(start, end);\n        } else if (angular.isUndefined(element[0].selectionStart)) {\n          element[0].selectionStart = start;\n          element[0].selectionEnd = end;\n        }\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $timepicker.init;\n      $timepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'time');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $timepicker.destroy;\n      $timepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $timepicker.show;\n      $timepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if ($timepicker.$element) $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if (options.keyboard) {\n            if (element) element.on('keydown', $timepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $timepicker.hide;\n      $timepicker.hide = function(blur) {\n        if (!$timepicker.$isShown) return;\n        if ($timepicker.$element) $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n        if (options.keyboard) {\n          if (element) element.off('keydown', $timepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $timepicker;\n    }\n    timepickerFactory.defaults = defaults;\n    return timepickerFactory;\n  } ];\n}).directive('bsTimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$timepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n  var defaults = $timepicker.defaults;\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'autoclose', 'timeType', 'timeFormat', 'timezone', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'secondStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'roundDisplay', 'id', 'prefixClass', 'prefixEvent', 'defaultDate' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'roundDisplay' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      if (isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n      var timepicker = $timepicker(element, controller, options);\n      options = timepicker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!timepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          if (newValue === true) {\n            timepicker.show();\n          } else {\n            timepicker.hide();\n          }\n        });\n      }\n      var dateParser = $dateParser({\n        format: options.timeFormat,\n        lang: lang\n      });\n      angular.forEach([ 'minTime', 'maxTime' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            if (!isNaN(timepicker.$options[key])) timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        }\n      });\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        timepicker.update(controller.$dateValue);\n      }, true);\n      function validateAgainstMinMaxTime(parsedTime) {\n        if (!angular.isDate(parsedTime)) return;\n        var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n        var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (!isValid) {\n          return;\n        }\n        controller.$dateValue = parsedTime;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedTime || isNaN(parsedTime.getTime())) {\n          controller.$setValidity('date', false);\n          return undefined;\n        }\n        validateAgainstMinMaxTime(parsedTime);\n        if (options.timeType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedTime, options.timezone, true);\n          return formatDate(date, options.modelTimeFormat || options.timeFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.timeType === 'number') {\n          return date.getTime();\n        } else if (options.timeType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.timeType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.timeType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n        } else if (options.timeType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getTimeFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getTimeFormattedString());\n      };\n      function getTimeFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (timepicker) timepicker.destroy();\n        options = null;\n        timepicker = null;\n      });\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tab', []).provider('$tab', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    template: 'tab/tab.tpl.html',\n    navClass: 'nav-tabs',\n    activeClass: 'active'\n  };\n  var controller = this.controller = function($scope, $element, $attrs) {\n    var self = this;\n    self.$options = angular.copy(defaults);\n    angular.forEach([ 'animation', 'navClass', 'activeClass' ], function(key) {\n      if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n    });\n    $scope.$navClass = self.$options.navClass;\n    $scope.$activeClass = self.$options.activeClass;\n    self.$panes = $scope.$panes = [];\n    self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n    self.$push = function(pane) {\n      if (angular.isUndefined(self.$panes.$active)) {\n        $scope.$setActive(pane.name || 0);\n      }\n      self.$panes.push(pane);\n    };\n    self.$remove = function(pane) {\n      var index = self.$panes.indexOf(pane);\n      var active = self.$panes.$active;\n      var activeIndex;\n      if (angular.isString(active)) {\n        activeIndex = self.$panes.map(function(pane) {\n          return pane.name;\n        }).indexOf(active);\n      } else {\n        activeIndex = self.$panes.$active;\n      }\n      self.$panes.splice(index, 1);\n      if (index < activeIndex) {\n        activeIndex--;\n      } else if (index === activeIndex && activeIndex === self.$panes.length) {\n        activeIndex--;\n      }\n      if (activeIndex >= 0 && activeIndex < self.$panes.length) {\n        self.$setActive(self.$panes[activeIndex].name || activeIndex);\n      } else {\n        self.$setActive();\n      }\n    };\n    self.$setActive = $scope.$setActive = function(value) {\n      self.$panes.$active = value;\n      self.$activePaneChangeListeners.forEach(function(fn) {\n        fn();\n      });\n    };\n    self.$isActive = $scope.$isActive = function($pane, $index) {\n      return self.$panes.$active === $pane.name || self.$panes.$active === $index;\n    };\n  };\n  this.$get = function() {\n    var $tab = {};\n    $tab.defaults = defaults;\n    $tab.controller = controller;\n    return $tab;\n  };\n}).directive('bsTabs', [ '$window', '$animate', '$tab', '$parse', function($window, $animate, $tab, $parse) {\n  var defaults = $tab.defaults;\n  return {\n    require: [ '?ngModel', 'bsTabs' ],\n    transclude: true,\n    scope: true,\n    controller: [ '$scope', '$element', '$attrs', $tab.controller ],\n    templateUrl: function(element, attr) {\n      return attr.template || defaults.template;\n    },\n    link: function postLink(scope, element, attrs, controllers) {\n      var ngModelCtrl = controllers[0];\n      var bsTabsCtrl = controllers[1];\n      if (ngModelCtrl) {\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n        });\n        ngModelCtrl.$formatters.push(function(modelValue) {\n          bsTabsCtrl.$setActive(modelValue);\n          return modelValue;\n        });\n      }\n      if (attrs.bsActivePane) {\n        var parsedBsActivePane = $parse(attrs.bsActivePane);\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n        });\n        scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n          bsTabsCtrl.$setActive(newValue);\n        }, true);\n      }\n    }\n  };\n} ]).directive('bsPane', [ '$window', '$animate', '$sce', function($window, $animate, $sce) {\n  return {\n    require: [ '^?ngModel', '^bsTabs' ],\n    scope: true,\n    link: function postLink(scope, element, attrs, controllers) {\n      var bsTabsCtrl = controllers[1];\n      element.addClass('tab-pane');\n      attrs.$observe('title', function(newValue, oldValue) {\n        scope.title = $sce.trustAsHtml(newValue);\n      });\n      scope.name = attrs.name;\n      scope.link = attrs.link ? attrs.link : false;\n      if (bsTabsCtrl.$options.animation) {\n        element.addClass(bsTabsCtrl.$options.animation);\n      }\n      attrs.$observe('disabled', function(newValue, oldValue) {\n        scope.disabled = scope.$eval(newValue);\n      });\n      bsTabsCtrl.$push(scope);\n      scope.$on('$destroy', function() {\n        bsTabsCtrl.$remove(scope);\n      });\n      function render() {\n        var index = bsTabsCtrl.$panes.indexOf(scope);\n        $animate[bsTabsCtrl.$isActive(scope, index) ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n      }\n      bsTabsCtrl.$activePaneChangeListeners.push(function() {\n        render();\n      });\n      render();\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.sort', []).directive('bsSort', [function() {\n  return {\n    scope: true,\n    compile: function (element, attrs) {\n      var list = element[0].querySelectorAll('th');\n      for (var i = 0, len = list.length; i < len; i++) {\n        var item = list[i];\n        item = angular.element(item);\n        if (item.attr('data-sortable')) {\n          var dataName = item.attr('data-name');\n          item.append('<div class=\"sorter\"><i class=\"nox-sort-up sort-asc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'asc\\'}\"></i><i class=\"nox-sort-down sort-desc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'desc\\'}\"></i></div>');\n        }\n      }\n\n      return function postLink (scope, element, attrs) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['onSort'], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        if (angular.isDefined(attrs.totalItems)) {\n          attrs.$observe('totalItems', function (newValue) {\n            options.totalItems = newValue;\n          });\n        }\n        // 初始化排序\n        angular.forEach([ 'orderBy', 'sortBy' ], function(key) {\n          if (angular.isDefined(attrs[key])) {\n            scope[key] = scope.$eval(attrs[key]);\n          }\n        });\n        var list = element[0].querySelectorAll('th');\n        for (var i = 0, len = list.length; i < len; i++) {\n          var item = list[i];\n          item = angular.element(item);\n          if (item.attr('data-sortable')) {\n            item.on('click', clickColumn);\n          }\n        }\n\n        function clickColumn (event) {\n          if (options.totalItems === -1) {\n            return;\n          }\n          var target = angular.element(event.currentTarget);\n          var dataName = target.attr('data-name');\n          if (dataName === scope.orderBy) {\n            scope.sortBy = scope.sortBy === 'asc' ? 'desc' : 'asc';\n          } else {\n            scope.orderBy = dataName;\n            scope.sortBy = 'desc';\n          }\n          scope.$apply();\n\n          if (angular.isDefined(options.onSort) && angular.isFunction(options.onSort)) {\n            options.onSort(scope.orderBy, scope.sortBy);\n          }\n        }\n      };\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      autoClose: false,\n      search: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"select-arrow\"><i class=\"nox-sort-down\"></i></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$showSearch = options.search; // 单选复选都可以search\n        // scope.$trigger = options.search?true:false;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$searchText = '';\n\n\n        scope.$changeSearchText = function (evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n\n        };\n        scope.$close = function () {\n          scope.$$postDigest(function () {\n            $select.hide(true);\n          });\n        };\n        scope.$searchTextChange = function (evt) {\n          scope.searchText = evt.searchText;\n\n        };\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index, evt);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index, evt) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n          // scope.searchText = '';\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          // Emulate click for mobile devices\n          evt.preventDefault(true);\n          evt.stopPropagation(true);\n\n          if (evt.target.getAttribute('role') === 'search') {\n            evt.target.focus();\n            scope.searchText = '';\n          }\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          } else {\n            // console.log('no touch');\n          }\n\n\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function () {\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n            scope.$activeIndex = -1;\n          }\n          if (options.search) {\n            // search 清空\n            scope.searchText = '';\n           // return;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id',\n          'sort', 'search', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort', 'search'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // search\n        var dataSearch = element.attr('data-search');\n        if (angular.isDefined(dataSearch)) {\n          if (falseValueRegExp.test(dataSearch)) {\n            options.search = false;\n          } else {\n            options.search = dataSearch;\n            scope.searchText = '';\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  })\n  .filter('searchFilter', function () {\n    return function (collection, keyname, value) {\n      var output = [];\n      angular.forEach(collection, function (item) {\n        // 过滤数组中值与指定值相同的元素\n        if (item[keyname].indexOf(value) > -1) {\n          output.push(item);\n        }\n      });\n      return output;\n    };\n  });\n","/**\n * Created by xiashan on 17/5/12.\n */\n\n'use strict';\n\nangular.module('mgcrea.ngStrap.rangedatepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ])\n  .provider('$rangedatepicker', function () {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'rangedatepicker',\n      placement: 'bottom-left',\n      templateUrl: 'rangedatepicker/rangedatepicker.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      connector: ' / ',\n      dateType: 'date',\n      dateFormat: 'yyyy-MM-dd',\n      timezone: null,\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      compare: true\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'rangedatepickerViews', '$tooltip', '$timeout',\n      function ($window, $document, $rootScope, $sce, $dateFormatter, rangedatepickerViews, $tooltip, $timeout) {\n        var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n        var isTouch = 'createTouch' in $window.document && isNative;\n        if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n        function RangeDatepickerFactory (element, controller, config) {\n          var $rangedatepicker = $tooltip(element, angular.extend({}, defaults, config));\n          var options = $rangedatepicker.$options;\n          var scope = $rangedatepicker.$scope;\n          var pickerViews = rangedatepickerViews($rangedatepicker);\n          $rangedatepicker.$views = pickerViews.views;\n          var viewDate = pickerViews.viewDate;\n          scope.$mode = options.minView;\n          scope.$iconLeft = options.iconLeft;\n          scope.$iconRight = options.iconRight;\n          scope.$compare = options.compare;\n          var $picker = $rangedatepicker.$views[0];\n          scope.rangeList = $picker.rangeList;\n\n          var today = new Date();\n          $rangedatepicker.$today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\n          // 区间\n          scope.ctrl = {\n            rangeType: '',\n            compare: ''\n          };\n\n          scope.$select = function (date, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.select(date, index);\n          };\n          scope.$selectPane = function (value, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.$selectPane(value, index);\n          };\n          scope.$selectRange = function (type) {\n            if (type === scope.ctrl.rangeType || scope.ctrl.compare) {\n              return;\n            }\n            $rangedatepicker.$selectRange(type);\n            $rangedatepicker.hide(true);\n          };\n          scope.$toggleCompare = function () {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            // 只变更了勾选compare\n            modelValue.onlyCompare = true;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n          };\n          scope.$closePicker = function () {\n            $rangedatepicker.hide();\n          };\n          scope.$stopPropagation = function (evt) {\n            evt.stopPropagation();\n          };\n\n          $rangedatepicker.update = function (sDate, eDate, force) {\n            if (angular.isDate(sDate) && !isNaN(sDate.getTime()) && angular.isDate(eDate) && !isNaN(eDate.getTime())) {\n              if (!scope.ctrl.compare) {\n                $rangedatepicker.$date = [sDate, eDate];\n              } else {\n                $rangedatepicker.$compareDate = [sDate, eDate];\n              }\n              $picker.update.call($picker, sDate, eDate);\n            } else {\n              $rangedatepicker.$build(!force);\n            }\n          };\n          $rangedatepicker.updateDisabledDates = function (dateRanges) {\n            options.disabledDateRanges = dateRanges;\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], $rangedatepicker.$setDisabledEl);\n            }\n          };\n          $rangedatepicker.select = function (date, index, keep) {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            if (!scope.ctrl.compare) {\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$dateValue[index]) || isNaN(controller.$dateValue[index].getTime())) {\n                  controller.$dateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$dateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.startDate = angular.copy(date);\n              } else {\n                modelValue.endDate = angular.copy(date);\n              }\n            } else {\n              controller.$compareDateValue = !controller.$compareDateValue ? [] : controller.$compareDateValue;\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$compareDateValue[index]) || isNaN(controller.$compareDateValue[index].getTime())) {\n                  controller.$compareDateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$compareDateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.compareStartDate = angular.copy(date);\n              } else {\n                modelValue.compareEndDate = angular.copy(date);\n              }\n            }\n            modelValue.onlyCompare = false;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n            if (options.autoclose && !keep) {\n              $timeout(function () {\n                $rangedatepicker.hide(true);\n              });\n            }\n          };\n          $rangedatepicker.$getCompare = function () {\n            return scope.ctrl && scope.ctrl.compare;\n          };\n          $rangedatepicker.$setCompare = function () {\n            scope.ctrl && (scope.ctrl.compare = 'compare');\n          };\n          $rangedatepicker.$build = function (pristine) {\n            if (pristine === true && $picker.built) return;\n            if (pristine === false && !$picker.built) return;\n            $picker.build.call($picker, $rangedatepicker.$date);\n          };\n          $rangedatepicker.$updateSelected = function () {\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], updateSelected);\n            }\n          };\n          $rangedatepicker.$isSelected = function (date) {\n            return $picker.isSelected(date);\n          };\n          $rangedatepicker.$setDisabledEl = function (el) {\n            el.disabled = $picker.isDisabled(el.date);\n          };\n          $rangedatepicker.$selectPane = function (value, index) {\n            var steps = $picker.steps;\n            var key = (index === 0) ? 'startDate' : 'endDate';\n            var targetDate = new Date(Date.UTC(viewDate[key].year + (steps.year || 0) * value, viewDate[key].month + (steps.month || 0) * value, 1));\n            angular.extend(viewDate[key], {\n              year: targetDate.getUTCFullYear(),\n              month: targetDate.getUTCMonth(),\n              date: targetDate.getUTCDate()\n            });\n            $rangedatepicker.$build();\n          };\n          $rangedatepicker.$selectRange = function (type) {\n            var cate = type.substr(-1);\n            var value = parseInt(type.substr(0, type.length - 1), 10);\n            var endDate = $rangedatepicker.$today;\n            var startDate;\n            switch (cate) {\n              case 'd':\n                if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value + 1);\n                  if (value === -2) {\n                    endDate = startDate;\n                  }\n                } else {\n                  startDate = endDate;\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value);\n                }\n                break;\n              case 'w':\n                var day = endDate.getDay();\n                if (value <= 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (day * -1 + 1));\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + (day * -1));\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + 7 - day + 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (7 - day));\n                }\n                break;\n              case 'm':\n                if (value === 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n                } else if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + value, 1);\n                  // 一月一月的看，并不做区间\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                }\n                break;\n              default:\n                break;\n            }\n            if (angular.isDate(startDate) && angular.isDate(endDate)) {\n              controller.$dateValue[0] = angular.copy(startDate);\n              controller.$dateValue[1] = angular.copy(endDate);\n              var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n              modelValue.startDate = angular.copy(startDate);\n              modelValue.endDate = angular.copy(endDate);\n              modelValue.onlyCompare = false;\n              controller.$setViewValue(modelValue);\n              controller.$render();\n              scope.ctrl.rangeType = type;\n            }\n          };\n          $rangedatepicker.$onMouseDown = function (evt) {\n            evt.preventDefault(true);\n            evt.stopPropagation(true);\n            var targetEl = angular.element(evt.target);\n            if (isTouch) {\n              if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n                targetEl = targetEl.parent();\n              }\n              targetEl.triggerHandler('click');\n            }\n          };\n          function updateSelected (el) {\n            el.selected = $rangedatepicker.$isSelected(el.date);\n          }\n          function focusElement () {\n            element[0].focus();\n          }\n          var _init = $rangedatepicker.init;\n          $rangedatepicker.init = function () {\n            if (isNative && options.useNative) {\n              element.prop('type', 'date');\n              element.css('-webkit-appearance', 'textfield');\n              return;\n            } else if (isTouch) {\n              element.prop('type', 'text');\n              element.attr('readonly', 'true');\n              element.on('click', focusElement);\n            }\n            _init();\n          };\n          var _destroy = $rangedatepicker.destroy;\n          $rangedatepicker.destroy = function () {\n            if (isNative && options.useNative) {\n              element.off('click', focusElement);\n            }\n            _destroy();\n          };\n          var _show = $rangedatepicker.show;\n          $rangedatepicker.show = function () {\n            // if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n            if (element.attr('disabled')) return;\n            _show();\n            $timeout(function () {\n              if (!$rangedatepicker.$isShown) return;\n              $rangedatepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            }, 0, false);\n          };\n          var _hide = $rangedatepicker.hide;\n          $rangedatepicker.hide = function (blur) {\n            if (!$rangedatepicker.$isShown) return;\n            $rangedatepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            _hide(blur);\n          };\n          return $rangedatepicker;\n        }\n        RangeDatepickerFactory.defaults = defaults;\n        return RangeDatepickerFactory;\n      }];\n  })\n  .directive('bsRangedatepicker', ['$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$rangedatepicker',\n    function ($window, $parse, $q, $dateFormatter, $dateParser, $rangedatepicker) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      return {\n        restrict: 'EAC',\n        require: 'ngModel',\n        link: function postLink (scope, element, attr, controller) {\n          var options = {\n            scope: scope\n          };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'connector', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'compare'], function (key) {\n            if (angular.isDefined(attr[key])) options[key] = attr[key];\n          });\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container', 'autoclose', 'useNative', 'compare'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n              options[key] = false;\n            }\n          });\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n          var rangedatepicker = $rangedatepicker(element, controller, options);\n          options = rangedatepicker.$options;\n          if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n          var lang = options.lang;\n          var formatDate = function (date, format) {\n            return $dateFormatter.formatDate(date, format, lang);\n          };\n          var dateParser = $dateParser({\n            format: options.dateFormat,\n            lang: lang,\n            strict: options.strictFormat\n          });\n          angular.forEach(['minDate', 'maxDate'], function (key) {\n            if (angular.isDefined(attr[key])) {\n              attr.$observe(key, function (newValue) {\n                rangedatepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n                if (!isNaN(rangedatepicker.$options[key])) {\n                  rangedatepicker.$build(false);\n                }\n                // if (controller.$dateValue) {\n                //   validateAgainstMinMaxDate(controller.$dateValue[0], controller.$dateValue[1]);\n                // }\n              });\n            }\n          });\n          if (angular.isDefined(attr.dateFormat)) {\n            attr.$observe('dateFormat', function (newValue) {\n              rangedatepicker.$options.dateFormat = newValue;\n            });\n          }\n          scope.$watch(attr.ngModel, function (newValue, oldValue) {\n            if (newValue && newValue.onlyCompare) {\n              rangedatepicker.update(null, null, true);\n            } else if (rangedatepicker.$getCompare()) {\n              rangedatepicker.$date = [controller.$dateValue[0], controller.$dateValue[1]];\n              rangedatepicker.update(controller.$compareDateValue[0], controller.$compareDateValue[1]);\n            } else {\n              rangedatepicker.update(controller.$dateValue[0], controller.$dateValue[1]);\n            }\n          }, true);\n\n          function getFormattedDate (modelValue) {\n            var date;\n            if (angular.isDate(modelValue)) {\n              date = modelValue;\n            } else if (options.dateType === 'string') {\n              date = dateParser.parse(modelValue, null, options.modelDateFormat);\n            } else if (options.dateType === 'unix') {\n              date = new Date(modelValue * 1e3);\n            } else {\n              date = new Date(modelValue);\n            }\n            return date;\n          }\n          function validateAgainstMinMaxDate (parsedDate1, parsedDate2) {\n            if (!angular.isDate(parsedDate1) || !angular.isDate(parsedDate2)) {\n              return false;\n            }\n            var isMinValid = isNaN(rangedatepicker.$options.minDate) || parsedDate1.getTime() >= rangedatepicker.$options.minDate;\n            var isMaxValid = isNaN(rangedatepicker.$options.maxDate) || parsedDate2.getTime() <= rangedatepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            var compare = rangedatepicker.$getCompare();\n            if (isValid) {\n              if (compare) {\n                controller.$compareDateValue[0] = parsedDate1;\n                controller.$compareDateValue[1] = parsedDate2;\n              } else {\n                controller.$dateValue[0] = parsedDate1;\n                controller.$dateValue[1] = parsedDate2;\n              }\n            }\n            return true;\n          }\n          controller.$parsers.unshift(function (viewValue) {\n            var compare = rangedatepicker.$getCompare();\n            if (!viewValue) {\n              controller.$setValidity('date', true);\n              return null;\n            }\n            if (viewValue.onlyCompare) {\n              viewValue.compare = compare;\n              return viewValue;\n            }\n            var parsedDate1;\n            var parsedDate2;\n            if (compare) {\n              parsedDate1 = dateParser.parse(viewValue.compareStartDate, controller.$compareDateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.compareEndDate, controller.$compareDateValue[1]);\n            } else {\n              parsedDate1 = dateParser.parse(viewValue.startDate, controller.$dateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.endDate, controller.$dateValue[1]);\n            }\n            if (parsedDate1 && !parsedDate2) {\n              parsedDate2 = angular.copy(parsedDate1);\n            }\n            if (!parsedDate1 && parsedDate2) {\n              parsedDate1 = angular.copy(parsedDate2);\n            }\n            if (!parsedDate1 || isNaN(parsedDate1.getTime()) || !parsedDate2 || isNaN(parsedDate2.getTime())) {\n              controller.$setValidity('date', false);\n              return false;\n            }\n            validateAgainstMinMaxDate(parsedDate1, parsedDate2);\n            var obj = {\n              dateRange: viewValue.dateRange,\n              compare: compare\n            };\n            var skey = '';\n            var ekey = '';\n            if (compare) {\n              // 原对比日期需要显示，因此这里还是要赋值\n              obj.startDate = viewValue.startDate;\n              obj.endDate = viewValue.endDate;\n              skey = 'compareStartDate';\n              ekey = 'compareEndDate';\n            } else {\n              obj.compareStartDate = viewValue.compareStartDate;\n              obj.compareEndDate = viewValue.compareEndDate;\n              skey = 'startDate';\n              ekey = 'endDate';\n            }\n            if (options.dateType === 'string') {\n              obj[skey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate1, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              obj[ekey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate2, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              return obj;\n            }\n            var date1;\n            var date2;\n            if (compare) {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[1], options.timezone, true);\n            } else {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$dateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$dateValue[1], options.timezone, true);\n            }\n            if (options.dateType === 'number') {\n              obj[skey] = date1.getTime();\n              obj[ekey] = date2.getTime();\n            } else if (options.dateType === 'unix') {\n              obj[skey] = date1.getTime() / 1e3;\n              obj[ekey] = date2.getTime() / 1e3;\n            } else if (options.dateType === 'iso') {\n              obj[skey] = date1.toISOString();\n              obj[ekey] = date2.toISOString();\n            } else {\n              obj[skey] = new Date(date1);\n              obj[ekey] = new Date(date2);\n            }\n            return obj;\n          });\n          controller.$formatters.push(function (modelValue) {\n            if (angular.isUndefined(modelValue) || modelValue === null) {\n              return '';\n            }\n            if (modelValue.dateRange) {\n              controller.$dateRange = modelValue.dateRange;\n              controller.$dateValue = !controller.$dateValue ? [] : controller.$dateValue;\n              rangedatepicker.$selectRange(controller.$dateRange);\n            } else {\n              controller.$dateValue = [];\n              controller.$compareDateValue = [];\n              if (modelValue.startDate && modelValue.endDate) {\n                var startDate = getFormattedDate(modelValue.startDate);\n                var endDate = getFormattedDate(modelValue.endDate);\n                controller.$dateValue = [dateParser.timezoneOffsetAdjust(startDate, options.timezone), dateParser.timezoneOffsetAdjust(endDate, options.timezone)];\n              }\n              if (modelValue.compareStartDate && modelValue.compareEndDate) {\n                var compareStartDate = getFormattedDate(modelValue.compareStartDate);\n                var compareEndDate = getFormattedDate(modelValue.compareEndDate);\n                controller.$compareDateValue = [dateParser.timezoneOffsetAdjust(compareStartDate, options.timezone), dateParser.timezoneOffsetAdjust(compareEndDate, options.timezone)];\n                if (modelValue.compare) {\n                  rangedatepicker.$setCompare();\n                }\n              }\n            }\n            return getDateFormattedString();\n          });\n          controller.$render = function () {\n            element.val(getDateFormattedString());\n          };\n          function getDateFormattedString () {\n            if (!controller.$modelValue || !controller.$modelValue.startDate || isNaN(controller.$modelValue.startDate.getTime())) {\n              return '';\n            }\n            var html = formatDate(controller.$modelValue.startDate, options.dateFormat);\n            if (controller.$modelValue.compare && controller.$modelValue.compareStartDate && !isNaN(controller.$modelValue.compareStartDate.getTime())) {\n              html += ' vs ' + formatDate(controller.$modelValue.compareStartDate, options.dateFormat);\n            } else if (!controller.$modelValue.compare && controller.$modelValue.endDate && !isNaN(controller.$modelValue.endDate.getTime())) {\n              html += ' / ' + formatDate(controller.$modelValue.endDate, options.dateFormat);\n            }\n            return html;\n          }\n          scope.$on('$destroy', function () {\n            if (rangedatepicker) rangedatepicker.destroy();\n            options = null;\n            rangedatepicker = null;\n          });\n        }\n      };\n    }])\n  .provider('rangedatepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      return function (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = (picker.$date && picker.$date[0]) || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var endDate = (picker.$date && picker.$date[1]) || (options.endDate ? dateParser.getDateForAttribute('endDate', options.endDate) : new Date());\n        var viewDate = {\n          startDate: {\n            year: startDate.getFullYear(),\n            month: startDate.getMonth(),\n            date: startDate.getDate()\n          },\n          endDate: {\n            year: endDate.getFullYear(),\n            month: endDate.getMonth(),\n            date: endDate.getDate()\n          }\n        };\n\n        var today = new Date();\n        var t = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        var d = today.getDay();\n        var views = [{\n          format: options.dayFormat,\n          split: 7,\n          steps: {\n            month: 1\n          },\n          rangeList: [\n            {name: 'Today', value: '0d', date: {start: t, end: t}},\n            {name: 'Yesterday', value: '-2d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1)}},\n            {name: 'Last 7 Days', value: '-7d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6), end: t}},\n            {name: 'Last Week', value: '-1w', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6 - d), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - d)}},\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}}\n          ],\n          update: function (sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function () {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var item = viewDate[value];\n              var firstDayOfMonth = new Date(item.year, item.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var currentDate = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === currentDate,\n                  label: formatDate(day, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], day),\n                  inRange: that.isInRange(day),\n                  muted: day.getMonth() !== item.month,\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(day, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], day)\n                });\n              }\n              scope.title[index] = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.rows[index] = split(days, that.split);\n            });\n            scope.showLabels = true;\n            scope.labels = weekDaysLabelsHtml;\n            scope.isTodayDisabled = this.isDisabled(new Date());\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              that.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === picker.$date[0].toDateString() && item.date.end.toDateString() === picker.$date[1].toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            this.built = true;\n          },\n          isSelected: function (currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth() &&\n              date.getDate() === currentDate.getDate();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function (date, index) {\n            var time = date.getTime();\n            if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            if (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1]))) {\n              return true;\n            }\n            if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) {\n              return true;\n            }\n            if (options.disabledDateRanges) {\n              for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                  return true;\n                }\n              }\n            }\n            return false;\n          }\n        }, {\n          name: 'month',\n          format: options.monthFormat,\n          split: 4,\n          steps: {\n            year: 1\n          },\n          rangeList: [\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}},\n            {name: 'Two Months Ago', value: '-2m', date: {start: new Date(t.getFullYear(), t.getMonth() - 2, 1), end: new Date(t.getFullYear(), t.getMonth() - 1, 0)}}\n          ],\n          update: function(sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function() {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var months = [];\n              var month;\n\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate[value].year, i, 1);\n                months.push({\n                  date: month,\n                  label: formatDate(month, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], month),\n                  inRange: that.isInRange(month),\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(month, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], month)\n                });\n              }\n              scope.title[index] = formatDate(month, options.yearTitleFormat);\n              scope.rows[index] = split(months, that.split);\n            });\n            scope.showLabels = false;\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              that.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === picker.$date[0].toDateString() && item.date.end.toDateString() === picker.$date[1].toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            this.built = true;\n\n          },\n          isSelected: function(currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function(date, index) {\n            var time = date.getTime();\n            var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n            if (lastDate < options.minDate || date.getTime() > options.maxDate) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            return (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1])));\n          }\n        }];\n        return {\n          views: Array.prototype.slice.call(views, options.minView, options.minView + 1),\n          viewDate: viewDate\n        };\n      };\n    }];\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      // uncommenting the next two lines will break backwards compatability\n      // prefixClass: 'popover',\n      // prefixEvent: 'popover',\n      container: false,\n      target: false,\n      placement: 'right',\n      templateUrl: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function ($tooltip) {\n\n      function PopoverFactory (element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if (options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function ($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr) {\n\n        var popover;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent', 'bsEnabled'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n              if (angular.isDefined(oldValue)) {\n                requestAnimationFrame(function () {\n                  if (popover) popover.$applyPlacement();\n                });\n              }\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsPopover) {\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              requestAnimationFrame(function () {\n                if (popover) popover.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n            if (newValue === true) {\n              popover.show();\n            } else {\n              popover.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(popover),?/i);\n            if (newValue === false) {\n              popover.setEnabled(false);\n            } else {\n              popover.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            popover.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n","'use strict';\n\nif (angular.version.minor < 3 && angular.version.dot < 14) {\n  angular.module('ng')\n\n  .factory('$$rAF', function ($window, $timeout) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported ?\n      function (fn) {\n        var id = requestAnimationFrame(fn);\n        return function () {\n          cancelAnimationFrame(id);\n        };\n      } :\n      function (fn) {\n        var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n        return function () {\n          $timeout.cancel(timer);\n        };\n      };\n\n    raf.supported = rafSupported;\n\n    return raf;\n\n  });\n}\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function () {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function ($parse, $q) {\n\n      function ParseOptionsFactory (attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match;\n        var displayFn;\n        var valueName;\n        /* eslint-disable no-unused-vars */\n        var keyName;\n        var groupByFn;\n        /* eslint-enable no-unused-vars */\n        var valueFn;\n        var valuesFn;\n\n        $parseOptions.init = function () {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]);\n          valueName = match[4] || match[6];\n          keyName = match[5];\n          groupByFn = $parse(match[3] || '');\n          valueFn = $parse(match[2] ? match[1] : valueName);\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function (scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function (values) {\n            if (!angular.isArray(values)) {\n              values = [];\n            }\n            $parseOptions.$values = values.length ? parseValues(values, scope) : [];\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function (modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues (values, scope) {\n          return values.map(function (match, index) {\n            var locals = {};\n            var label;\n            var value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function () {\n\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function (element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function (element, prop, extra) {\n      var value;\n      if (element.currentStyle) { // IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function (element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides set equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip\n     * @url http://api.jquery.com/offset/\n     * @param element\n     * @param options\n     * @param i\n     */\n    fn.setOffset = function (element, options, i) {\n      var curPosition;\n      var curLeft;\n      var curCSSTop;\n      var curTop;\n      var curOffset;\n      var curCSSLeft;\n      var calculatePosition;\n      var position = fn.css(element, 'position');\n      var curElem = angular.element(element);\n      var props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        element.style.position = 'relative';\n      }\n\n      curOffset = fn.offset(element);\n      curCSSTop = fn.css(element, 'top');\n      curCSSLeft = fn.css(element, 'left');\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = fn.position(element);\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (angular.isFunction(options)) {\n        options = options.call(element, i, curOffset);\n      }\n\n      if (options.top !== null) {\n        props.top = (options.top - curOffset.top) + curTop;\n      }\n      if (options.left !== null) {\n        props.left = (options.left - curOffset.left) + curLeft;\n      }\n\n      if ('using' in options) {\n        options.using.call(curElem, props);\n      } else {\n        curElem.css({\n          top: props.top + 'px',\n          left: props.left + 'px'\n        });\n      }\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function (element) {\n\n      var offsetParentRect = {top: 0, left: 0};\n      var offsetParentEl;\n      var offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentEl\n        offsetParentEl = offsetParentElement(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentEl, 'html')) {\n          offsetParentRect = fn.offset(offsetParentEl);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    function offsetParentElement (element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    }\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function (element, outer) {\n      var value = element.offsetHeight;\n      if (outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function (element, outer) {\n      var value = element.offsetWidth;\n      if (outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', function ($timeout) {\n  return function (func, wait, immediate) {\n    var timeout = null;\n    return function () {\n      var context = this;\n      var args = arguments;\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if (callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = null;\n    if (!options) options = {};\n    return function () {\n      var context = this;\n      var args = arguments;\n      if (!timeout) {\n        if (options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later () {\n          timeout = null;\n          if (options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function ($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate () {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function (value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function (value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function (value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function (value) { this.hours = value; };\n  ParseDate.prototype.getHours = function () { return this.hours; };\n  ParseDate.prototype.setDate = function (value) { this.day = value; };\n  ParseDate.prototype.setMonth = function (value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function (value) { this.year = value; };\n  ParseDate.prototype.fromDate = function (value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function () {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop () {\n  }\n\n  function isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive (array, value) {\n    var len = array.length;\n    var str = value.toString().toLowerCase();\n    for (var i = 0; i < len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function ($locale, dateFilter) {\n\n    var DateParserFactory = function (config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      /* eslint-disable key-spacing, quote-props */\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}'\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function (value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function (value) { return this.setMonth(1 * value - 1); },\n        'M'     : function (value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function (value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : function (value) { return (1 * value <= 50 && value.length === 2) ? this.setFullYear(2000 + 1 * value) : this.setFullYear(1 * value); }\n      };\n      /* eslint-enable key-spacing, quote-props */\n\n      var regex;\n      var setMap;\n\n      $dateParser.init = function () {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function (date) {\n        if (angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function (value, baseDate, format, timezone) {\n        // check for date format special names\n        if (format) format = $locale.DATETIME_FORMATS[format] || format;\n        if (angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format, timezone);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if (!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for (var i = 0; i < matches.length - 1; i++) {\n          if (formatSetMap[i]) formatSetMap[i].call(date, matches[i + 1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function (key, value) {\n        var date;\n\n        if (value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if (isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && value.length === 0) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function (key, value) {\n        var time;\n\n        if (value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if (isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.length === 0) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function (date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      /* Correct the date for timezone offset.\n      * @param  date  (Date) the date to adjust\n      * @param  timezone  (string) the timezone to adjust for\n      * @param  undo  (boolean) to add or subtract timezone offset\n      * @return  (Date) the corrected date\n      */\n      $dateParser.timezoneOffsetAdjust = function (date, timezone, undo) {\n        if (!date) {\n          return null;\n        }\n        // Right now, only 'UTC' is supported.\n        if (timezone && timezone === 'UTC') {\n          date = new Date(date.getTime());\n          date.setMinutes(date.getMinutes() + (undo ? -1 : 1) * date.getTimezoneOffset());\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function regExpForFormat (format) {\n        // `format` string can contain literal values.\n        // These need to be escaped by surrounding with\n        // single quotes (e.g. `\"h 'in the morning'\"`).\n        // In order to output a single quote, escape it - i.e.,\n        // two single quotes in a sequence (e.g. `\"h 'o''clock'\"`).\n\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseRegex(re);\n      }\n\n      function buildDateAbstractRegex (format) {\n        var escapedFormat = escapeReservedSymbols(format);\n        var escapedLiteralFormat = escapedFormat.replace(/''/g, '\\\\\\'');\n        var literalRegex = /('(?:\\\\'|.)*?')/;\n        var formatParts = escapedLiteralFormat.split(literalRegex);\n        var dateElements = Object.keys(regExpMap);\n        var dateRegexParts = [];\n\n        angular.forEach(formatParts, function (part) {\n          if (isFormatStringLiteral(part)) {\n            part = trimLiteralEscapeChars(part);\n          } else {\n            // Abstract replaces to avoid collisions\n            for (var i = 0; i < dateElements.length; i++) {\n              part = part.split(dateElements[i]).join('${' + i + '}');\n            }\n          }\n          dateRegexParts.push(part);\n        });\n\n        return dateRegexParts.join('');\n      }\n\n      function escapeReservedSymbols (text) {\n        return text.replace(/\\\\/g, '[\\\\\\\\]')\n                   .replace(/-/g, '[-]')\n                   .replace(/\\./g, '[.]')\n                   .replace(/\\*/g, '[*]')\n                   .replace(/\\+/g, '[+]')\n                   .replace(/\\?/g, '[?]')\n                   .replace(/\\$/g, '[$]')\n                   .replace(/\\^/g, '[^]')\n                   .replace(/\\//g, '[/]')\n                   .replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function isFormatStringLiteral (text) {\n        return /^'.*'$/.test(text);\n      }\n\n      function trimLiteralEscapeChars (text) {\n        return text.replace(/^'(.*)'$/, '$1');\n      }\n\n      function buildDateParseRegex (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var re = abstractRegex;\n\n        // Replace abstracted values\n        for (var i = 0; i < dateElements.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[dateElements[i]] + ')');\n        }\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      function setMapForFormat (format) {\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseValuesMap(re);\n      }\n\n      function buildDateParseValuesMap (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var valuesRegex = new RegExp('\\\\${(\\\\d+)}', 'g');\n        var valuesMatch;\n        var keyIndex;\n        var valueKey;\n        var valueFunction;\n        var valuesFunctionMap = [];\n\n        /* eslint-disable no-cond-assign */\n        while ((valuesMatch = valuesRegex.exec(abstractRegex)) !== null) {\n          keyIndex = valuesMatch[1];\n          valueKey = dateElements[keyIndex];\n          valueFunction = setFnMap[valueKey];\n\n          valuesFunctionMap.push(valueFunction);\n        }\n\n        return valuesFunctionMap;\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n","/**\n * Created by xiashan on 17/12/8.\n */\n'use strict';\n\nangular.module('mgcrea.ngStrap.datetimepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip'])\n  .provider('datetimepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      function DatetimepickerViewsFactory (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var format = $dateFormatter.getDatetimeFormat(options.dateFormat, lang);\n        var timeSeparator = $dateFormatter.timeSeparator(format);\n        var showSeconds = $dateFormatter.showSeconds(format);\n        scope.$iconUp = options.iconUp;\n        scope.$iconDown = options.iconDown;\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n        var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var viewDate = {\n          year: startDate.getFullYear(),\n          month: startDate.getMonth(),\n          date: startDate.getDate(),\n          hour: startDate.getHours(),\n          minute: startDate.getMinutes(),\n          second: startDate.getSeconds(),\n          millisecond: startDate.getMilliseconds()\n        };\n        var views = [\n          {\n            hourFormat: options.hourFormat,\n            minuteFormat: options.minuteFormat,\n            secondFormat: options.secondFormat,\n            split: 7,\n            steps: {\n              date: 1\n            },\n            update: function (date, force) {\n              if (angular.isDate(date) && !isNaN(date.getTime())) {\n                // picker.$date === date\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate(),\n                  hour: picker.$date.getHours(),\n                  minute: picker.$date.getMinutes(),\n                  second: picker.$date.getSeconds(),\n                  millisecond: picker.$date.getMilliseconds()\n                });\n                picker.$build();\n              } else if (!this.built || force) {\n                picker.$build();\n              }\n            },\n            build: function () {\n              var i;\n              var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n              var hours = [];\n              var hour;\n              var step;\n              for (i = 0; i < options.length; i++) {\n                // hour = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour - (midIndex - i) * options.hourStep);\n                step = viewDate.hour - (midIndex - i) * options.hourStep;\n                step = step < 0 ? (24 + step) : step;\n                hour = new Date(viewDate.year, viewDate.month, viewDate.date, step, viewDate.minute, viewDate.second);\n                hours.push({\n                  date: hour,\n                  label: formatDate(hour, this.hourFormat),\n                  selected: picker.$date && this.isSelected(hour, 0),\n                  disabled: this.isDisabled(hour, 0)\n                  // selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n                  // disabled: $timepicker.$isDisabled(hour, 0)\n                });\n              }\n              var minutes = [];\n              var minute;\n              for (i = 0; i < options.length; i++) {\n                // minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n                step = viewDate.minute - (midIndex - i) * options.minuteStep;\n                step = step < 0 ? (60 + step) : step;\n                minute = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, step, viewDate.second);\n                minutes.push({\n                  date: minute,\n                  label: formatDate(minute, this.minuteFormat),\n                  selected: picker.$date && this.isSelected(minute, 1),\n                  disabled: this.isDisabled(minute, 1)\n                });\n              }\n              var seconds = [];\n              var second;\n              for (i = 0; i < options.length; i++) {\n                // second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n                step = viewDate.second - (midIndex - i) * options.secondStep;\n                step = step < 0 ? (60 + step) : step;\n                second = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute, step);\n                seconds.push({\n                  date: second,\n                  label: formatDate(second, this.secondFormat),\n                  selected: picker.$date && this.isSelected(second, 2),\n                  disabled: this.isDisabled(second, 2)\n                });\n              }\n              var rows = [];\n              for (i = 0; i < options.length; i++) {\n                if (showSeconds) {\n                  rows.push([hours[i], minutes[i], seconds[i]]);\n                } else {\n                  rows.push([hours[i], minutes[i]]);\n                }\n              }\n              scope.title = formatDate(new Date(viewDate.year, viewDate.month, viewDate.date), options.timeTitleFormat);\n              scope.rows = rows;\n              scope.showSeconds = showSeconds;\n              scope.timeSeparator = timeSeparator;\n              this.built = true;\n            },\n            isSelected: function (date, index) {\n              if (!picker.$date) {\n                return false;\n              } else if (index === 0) {\n                return date.getHours() === picker.$date.getHours();\n              } else if (index === 1) {\n                return date.getMinutes() === picker.$date.getMinutes();\n              } else if (index === 2) {\n                return date.getSeconds() === picker.$date.getSeconds();\n              }\n              return false;\n            },\n            isDisabled: function (date, index) {\n              var time = date.getTime();\n              return options.minDate && angular.isDate(options.minDate) && time < options.minDate.getTime() ||\n                (options.maxDate && angular.isDate(options.maxDate) && time > options.maxDate.getTime());\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n            }\n          },\n          {\n            format: options.dayFormat,\n            split: 7,\n            steps: {\n              month: 1\n            },\n            update: function (date, force) {\n              if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n                viewDate.date = picker.$date.getDate();\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === today,\n                  label: formatDate(day, this.format),\n                  selected: picker.$date && this.isSelected(day),\n                  muted: day.getMonth() !== viewDate.month,\n                  disabled: this.isDisabled(day)\n                });\n              }\n              scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.showLabels = true;\n              scope.labels = weekDaysLabelsHtml;\n              scope.rows = split(days, this.split);\n              scope.isTodayDisabled = this.isDisabled(new Date());\n              this.built = true;\n            },\n            isSelected: function (date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n            },\n            isDisabled: function (date) {\n              var time = date.getTime();\n              if (options.minDate && angular.isDate(options.minDate)) {\n                var minDate = new Date(options.minDate.getFullYear(), options.minDate.getMonth(), options.minDate.getDate(), 0, 0, 0);\n                if (time < Date.parse(minDate)) {\n                  return true;\n                }\n              }\n              if (options.maxDate && angular.isDate(options.maxDate)) {\n                var maxDate = new Date(options.maxDate.getFullYear(), options.maxDate.getMonth(), options.maxDate.getDate() + 1, 0, 0, 0);\n                if (time >= Date.parse(maxDate)) {\n                  return true;\n                }\n              }\n              // if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n              if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n              if (options.disabledDateRanges) {\n                for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                  if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualTime = picker.$date.getTime();\n              var newDate;\n              if (evt.keyCode === 37) {\n                newDate = new Date(actualTime - 1 * 864e5);\n              } else if (evt.keyCode === 38) {\n                newDate = new Date(actualTime - 7 * 864e5);\n              } else if (evt.keyCode === 39) {\n                newDate = new Date(actualTime + 1 * 864e5);\n              } else if (evt.keyCode === 40) {\n                newDate = new Date(actualTime + 7 * 864e5);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          },\n          {\n            name: 'month',\n            format: options.monthFormat,\n            split: 4,\n            steps: {\n              year: 1\n            },\n            update: function (date, force) {\n              if (!this.built || date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var months = [];\n              var month;\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate.year, i, 1);\n                months.push({\n                  date: month,\n                  label: formatDate(month, this.format),\n                  selected: picker.$isSelected(month),\n                  disabled: this.isDisabled(month)\n                });\n              }\n              scope.title = formatDate(month, options.yearTitleFormat);\n              scope.showLabels = false;\n              scope.rows = split(months, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n            },\n            isDisabled: function(date) {\n              var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function(evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualMonth = picker.$date.getMonth();\n              var newDate = new Date(picker.$date);\n              if (evt.keyCode === 37) {\n                newDate.setMonth(actualMonth - 1);\n              } else if (evt.keyCode === 38) {\n                newDate.setMonth(actualMonth - 4);\n              } else if (evt.keyCode === 39) {\n                newDate.setMonth(actualMonth + 1);\n              } else if (evt.keyCode === 40) {\n                newDate.setMonth(actualMonth + 4);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          },\n          {\n            name: 'year',\n            format: options.yearFormat,\n            split: 4,\n            steps: {\n              year: 12\n            },\n            update: function (date, force) {\n              if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n              var years = [];\n              var year;\n              for (var i = 0; i < 12; i++) {\n                year = new Date(firstYear + i, 0, 1);\n                years.push({\n                  date: year,\n                  label: formatDate(year, this.format),\n                  selected: picker.$isSelected(year),\n                  disabled: this.isDisabled(year)\n                });\n              }\n              scope.title = years[0].label + '-' + years[years.length - 1].label;\n              scope.showLabels = false;\n              scope.rows = split(years, this.split);\n              this.built = true;\n            },\n            isSelected: function (date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n            },\n            isDisabled: function (date) {\n              var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualYear = picker.$date.getFullYear();\n              var newDate = new Date(picker.$date);\n              if (evt.keyCode === 37) {\n                newDate.setYear(actualYear - 1);\n              } else if (evt.keyCode === 38) {\n                newDate.setYear(actualYear - 4);\n              } else if (evt.keyCode === 39) {\n                newDate.setYear(actualYear + 1);\n              } else if (evt.keyCode === 40) {\n                newDate.setYear(actualYear + 4);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          }];\n        return {\n          views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n          viewDate: viewDate\n        };\n      }\n      return DatetimepickerViewsFactory;\n    }];\n  })\n  .provider('$datetimepicker', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'datepicker',\n      placement: 'bottom-left',\n      templateUrl: 'datetimepicker/datetimepicker.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      dateType: 'date',\n      dateFormat: 'shortDate',\n      timezone: null,\n      modelDateFormat: null,\n      hourFormat: 'HH',\n      minuteFormat: 'mm',\n      secondFormat: 'ss',\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      timeTitleFormat: 'dd MMM',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      startView: 1,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      hasToday: false,\n      hasClear: false,\n      length: 5,\n      hourStep: 1,\n      minuteStep: 5,\n      secondStep: 5,\n      roundDisplay: false,\n      iconUp: 'nox-sort-up',\n      iconDown: 'nox-sort-down',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      arrowBehavior: 'pager'\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datetimepickerViews', '$tooltip', '$timeout', function ($window, $document, $rootScope, $sce, $dateFormatter, datetimepickerViews, $tooltip, $timeout) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      var isTouch = 'createTouch' in $window.document && isNative;\n      if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n      function DatetimepickerFactory (element, controller, config) {\n        var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n        var parentScope = config.scope;\n        var options = $datepicker.$options;\n        var scope = $datepicker.$scope;\n        if (options.startView) options.startView -= options.minView;\n        var pickerViews = datetimepickerViews($datepicker);\n        $datepicker.$views = pickerViews.views;\n        var viewDate = pickerViews.viewDate;\n        scope.$mode = options.startView;\n        scope.$iconLeft = options.iconLeft;\n        scope.$iconRight = options.iconRight;\n        scope.$hasToday = options.hasToday;\n        scope.$hasClear = options.hasClear;\n        var $picker = $datepicker.$views[scope.$mode];\n        scope.$select = function(date) {\n          $datepicker.select(date);\n        };\n        scope.$selectPane = function(value) {\n          $datepicker.$selectPane(value);\n        };\n        scope.$selectTime = function(date, index) {\n          $datepicker.selectTime(date, index);\n        };\n        scope.$arrowAction = function(value, index) {\n          if (options.arrowBehavior === 'picker') {\n            $datepicker.$setTimeByStep(value, index);\n          } else {\n            $datepicker.$moveIndex(value, index);\n          }\n        };\n        scope.$toggleMode = function() {\n          $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n        };\n        scope.$setToday = function() {\n          if (options.autoclose) {\n            $datepicker.setMode(0);\n            $datepicker.select(new Date());\n          } else {\n            $datepicker.select(new Date(), true);\n          }\n        };\n        scope.$clear = function() {\n          if (options.autoclose) {\n            $datepicker.setMode(0);\n            $datepicker.select(null);\n          } else {\n            $datepicker.select(null, true);\n          }\n        };\n        $datepicker.update = function(date) {\n          if (angular.isDate(date) && !isNaN(date.getTime())) {\n            $datepicker.$date = date;\n            $picker.update.call($picker, date);\n          }\n          $datepicker.$build(true);\n        };\n        $datepicker.updateDisabledDates = function(dateRanges) {\n          options.disabledDateRanges = dateRanges;\n          for (var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n          }\n        };\n        $datepicker.select = function(date, keep) {\n          if (angular.isDate(date)) {\n            if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n              controller.$dateValue = new Date(date);\n            }\n          } else {\n            controller.$dateValue = null;\n          }\n          if (!scope.$mode || keep) {\n            controller.$setViewValue(angular.copy(date));\n            controller.$render();\n            if (options.autoclose && !keep) {\n              $timeout(function() {\n                $datepicker.hide(true);\n              });\n            }\n          } else {\n            angular.extend(viewDate, {\n              year: date.getFullYear(),\n              month: date.getMonth(),\n              date: date.getDate(),\n              hour: date.getHours(),\n              minute: date.getMinutes(),\n              second: date.getSeconds(),\n              millisecond: date.getMilliseconds()\n            });\n            $datepicker.setMode(scope.$mode - 1);\n            $datepicker.$build();\n          }\n        };\n        $datepicker.selectTime = function(date, index, keep) {\n          if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date();\n          }\n          if (!angular.isDate(date)) {\n            date = new Date(date);\n          }\n          controller.$dateValue.setFullYear(date.getFullYear());\n          controller.$dateValue.setMonth(date.getMonth());\n          controller.$dateValue.setDate(date.getDate());\n          if (index === 0) {\n            controller.$dateValue.setHours(date.getHours());\n          } else if (index === 1) {\n            controller.$dateValue.setMinutes(date.getMinutes());\n          } else if (index === 2) {\n            controller.$dateValue.setSeconds(date.getSeconds());\n          }\n          controller.$setViewValue(angular.copy(controller.$dateValue));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              // $datepicker.setMode(options.startView);\n              $datepicker.hide(true);\n            });\n          }\n        };\n        $datepicker.setMode = function(mode) {\n          scope.$mode = mode;\n          $picker = $datepicker.$views[scope.$mode];\n          $datepicker.$build();\n        };\n        $datepicker.$build = function(pristine) {\n          if (pristine === true && $picker.built) return;\n          if (pristine === false && !$picker.built) return;\n          $picker.build.call($picker);\n        };\n        function updateSelected(el) {\n          el.selected = $datepicker.$isSelected(el.date);\n        }\n        $datepicker.$updateSelected = function() {\n          for (var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], updateSelected);\n          }\n        };\n        $datepicker.$isSelected = function(date) {\n          return $picker.isSelected(date);\n        };\n        $datepicker.$setDisabledEl = function(el) {\n          el.disabled = $picker.isDisabled(el.date);\n        };\n        $datepicker.$selectPane = function(value) {\n          var steps = $picker.steps;\n          var targetDate = new Date(Date.UTC(\n            viewDate.year + (steps.year || 0) * value,\n            viewDate.month + (steps.month || 0) * value,\n            steps.date ? (viewDate.date + steps.date * value) : 1\n          ));\n          angular.extend(viewDate, {\n            year: targetDate.getUTCFullYear(),\n            month: targetDate.getUTCMonth(),\n            date: targetDate.getUTCDate()\n          });\n          $datepicker.$build();\n        };\n        $datepicker.$setTimeByStep = function(value, index) {\n          var newDate = new Date($datepicker.$date);\n          var hours = newDate.getHours();\n          var minutes = newDate.getMinutes();\n          var seconds = newDate.getSeconds();\n          if (index === 0) {\n            newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n          } else if (index === 1) {\n            newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n          } else if (index === 2) {\n            newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n          }\n          $datepicker.selectTime(newDate, index, true);\n        };\n        $datepicker.$moveIndex = function(value, index) {\n          var targetDate;\n          if (index === 0) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n            angular.extend(viewDate, {\n              hour: targetDate.getHours()\n            });\n          } else if (index === 1) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n            angular.extend(viewDate, {\n              minute: targetDate.getMinutes()\n            });\n          } else if (index === 2) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n            angular.extend(viewDate, {\n              second: targetDate.getSeconds()\n            });\n          }\n          $datepicker.$build();\n        };\n        $datepicker.$onMouseDown = function(evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n              targetEl = targetEl.parent();\n            }\n            targetEl.triggerHandler('click');\n          }\n        };\n        $datepicker.$onKeyDown = function(evt) {\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (evt.keyCode === 13) {\n            if (!scope.$mode) {\n              $datepicker.hide(true);\n            } else {\n              scope.$apply(function() {\n                $datepicker.setMode(scope.$mode - 1);\n              });\n            }\n            return;\n          }\n          $picker.onKeyDown(evt);\n          parentScope.$digest();\n        };\n        function focusElement() {\n          element[0].focus();\n        }\n        var _init = $datepicker.init;\n        $datepicker.init = function() {\n          if (isNative && options.useNative) {\n            element.prop('type', 'date');\n            element.css('-webkit-appearance', 'textfield');\n            return;\n          } else if (isTouch) {\n            element.prop('type', 'text');\n            element.attr('readonly', 'true');\n            element.on('click', focusElement);\n          }\n          _init();\n        };\n        var _destroy = $datepicker.destroy;\n        $datepicker.destroy = function() {\n          if (isNative && options.useNative) {\n            element.off('click', focusElement);\n          }\n          _destroy();\n        };\n        var _show = $datepicker.show;\n        $datepicker.show = function() {\n          if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n          _show();\n          $timeout(function() {\n            if (!$datepicker.$isShown) return;\n            $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $datepicker.$onKeyDown);\n            }\n          }, 0, false);\n        };\n        var _hide = $datepicker.hide;\n        $datepicker.hide = function(blur) {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $datepicker.$onKeyDown);\n          }\n          _hide(blur);\n        };\n        return $datepicker;\n      }\n      DatetimepickerFactory.defaults = defaults;\n      return DatetimepickerFactory;\n    }];\n  })\n  .directive('bsDatetimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datetimepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datetimepicker) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n        var options = {\n          scope: scope\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        var datepicker = $datetimepicker(element, controller, options);\n        options = datepicker.$options;\n        if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n        var lang = options.lang;\n        var formatDate = function(date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function(newValue, oldValue) {\n            if (!datepicker || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n            if (newValue === true) {\n              datepicker.show();\n            } else {\n              datepicker.hide();\n            }\n          });\n        }\n        angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n          if (angular.isDefined(attr[key])) {\n            attr.$observe(key, function(newValue) {\n              datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n              if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n              validateAgainstMinMaxDate(controller.$dateValue);\n            });\n          }\n        });\n        if (angular.isDefined(attr.dateFormat)) {\n          attr.$observe('dateFormat', function(newValue) {\n            datepicker.$options.dateFormat = newValue;\n          });\n        }\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          datepicker.update(controller.$dateValue);\n        }, true);\n        function normalizeDateRanges(ranges) {\n          if (!ranges || !ranges.length) return null;\n          return ranges;\n        }\n        if (angular.isDefined(attr.disabledDates)) {\n          scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n            disabledRanges = normalizeDateRanges(disabledRanges);\n            previousValue = normalizeDateRanges(previousValue);\n            if (disabledRanges) {\n              datepicker.updateDisabledDates(disabledRanges);\n            }\n          });\n        }\n        function validateAgainstMinMaxDate(parsedDate) {\n          if (!angular.isDate(parsedDate)) return;\n          var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n          var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n          var isValid = isMinValid && isMaxValid;\n          controller.$setValidity('date', isValid);\n          controller.$setValidity('min', isMinValid);\n          controller.$setValidity('max', isMaxValid);\n          if (isValid) controller.$dateValue = parsedDate;\n        }\n        controller.$parsers.unshift(function(viewValue) {\n          var date;\n          if (!viewValue) {\n            controller.$setValidity('date', true);\n            return null;\n          }\n          var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n          if (!parsedDate || isNaN(parsedDate.getTime())) {\n            controller.$setValidity('date', false);\n            return;\n          }\n          validateAgainstMinMaxDate(parsedDate);\n          if (options.dateType === 'string') {\n            date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n            return formatDate(date, options.modelDateFormat || options.dateFormat);\n          }\n          date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n          if (options.dateType === 'number') {\n            return date.getTime();\n          } else if (options.dateType === 'unix') {\n            return date.getTime() / 1e3;\n          } else if (options.dateType === 'iso') {\n            return date.toISOString();\n          }\n          return new Date(date);\n        });\n        controller.$formatters.push(function(modelValue) {\n          var date;\n          if (angular.isUndefined(modelValue) || modelValue === null) {\n            date = NaN;\n          } else if (angular.isDate(modelValue)) {\n            date = modelValue;\n          } else if (options.dateType === 'string') {\n            date = dateParser.parse(modelValue, null, options.modelDateFormat);\n          } else if (options.dateType === 'unix') {\n            date = new Date(modelValue * 1e3);\n          } else {\n            date = new Date(modelValue);\n          }\n          controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n          return getDateFormattedString();\n        });\n        controller.$render = function() {\n          element.val(getDateFormattedString());\n        };\n        function getDateFormattedString() {\n          return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n        }\n        scope.$on('$destroy', function() {\n          if (datepicker) datepicker.destroy();\n          options = null;\n          datepicker = null;\n        });\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.datepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$datepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    prefixClass: 'datepicker',\n    placement: 'bottom-left',\n    templateUrl: 'datepicker/datepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: false,\n    dateType: 'date',\n    dateFormat: 'shortDate',\n    timezone: null,\n    modelDateFormat: null,\n    dayFormat: 'dd',\n    monthFormat: 'MMM',\n    yearFormat: 'yyyy',\n    monthTitleFormat: 'MMMM yyyy',\n    yearTitleFormat: 'yyyy',\n    strictFormat: false,\n    autoclose: false,\n    minDate: -Infinity,\n    maxDate: +Infinity,\n    startView: 0,\n    minView: 0,\n    startWeek: 0,\n    daysOfWeekDisabled: '',\n    hasToday: false,\n    hasClear: false,\n    iconLeft: 'nox-sort-left',\n    iconRight: 'nox-sort-right'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datepickerViews', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n    function DatepickerFactory(element, controller, config) {\n      var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $datepicker.$options;\n      var scope = $datepicker.$scope;\n      if (options.startView) options.startView -= options.minView;\n      var pickerViews = datepickerViews($datepicker);\n      $datepicker.$views = pickerViews.views;\n      var viewDate = pickerViews.viewDate;\n      scope.$mode = options.startView;\n      scope.$iconLeft = options.iconLeft;\n      scope.$iconRight = options.iconRight;\n      scope.$hasToday = options.hasToday;\n      scope.$hasClear = options.hasClear;\n      var $picker = $datepicker.$views[scope.$mode];\n      scope.$select = function(date) {\n        $datepicker.select(date);\n      };\n      scope.$selectPane = function(value) {\n        $datepicker.$selectPane(value);\n      };\n      scope.$toggleMode = function() {\n        $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n      };\n      scope.$setToday = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(new Date());\n        } else {\n          $datepicker.select(new Date(), true);\n        }\n      };\n      scope.$clear = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(null);\n        } else {\n          $datepicker.select(null, true);\n        }\n      };\n      $datepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $datepicker.$date = date;\n          $picker.update.call($picker, date);\n        }\n        $datepicker.$build(true);\n      };\n      $datepicker.updateDisabledDates = function(dateRanges) {\n        options.disabledDateRanges = dateRanges;\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n        }\n      };\n      $datepicker.select = function(date, keep) {\n        if (angular.isDate(date)) {\n          if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date(date);\n          }\n        } else {\n          controller.$dateValue = null;\n        }\n        if (!scope.$mode || keep) {\n          controller.$setViewValue(angular.copy(date));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              $datepicker.hide(true);\n            });\n          }\n        } else {\n          angular.extend(viewDate, {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            date: date.getDate()\n          });\n          $datepicker.setMode(scope.$mode - 1);\n          $datepicker.$build();\n        }\n      };\n      $datepicker.setMode = function(mode) {\n        scope.$mode = mode;\n        $picker = $datepicker.$views[scope.$mode];\n        $datepicker.$build();\n      };\n      $datepicker.$build = function(pristine) {\n        if (pristine === true && $picker.built) return;\n        if (pristine === false && !$picker.built) return;\n        $picker.build.call($picker);\n      };\n      $datepicker.$updateSelected = function() {\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], updateSelected);\n        }\n      };\n      $datepicker.$isSelected = function(date) {\n        return $picker.isSelected(date);\n      };\n      $datepicker.$setDisabledEl = function(el) {\n        el.disabled = $picker.isDisabled(el.date);\n      };\n      $datepicker.$selectPane = function(value) {\n        var steps = $picker.steps;\n        var targetDate = new Date(Date.UTC(viewDate.year + (steps.year || 0) * value, viewDate.month + (steps.month || 0) * value, 1));\n        angular.extend(viewDate, {\n          year: targetDate.getUTCFullYear(),\n          month: targetDate.getUTCMonth(),\n          date: targetDate.getUTCDate()\n        });\n        $datepicker.$build();\n      };\n      $datepicker.$onMouseDown = function(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $datepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          if (!scope.$mode) {\n            $datepicker.hide(true);\n          } else {\n            scope.$apply(function() {\n              $datepicker.setMode(scope.$mode - 1);\n            });\n          }\n          return;\n        }\n        $picker.onKeyDown(evt);\n        parentScope.$digest();\n      };\n      function updateSelected(el) {\n        el.selected = $datepicker.$isSelected(el.date);\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $datepicker.init;\n      $datepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'date');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $datepicker.destroy;\n      $datepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $datepicker.show;\n      $datepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.on('keydown', $datepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $datepicker.hide;\n      $datepicker.hide = function(blur) {\n        if (!$datepicker.$isShown) return;\n        $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n        if (options.keyboard) {\n          element.off('keydown', $datepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $datepicker;\n    }\n    DatepickerFactory.defaults = defaults;\n    return DatepickerFactory;\n  } ];\n}).directive('bsDatepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      var datepicker = $datepicker(element, controller, options);\n      options = datepicker.$options;\n      if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!datepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          if (newValue === true) {\n            datepicker.show();\n          } else {\n            datepicker.hide();\n          }\n        });\n      }\n      angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        }\n      });\n      if (angular.isDefined(attr.dateFormat)) {\n        attr.$observe('dateFormat', function(newValue) {\n          datepicker.$options.dateFormat = newValue;\n        });\n      }\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        datepicker.update(controller.$dateValue);\n      }, true);\n      function normalizeDateRanges(ranges) {\n        if (!ranges || !ranges.length) return null;\n        return ranges;\n      }\n      if (angular.isDefined(attr.disabledDates)) {\n        scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n          disabledRanges = normalizeDateRanges(disabledRanges);\n          previousValue = normalizeDateRanges(previousValue);\n          if (disabledRanges) {\n            datepicker.updateDisabledDates(disabledRanges);\n          }\n        });\n      }\n      function validateAgainstMinMaxDate(parsedDate) {\n        if (!angular.isDate(parsedDate)) return;\n        var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n        var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (isValid) controller.$dateValue = parsedDate;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedDate || isNaN(parsedDate.getTime())) {\n          controller.$setValidity('date', false);\n          return;\n        }\n        validateAgainstMinMaxDate(parsedDate);\n        if (options.dateType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n          return formatDate(date, options.modelDateFormat || options.dateFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.dateType === 'number') {\n          return date.getTime();\n        } else if (options.dateType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.dateType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.dateType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelDateFormat);\n        } else if (options.dateType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getDateFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getDateFormattedString());\n      };\n      function getDateFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (datepicker) datepicker.destroy();\n        options = null;\n        datepicker = null;\n      });\n    }\n  };\n} ]).provider('datepickerViews', function() {\n  function split(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  }\n  function mod(n, m) {\n    return (n % m + m) % m;\n  }\n  this.$get = [ '$dateFormatter', '$dateParser', '$sce', function($dateFormatter, $dateParser, $sce) {\n    return function(picker) {\n      var scope = picker.$scope;\n      var options = picker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n      var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n      var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n      var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n      var viewDate = {\n        year: startDate.getFullYear(),\n        month: startDate.getMonth(),\n        date: startDate.getDate()\n      };\n      var views = [ {\n        format: options.dayFormat,\n        split: 7,\n        steps: {\n          month: 1\n        },\n        update: function(date, force) {\n          if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n            viewDate.date = picker.$date.getDate();\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n          var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n          var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n          var firstDateOffset = firstDate.getTimezoneOffset();\n          var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n          if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n          var days = [];\n          var day;\n          for (var i = 0; i < 42; i++) {\n            day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n            days.push({\n              date: day,\n              isToday: day.toDateString() === today,\n              label: formatDate(day, this.format),\n              selected: picker.$date && this.isSelected(day),\n              muted: day.getMonth() !== viewDate.month,\n              disabled: this.isDisabled(day)\n            });\n          }\n          scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n          scope.showLabels = true;\n          scope.labels = weekDaysLabelsHtml;\n          scope.rows = split(days, this.split);\n          scope.isTodayDisabled = this.isDisabled(new Date());\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n        },\n        isDisabled: function(date) {\n          var time = date.getTime();\n          if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n          if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n          if (options.disabledDateRanges) {\n            for (var i = 0; i < options.disabledDateRanges.length; i++) {\n              if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                return true;\n              }\n            }\n          }\n          return false;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualTime = picker.$date.getTime();\n          var newDate;\n          if (evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5); else if (evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5); else if (evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5); else if (evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'month',\n        format: options.monthFormat,\n        split: 4,\n        steps: {\n          year: 1\n        },\n        update: function(date, force) {\n          if (!this.built || date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var months = [];\n          var month;\n          for (var i = 0; i < 12; i++) {\n            month = new Date(viewDate.year, i, 1);\n            months.push({\n              date: month,\n              label: formatDate(month, this.format),\n              selected: picker.$isSelected(month),\n              disabled: this.isDisabled(month)\n            });\n          }\n          scope.title = formatDate(month, options.yearTitleFormat);\n          scope.showLabels = false;\n          scope.rows = split(months, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualMonth = picker.$date.getMonth();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setMonth(actualMonth - 1); else if (evt.keyCode === 38) newDate.setMonth(actualMonth - 4); else if (evt.keyCode === 39) newDate.setMonth(actualMonth + 1); else if (evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'year',\n        format: options.yearFormat,\n        split: 4,\n        steps: {\n          year: 12\n        },\n        update: function(date, force) {\n          if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n          var years = [];\n          var year;\n          for (var i = 0; i < 12; i++) {\n            year = new Date(firstYear + i, 0, 1);\n            years.push({\n              date: year,\n              label: formatDate(year, this.format),\n              selected: picker.$isSelected(year),\n              disabled: this.isDisabled(year)\n            });\n          }\n          scope.title = years[0].label + '-' + years[years.length - 1].label;\n          scope.showLabels = false;\n          scope.rows = split(years, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualYear = picker.$date.getFullYear();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setYear(actualYear - 1); else if (evt.keyCode === 38) newDate.setYear(actualYear - 4); else if (evt.keyCode === 39) newDate.setYear(actualYear + 1); else if (evt.keyCode === 40) newDate.setYear(actualYear + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      } ];\n      return {\n        views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n        viewDate: viewDate\n      };\n    };\n  } ];\n});\n","'use strict';\n\n// @BUG: following snippet won't compile correctly\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      templateUrl: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissible: true\n    };\n\n    this.$get = function ($modal, $timeout) {\n\n      function AlertFactory (config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissible]\n        $alert.$scope.dismissible = !!options.dismissible;\n        if (options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if (options.duration) {\n          $alert.show = function () {\n            show();\n            $timeout(function () {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function ($window, $sce, $alert) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsAlert) {\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n","\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.rangedatepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.datetimepicker',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.pagination',\n  'mgcrea.ngStrap.sort'\n]);\n"],"sourceRoot":"/source/"}