{"version":3,"sources":["angular-strap.js","sort/sort.js","helpers/compiler.js","dropdown/dropdown.js","tooltip/tooltip.js","timepicker/timepicker.js","tab/tab.js","select/select.js","rangedatepicker/rangedatepicker.js","popover/popover.js","pagination/pagination.js","modal/modal.js","helpers/raf.js","helpers/parse-options.js","helpers/dimensions.js","helpers/debounce.js","helpers/date-parser.js","helpers/date-formatter.js","datepicker/datepicker.js","alert/alert.js","module.js"],"names":["window","list","undefined","templateUrl","options","cache","$templateCache","then","element","res","fetchTemplate","template","fetchPromises","module","$http","get","defaults","animation","prefixClass","data","this","compile","controller","console","controllerAs","resolve","copy","locals","bindToController","angular","forEach","value","isString","$injector","key","invoke","transformTemplate","identity","extend","$template","when","$q","all","templateEl","Error","findElement","contentTemplate","templates","contentEl","removeAttr","html","replace","next","remove","outerHTML","link","scope","trim","contents","linkFn","invokeCtrl","children","instance","ctrl","isObject","arguments","apply","bsCompilerService","item","i","attrs","querySelectorAll","len","length","postLink","show","dataName","charAt","toUpperCase","totalItems","target","event","currentTarget","$apply","isDefined","orderBy","sortBy","onSort","isFunction","$observe","newValue","bsKey","$eval","clickColumn","attr","provider","placement","titleTemplate","trigger","keyboard","title","type","delay","autoClose","bsEnabled","mouseDownPreventDefault","mouseDownStopPropagation","viewport","selector","padding","TooltipFactory","$get","promise","$tooltip","$bsCompiler","split","clearTimeout","hoverState","prefixEvent","hide","onShow","leaveAnimateCallback","$emit","destroyTipElement","onHide","_tipToHide","evt","preventDefault","triggers","nodeName","on","isTouch","toggle","enter","unbindTriggerEvents","$onFocusElementMouseDown","off","bindKeyboardEvents","tipElement","$onKeyUp","unbindKeyboardEvents","_autoCloseEventsBinded","bindAutoCloseEvents","$timeout","$body","unbindAutoCloseEvents","stopEventPropagation","getPosition","$element","elRect","getBoundingClientRect","rect","p","width","height","top","left","dimensions","offset","el","scroll","outerDims","isBody","document","documentElement","scrollTop","body","prop","clientWidth","innerHeight","position","actualWidth","actualHeight","marginLeft","isNaN","setOffset","using","parseInt","props","css","right","marginTop","tip","offsetHeight","getViewportAdjustedDelta","delta","offsetWidth","isVertical","arrowDelta","replaceArrow","arrowOffsetPosition","viewportDimensions","$viewport","topEdgeOffset","bottomEdgeOffset","viewportPadding","test","leftEdgeOffset","rightEdgeOffset","dimension","isHorizontal","$arrow","timeout","$isShown","tipScope","$destroy","$$phase","$options","config","$promise","$scope","$new","$rootScope","toLowerCase","$id","map","parseFloat","$sce","trustAsHtml","$setEnabled","$$postDigest","id","$hide","setEnabled","isEnabled","compileData","tipContainer","init","container","bindTriggerEvents","isElement","destroy","focus","onBeforeShow","after","parent","lastChild","display","visibility","clonedElement","addClass","safeDigest","version","prepend","$$rAF","$applyPlacement","$animate","enterAnimateCallback","_blur","leave","onBeforeHide","autoPlace","autoToken","elementPosition","tipWidth","tipHeight","viewportPosition","originalPlacement","removeClass","tipPosition","getCalculatedOffset","applyPlacement","blur","stopPropagation","directive","$root","$digest","restrict","query","isNative","tooltip","transclusion","falseValueRegExp","dataTarget","slice","hasOwnProperty","oldValue","bsTooltip","bsShow","$watch","match","setViewport","$on","useNative","timeType","timeFormat","timezone","modelTimeFormat","autoclose","minTime","maxTime","Infinity","hourStep","minuteStep","secondStep","roundDisplay","iconUp","iconDown","arrowBehavior","$timepicker","timepickerFactory","formatDate","format","viewDate","hour","startDate","getHours","meridian","coeff","selRange","select","end","start","setSelectionRange","isUndefined","collapse","selectionStart","moveStart","selectionEnd","moveEnd","focusElement","_init","parentScope","floorMinutes","time","floor","lang","selectedIndex","date","defaultDate","second","getSeconds","millisecond","getMilliseconds","$dateValue","hoursFormat","$dateFormatter","timeSeparator","minute","minutesFormat","secondsFormat","showSeconds","$iconUp","index","$moveIndex","$switchMeridian","switchMeridian","isDate","getMinutes","getTime","$build","$isBuilt","$render","keep","Date","setHours","setMinutes","setSeconds","$setViewValue","midIndex","hours","push","disabled","label","selected","minutes","$date","seconds","rows","$isDisabled","showAM","$isSelected","isAM","selectedTime","$arrowAction","$setTimeByStep","newDate","targetDate","$onMouseDown","targetEl","triggerHandler","$onKeyDown","keyCode","hoursLength","minutesLength","sepLength","lateralMove","count","selectRange","incr","isSeconds","isMeridian","secondsLength","createSelection","createTextRange","_destroy","_show","_hide","require","$window","navigator","userAgent","isMaxValid","isValid","parsedTime","isMinValid","setFullYear","$setValidity","$parsers","unshift","viewValue","getTimeFormattedString","timepicker","dateParser","$dateParser","validateAgainstMinMaxTime","ngModel","update","timezoneOffsetAdjust","$formatters","modelValue","NaN","parse","self","navClass","activeClass","$activeClass","$panes","$activePaneChangeListeners","$push","pane","$active","$attrs","$navClass","$remove","active","activeIndex","indexOf","splice","$setActive","name","fn","$pane","$tab","transclude","ngModelCtrl","bsTabsCtrl","bsActivePane","parsedBsActivePane","assign","$parse","controllers","render","$isActive","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","SelectFactory","$select","$activeIndex","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$activate","activate","$isVisible","$selectNone","$matches","matches","$updateActiveIndex","a","b","onSelect","isArray","$modelValue","$getIndex","minLength","$viewValue","equals","anchor","anchorCandidate","$selectScrollFix","$isIE","stopImmediatePropagation","ua","activeElement","tagName","e","dataMultiple","inputEl","addEventListener","watchedOptions","parsedOptions","valuesFn","values","$match","filter","join","$isEmpty","connector","dateType","dateFormat","modelDateFormat","dayFormat","monthFormat","yearFormat","monthTitleFormat","yearTitleFormat","strictFormat","minDate","maxDate","minView","startWeek","daysOfWeekDisabled","iconLeft","iconRight","compare","RangeDatepickerFactory","$rangedatepicker","$iconLeft","$compare","$picker","today","$today","view","d","getDay","rangeList","t","getFullYear","getMonth","getDate","rangeType","$toggleCompare","$closePicker","$stopPropagation","sDate","eDate","disabledDateRanges","dateRanges","force","l","$setDisabledEl","$compareDateValue","compareStartDate","compareEndDate","endDate","flag","toDateString","$getCompare","$updateSelected","updateSelected","pristine","built","isDisabled","steps","year","getUTCFullYear","getUTCDate","UTC","month","$selectRange","cate","substr","day","pickerViews","validateAgainstMinMaxDate","parsedDate1","rangedatepicker","parsedDate2","getDateFormattedString","strict","getDateForAttribute","onlyCompare","getFormattedDate","obj","skey","ekey","date1","date2","toISOString","$dateRange","dateRange","size","arrays","mod","n","m","arr","weekDaysMin","weekdaysShort","weekDaysLabelsHtml","picker","build","that","firstDate","firstDateOffset","firstDayOfMonthOffset","days","getTimezoneOffset","daylightSavingAdjust","isToday","inRange","isInRange","muted","compareSelect","firstDayOfMonth","showLabels","labels","isSelected","currentDate","content","$popover","PopoverFactory","requestAnimationFrame","bsPopover","popover","calculateTotalPages","pageClass","totalPages","pagesLength","Math","itemsPerPage","makePage","number","text","isActive","max","getPages","currentPage","pages","half","ceil","$pagination","bsPaginationCtrl","page","selectPage","onChange","noPrevious","noNext","selectPrevious","backdrop","zIndex","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","$modal","unbindBackdropEvents","modalElement","hideOnBackdropClick","backdropElement","preventEventDefault","modalScope","setScrollBar","scrollDiv","append","scrollbarWidth","fullWindowWidth","documentElementRect","bodyIsOverflowing","innerWidth","resetScrollBar","abs","backdropBaseZindex","$show","destroyModalElement","z-index","defaultPrevented","customClass","minor","backdropAnimation","bindBackdropEvents","which","lg","sm","setTimeout","modalClass","bsModal","modal","dot","cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","rafSupported","raf","timer","cancel","supported","$parseOptions","$values","regexp","valueName","keyName","displayFn","valueFn","ParseOptionsFactory","groupByFn","displayValue","factory","offsetParent","docElement","ownerDocument","outer","getComputedStyle","extra","currentStyle","boxRect","style","curPosition","curLeft","curCSSTop","curTop","calculatePosition","curElem","curCSSLeft","curOffset","call","offsetParentRect","offsetParentEl","offsetParentElement","func","immediate","args","context","callNow","leading","wait","trailing","$localeProvider","milliseconds","ParseDate","prototype","noop","array","indexOfCaseInsensitive","str","toString","DateParserFactory","proto","isNumeric","toDate","regExpMap","sss","$locale","dateFilter","mm","literalRegex","formatParts","escapedLiteralFormat","dateElements","keys","escapedFormat","isFormatStringLiteral","part","trimLiteralEscapeChars","dateRegexParts","escapeReservedSymbols","re","abstractRegex","buildDateParseRegex","setMapForFormat","buildDateAbstractRegex","buildDateParseValuesMap","Object","valuesMatch","keyIndex","valueKey","valuesFunctionMap","valueFunction","valuesRegex","exec","setFnMap","setMap","HH","H","hh","h","EEEE","EEE","DATETIME_FORMATS","SHORTDAY","dd","MMMM","MMM","SHORTMONTH","MM","M","DAY","yyyy","yy","y","MONTH","ss","s","setDate","setMonth","regex","$format","regExpForFormat","baseDate","formatRegex","formatSetMap","fromDate","getTimeForAttribute","undo","getDefaultLocale","getDatetimeFormat","splitTimeFormat","service","bodyEl","matchesSelector","DropdownFactory","$dropdown","onBodyClick","items","parentEl","hasClass","tAttrs","nextSibling","nodeType","parentNode","removeChild","dropdown","startView","hasToday","hasClear","DatepickerFactory","$datepicker","views","$iconRight","$hasToday","$selectPane","$hasClear","$toggleMode","$views","$mode","setMode","$setToday","$clear","updateDisabledDates","mode","getUTCMonth","shiftKey","altKey","onKeyDown","datepickerViews","previousValue","normalizeDateRanges","ranges","disabledRanges","datepicker","parsedDate","disabledDates","weekDaysLabels","concat","isTodayDisabled","months","lastDate","actualMonth","firstYear","years","actualYear","Array","setYear","duration","dismissible","AlertFactory","$alert","bsAlert","alert"],"mappings":"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","file":"angular-strap.min.js","sourcesContent":["(function(window, document, undefined) {\n'use strict';\n\n// Source: sort/sort.js\nangular.module('mgcrea.ngStrap.sort', []).directive('bsSort', [function() {\n  return {\n    scope: true,\n    compile: function (element, attrs) {\n      var list = element[0].querySelectorAll('th');\n      for (var i = 0, len = list.length; i < len; i++) {\n        var item = list[i];\n        item = angular.element(item);\n        if (item.attr('data-sortable')) {\n          var dataName = item.attr('data-name');\n          item.append('<div class=\"sorter\"><i class=\"nox-sort-up sort-asc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'asc\\'}\"></i><i class=\"nox-sort-down sort-desc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'desc\\'}\"></i></div>');\n        }\n      }\n\n      return function postLink (scope, element, attrs) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['onSort'], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        if (angular.isDefined(attrs.totalItems)) {\n          attrs.$observe('totalItems', function (newValue) {\n            options.totalItems = newValue;\n          });\n        }\n        // 初始化排序\n        angular.forEach([ 'orderBy', 'sortBy' ], function(key) {\n          if (angular.isDefined(attrs[key])) {\n            scope[key] = scope.$eval(attrs[key]);\n          }\n        });\n        var list = element[0].querySelectorAll('th');\n        for (var i = 0, len = list.length; i < len; i++) {\n          var item = list[i];\n          item = angular.element(item);\n          if (item.attr('data-sortable')) {\n            item.on('click', clickColumn);\n          }\n        }\n\n        function clickColumn (event) {\n          if (options.totalItems === -1) {\n            return;\n          }\n          var target = angular.element(event.currentTarget);\n          var dataName = target.attr('data-name');\n          if (dataName === scope.orderBy) {\n            scope.sortBy = scope.sortBy === 'asc' ? 'desc' : 'asc';\n          } else {\n            scope.orderBy = dataName;\n            scope.sortBy = 'desc';\n          }\n          scope.$apply();\n\n          if (angular.isDefined(options.onSort) && angular.isFunction(options.onSort)) {\n            options.onSort(scope.orderBy, scope.sortBy);\n          }\n        }\n      };\n    }\n  };\n}]);\n\n// Source: tooltip/tooltip.js\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      templateUrl: 'tooltip/tooltip.tpl.html',\n      template: '',\n      titleTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true,\n      mouseDownPreventDefault: true,\n      mouseDownStopPropagation: true,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory (element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        var promise = $tooltip.$promise = $bsCompiler.compile(options);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        var nodeName = element[0].nodeName.toLowerCase();\n        if (options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if (options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function (isEnabled) {\n          scope.$$postDigest(function () {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout;\n        var hoverState;\n\n        // Fetch, compile then initialize tooltip\n        var compileData;\n        var tipElement;\n        var tipContainer;\n        var tipScope;\n        promise.then(function (data) {\n          compileData = data;\n          $tooltip.init();\n        });\n\n        $tooltip.init = function () {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if (options.container === 'self') {\n            tipContainer = element;\n          } else if (angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if (options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if (options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              if (options.trigger === 'focus') {\n                element[0].focus();\n              } else {\n                $tooltip.show();\n              }\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function () {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function () {\n            if (hoverState === 'in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function () {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($tooltip);\n          }\n          var parent;\n          var after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if (tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = compileData.link(tipScope, function (clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', right: 'auto', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if (options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if (options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if (options.customClass) tipElement.addClass(options.customClass);\n\n          // Append the element, without any animations.  If we append\n          // using $animate.enter, some of the animations cause the placement\n          // to be off due to the transforms.\n          if (after) {\n            after.after(tipElement);\n          } else {\n            parent.prepend(tipElement);\n          }\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n\n          // Now, apply placement\n          $tooltip.$applyPlacement();\n\n          // Once placed, animate it.\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(tipElement, parent, after).then(enterAnimateCallback);\n          }\n          safeDigest(scope);\n\n          $$rAF(function () {\n            // Once the tooltip is placed and the animation starts, make the tooltip visible\n            if (tipElement) tipElement.css({visibility: 'visible'});\n\n            // Bind events\n            if (options.keyboard) {\n              if (options.trigger !== 'focus') {\n                $tooltip.focus();\n              }\n              bindKeyboardEvents();\n            }\n          });\n\n          if (options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($tooltip);\n          }\n        }\n\n        $tooltip.leave = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function (blur) {\n\n          if (!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($tooltip);\n          }\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(tipElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(tipElement).then(leaveAnimateCallback);\n          }\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if (options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if (options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($tooltip);\n          }\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if (_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function (evt) {\n          if (evt) { evt.preventDefault(); }\n          if ($tooltip.$isShown) {\n            $tooltip.leave();\n          } else {\n            $tooltip.enter();\n          }\n        };\n\n        $tooltip.focus = function () {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function (isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        $tooltip.setViewport = function (viewport) {\n          options.viewport = viewport;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function () {\n          if (!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement;\n          var autoToken = /\\s?auto?\\s?/i;\n          var autoPlace = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition();\n          var tipWidth = tipElement.prop('offsetWidth');\n          var tipHeight = tipElement.prop('offsetHeight');\n\n          // Refresh viewport position\n          $tooltip.$viewport = options.viewport && findElement(options.viewport.selector || options.viewport);\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var viewportPosition = getPosition($tooltip.$viewport);\n\n            if (/bottom/.test(originalPlacement) && elementPosition.bottom + tipHeight > viewportPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (/top/.test(originalPlacement) && elementPosition.top - tipHeight < viewportPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            if (/left/.test(originalPlacement) && elementPosition.left - tipWidth < viewportPosition.left) {\n              placement = placement.replace('left', 'right');\n            } else if (/right/.test(originalPlacement) && elementPosition.right + tipWidth > viewportPosition.width) {\n              placement = placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacement(tipPosition, placement);\n        };\n\n        $tooltip.$onKeyUp = function (evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function (evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function (evt) {\n          if (options.mouseDownPreventDefault) { evt.preventDefault(); }\n          if (options.mouseDownStopPropagation) { evt.stopPropagation(); }\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          if ($tooltip.$isShown) {\n            element[0].blur();\n          } else {\n            element[0].focus();\n          }\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function (trigger) {\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.on(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover') {\n                element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          });\n        }\n\n        function unbindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.off(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover') {\n                element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents () {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents () {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation (event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition ($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n          var isBody = el.tagName === 'BODY';\n\n          var elRect = el.getBoundingClientRect();\n          var rect = {};\n\n          // IE8 has issues with angular.extend and using elRect directly.\n          // By coping the values of elRect into a new object, we can continue to use extend\n          /* eslint-disable guard-for-in */\n          for (var p in elRect) { // eslint-disable-line\n            // DO NOT use hasOwnProperty when inspecting the return of getBoundingClientRect.\n            rect[p] = elRect[p];\n          }\n          /* eslint-enable guard-for-in */\n\n          if (rect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            rect = angular.extend({}, rect, {width: elRect.right - elRect.left, height: elRect.bottom - elRect.top});\n          }\n          var elOffset = isBody ? {top: 0, left: 0} : dimensions.offset(el);\n          var scroll = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.prop('scrollTop') || 0};\n          var outerDims = isBody ? {width: document.documentElement.clientWidth, height: $window.innerHeight} : null;\n\n          return angular.extend({}, rect, scroll, outerDims, elOffset);\n        }\n\n        function getCalculatedOffset (placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n            case 'right':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left + position.width\n              };\n              break;\n            case 'bottom':\n              offset = {\n                top: position.top + position.height,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n            case 'left':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left - actualWidth\n              };\n              break;\n            default:\n              offset = {\n                top: position.top - actualHeight,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n          }\n\n          if (!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if (split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n              case 'left':\n                offset.left = position.left;\n                break;\n              case 'right':\n                offset.left = position.left + position.width - actualWidth;\n                break;\n              default:\n                break;\n            }\n          } else if (split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n              case 'top':\n                offset.top = position.top - actualHeight + position.height;\n                break;\n              case 'bottom':\n                offset.top = position.top;\n                break;\n              default:\n                break;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacement (offset, placement) {\n          var tip = tipElement[0];\n          var width = tip.offsetWidth;\n          var height = tip.offsetHeight;\n\n          // manually read margins because getBoundingClientRect includes difference\n          var marginTop = parseInt(dimensions.css(tip, 'margin-top'), 10);\n          var marginLeft = parseInt(dimensions.css(tip, 'margin-left'), 10);\n\n          // we must check for NaN for ie 8/9\n          if (isNaN(marginTop)) marginTop = 0;\n          if (isNaN(marginLeft)) marginLeft = 0;\n\n          offset.top = offset.top + marginTop;\n          offset.left = offset.left + marginLeft;\n\n          // dimensions setOffset doesn't round pixel values\n          // so we use setOffset directly with our own function\n          dimensions.setOffset(tip, angular.extend({\n            using: function (props) {\n              tipElement.css({\n                top: Math.round(props.top) + 'px',\n                left: Math.round(props.left) + 'px',\n                right: ''\n              });\n            }\n          }, offset), 0);\n\n          // check to see if placing tip in new offset caused the tip to resize itself\n          var actualWidth = tip.offsetWidth;\n          var actualHeight = tip.offsetHeight;\n\n          if (placement === 'top' && actualHeight !== height) {\n            offset.top = offset.top + height - actualHeight;\n          }\n\n          // If it's an exotic placement, exit now instead of\n          // applying a delta and changing the arrow\n          if (/top-left|top-right|bottom-left|bottom-right/.test(placement)) return;\n\n          var delta = getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n\n          if (delta.left) {\n            offset.left += delta.left;\n          } else {\n            offset.top += delta.top;\n          }\n\n          dimensions.setOffset(tip, offset);\n\n          if (/top|right|bottom|left/.test(placement)) {\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n\n            replaceArrow(arrowDelta, tip[arrowOffsetPosition], isVertical);\n          }\n        }\n\n        // @source https://github.com/twbs/bootstrap/blob/v3.3.5/js/tooltip.js#L380\n        function getViewportAdjustedDelta (placement, position, actualWidth, actualHeight) {\n          var delta = {top: 0, left: 0};\n          if (!$tooltip.$viewport) return delta;\n\n          var viewportPadding = options.viewport && options.viewport.padding || 0;\n          var viewportDimensions = getPosition($tooltip.$viewport);\n\n          if (/right|left/.test(placement)) {\n            var topEdgeOffset = position.top - viewportPadding - viewportDimensions.scroll;\n            var bottomEdgeOffset = position.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\n              delta.top = viewportDimensions.top - topEdgeOffset;\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n              delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n            }\n          } else {\n            var leftEdgeOffset = position.left - viewportPadding;\n            var rightEdgeOffset = position.left + viewportPadding + actualWidth;\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n              delta.left = viewportDimensions.left - leftEdgeOffset;\n            } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n              delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n            }\n          }\n\n          return delta;\n        }\n\n        function replaceArrow (delta, dimension, isHorizontal) {\n          var $arrow = findElement('.tooltip-arrow, .arrow', tipElement[0]);\n\n          $arrow.css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n                .css(isHorizontal ? 'top' : 'left', '');\n        }\n\n        function destroyTipElement () {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if ($tooltip.$isShown && tipElement !== null) {\n            if (options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if (options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if (tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if (tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function ($window, $location, $sce, $parse, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        var tooltip;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'titleTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function (newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }\n        });\n\n        attr.$observe('disabled', function (newValue) {\n          if (newValue && tooltip.$isShown) {\n            tooltip.hide();\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsTooltip) {\n          scope.$watch(attr.bsTooltip, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.title = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n            if (newValue === true) {\n              tooltip.show();\n            } else {\n              tooltip.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n            if (newValue === false) {\n              tooltip.setEnabled(false);\n            } else {\n              tooltip.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            tooltip.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: timepicker/timepicker.js\nangular.module('mgcrea.ngStrap.timepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$timepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    defaultDate: 'auto',\n    prefixClass: 'timepicker',\n    placement: 'bottom-left',\n    templateUrl: 'timepicker/timepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: true,\n    timeType: 'date',\n    timeFormat: 'shortTime',\n    timezone: null,\n    modelTimeFormat: null,\n    autoclose: false,\n    minTime: -Infinity,\n    maxTime: +Infinity,\n    length: 5,\n    hourStep: 1,\n    minuteStep: 5,\n    secondStep: 5,\n    roundDisplay: false,\n    iconUp: 'nox-sort-up',\n    iconDown: 'nox-sort-down',\n    arrowBehavior: 'pager'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) {\n      defaults.lang = $dateFormatter.getDefaultLocale();\n    }\n    function timepickerFactory(element, controller, config) {\n      var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $timepicker.$options;\n      var scope = $timepicker.$scope;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      function floorMinutes(time) {\n        var coeff = 1e3 * 60 * options.minuteStep;\n        return new Date(Math.floor(time.getTime() / coeff) * coeff);\n      }\n      var selectedIndex = 0;\n      var defaultDate = options.roundDisplay ? floorMinutes(new Date()) : new Date();\n      var startDate = controller.$dateValue || defaultDate;\n      var viewDate = {\n        hour: startDate.getHours(),\n        meridian: startDate.getHours() < 12,\n        minute: startDate.getMinutes(),\n        second: startDate.getSeconds(),\n        millisecond: startDate.getMilliseconds()\n      };\n      var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n      var hoursFormat = $dateFormatter.hoursFormat(format);\n      var timeSeparator = $dateFormatter.timeSeparator(format);\n      var minutesFormat = $dateFormatter.minutesFormat(format);\n      var secondsFormat = $dateFormatter.secondsFormat(format);\n      var showSeconds = $dateFormatter.showSeconds(format);\n      var showAM = $dateFormatter.showAM(format);\n      scope.$iconUp = options.iconUp;\n      scope.$iconDown = options.iconDown;\n      scope.$select = function(date, index) {\n        $timepicker.select(date, index);\n      };\n      scope.$moveIndex = function(value, index) {\n        $timepicker.$moveIndex(value, index);\n      };\n      scope.$switchMeridian = function(date) {\n        $timepicker.switchMeridian(date);\n      };\n      $timepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $timepicker.$date = date;\n          angular.extend(viewDate, {\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            millisecond: date.getMilliseconds()\n          });\n          $timepicker.$build();\n        } else if (!$timepicker.$isBuilt) {\n          $timepicker.$build();\n        }\n      };\n      $timepicker.select = function(date, index, keep) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          controller.$dateValue = options.defaultDate === 'today' ? new Date() : new Date(1970, 0, 1);\n        }\n        if (!angular.isDate(date)) date = new Date(date);\n        if (index === 0) controller.$dateValue.setHours(date.getHours()); else if (index === 1) controller.$dateValue.setMinutes(date.getMinutes()); else if (index === 2) controller.$dateValue.setSeconds(date.getSeconds());\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n        if (options.autoclose && !keep) {\n          $timeout(function() {\n            $timepicker.hide(true);\n          });\n        }\n      };\n      $timepicker.switchMeridian = function(date) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          return;\n        }\n        var hours = (date || controller.$dateValue).getHours();\n        controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n      };\n      $timepicker.$build = function() {\n        var i;\n        var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n        var hours = [];\n        var hour;\n        for (i = 0; i < options.length; i++) {\n          hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n          hours.push({\n            date: hour,\n            label: formatDate(hour, hoursFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n            disabled: $timepicker.$isDisabled(hour, 0)\n          });\n        }\n        var minutes = [];\n        var minute;\n        for (i = 0; i < options.length; i++) {\n          minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n          minutes.push({\n            date: minute,\n            label: formatDate(minute, minutesFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(minute, 1),\n            disabled: $timepicker.$isDisabled(minute, 1)\n          });\n        }\n        var seconds = [];\n        var second;\n        for (i = 0; i < options.length; i++) {\n          second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n          seconds.push({\n            date: second,\n            label: formatDate(second, secondsFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(second, 2),\n            disabled: $timepicker.$isDisabled(second, 2)\n          });\n        }\n        var rows = [];\n        for (i = 0; i < options.length; i++) {\n          if (showSeconds) {\n            rows.push([ hours[i], minutes[i], seconds[i] ]);\n          } else {\n            rows.push([ hours[i], minutes[i] ]);\n          }\n        }\n        scope.rows = rows;\n        scope.showSeconds = showSeconds;\n        scope.showAM = showAM;\n        scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n        scope.timeSeparator = timeSeparator;\n        $timepicker.$isBuilt = true;\n      };\n      $timepicker.$isSelected = function(date, index) {\n        if (!$timepicker.$date) return false; else if (index === 0) {\n          return date.getHours() === $timepicker.$date.getHours();\n        } else if (index === 1) {\n          return date.getMinutes() === $timepicker.$date.getMinutes();\n        } else if (index === 2) {\n          return date.getSeconds() === $timepicker.$date.getSeconds();\n        }\n      };\n      $timepicker.$isDisabled = function(date, index) {\n        var selectedTime;\n        if (index === 0) {\n          selectedTime = date.getTime() + viewDate.minute * 6e4 + viewDate.second * 1e3;\n        } else if (index === 1) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.second * 1e3;\n        } else if (index === 2) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.minute * 6e4;\n        }\n        return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n      };\n      scope.$arrowAction = function(value, index) {\n        if (options.arrowBehavior === 'picker') {\n          $timepicker.$setTimeByStep(value, index);\n        } else {\n          $timepicker.$moveIndex(value, index);\n        }\n      };\n      $timepicker.$setTimeByStep = function(value, index) {\n        var newDate = new Date($timepicker.$date || startDate);\n        var hours = newDate.getHours();\n        var minutes = newDate.getMinutes();\n        var seconds = newDate.getSeconds();\n        if (index === 0) {\n          newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n        } else if (index === 1) {\n          newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n        } else if (index === 2) {\n          newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n        }\n        $timepicker.select(newDate, index, true);\n      };\n      $timepicker.$moveIndex = function(value, index) {\n        var targetDate;\n        if (index === 0) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n          angular.extend(viewDate, {\n            hour: targetDate.getHours()\n          });\n        } else if (index === 1) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n          angular.extend(viewDate, {\n            minute: targetDate.getMinutes()\n          });\n        } else if (index === 2) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n          angular.extend(viewDate, {\n            second: targetDate.getSeconds()\n          });\n        }\n        $timepicker.$build();\n      };\n      $timepicker.$onMouseDown = function(evt) {\n        if (evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $timepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          $timepicker.hide(true);\n          return;\n        }\n        var newDate = new Date($timepicker.$date);\n        var hours = newDate.getHours();\n        var hoursLength = formatDate(newDate, hoursFormat).length;\n        var minutes = newDate.getMinutes();\n        var minutesLength = formatDate(newDate, minutesFormat).length;\n        var seconds = newDate.getSeconds();\n        var secondsLength = formatDate(newDate, secondsFormat).length;\n        var sepLength = 1;\n        var lateralMove = /(37|39)/.test(evt.keyCode);\n        var count = 2 + showSeconds * 1 + showAM * 1;\n        if (lateralMove) {\n          if (evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1; else if (evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n        }\n        var selectRange = [ 0, hoursLength ];\n        var incr = 0;\n        if (evt.keyCode === 38) incr = -1;\n        if (evt.keyCode === 40) incr = +1;\n        var isSeconds = selectedIndex === 2 && showSeconds;\n        var isMeridian = selectedIndex === 2 && !showSeconds || selectedIndex === 3 && showSeconds;\n        if (selectedIndex === 0) {\n          newDate.setHours(hours + incr * parseInt(options.hourStep, 10));\n          hoursLength = formatDate(newDate, hoursFormat).length;\n          selectRange = [ 0, hoursLength ];\n        } else if (selectedIndex === 1) {\n          newDate.setMinutes(minutes + incr * parseInt(options.minuteStep, 10));\n          minutesLength = formatDate(newDate, minutesFormat).length;\n          selectRange = [ hoursLength + sepLength, minutesLength ];\n        } else if (isSeconds) {\n          newDate.setSeconds(seconds + incr * parseInt(options.secondStep, 10));\n          secondsLength = formatDate(newDate, secondsFormat).length;\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength, secondsLength ];\n        } else if (isMeridian) {\n          if (!lateralMove) $timepicker.switchMeridian();\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength + (secondsLength + sepLength) * showSeconds, 2 ];\n        }\n        $timepicker.select(newDate, selectedIndex, true);\n        createSelection(selectRange[0], selectRange[1]);\n        parentScope.$digest();\n      };\n      function createSelection(start, length) {\n        var end = start + length;\n        if (element[0].createTextRange) {\n          var selRange = element[0].createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end);\n          selRange.select();\n        } else if (element[0].setSelectionRange) {\n          element[0].setSelectionRange(start, end);\n        } else if (angular.isUndefined(element[0].selectionStart)) {\n          element[0].selectionStart = start;\n          element[0].selectionEnd = end;\n        }\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $timepicker.init;\n      $timepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'time');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $timepicker.destroy;\n      $timepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $timepicker.show;\n      $timepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if ($timepicker.$element) $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if (options.keyboard) {\n            if (element) element.on('keydown', $timepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $timepicker.hide;\n      $timepicker.hide = function(blur) {\n        if (!$timepicker.$isShown) return;\n        if ($timepicker.$element) $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n        if (options.keyboard) {\n          if (element) element.off('keydown', $timepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $timepicker;\n    }\n    timepickerFactory.defaults = defaults;\n    return timepickerFactory;\n  } ];\n}).directive('bsTimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$timepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n  var defaults = $timepicker.defaults;\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'autoclose', 'timeType', 'timeFormat', 'timezone', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'secondStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'roundDisplay', 'id', 'prefixClass', 'prefixEvent', 'defaultDate' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'roundDisplay' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      if (isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n      var timepicker = $timepicker(element, controller, options);\n      options = timepicker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!timepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          if (newValue === true) {\n            timepicker.show();\n          } else {\n            timepicker.hide();\n          }\n        });\n      }\n      var dateParser = $dateParser({\n        format: options.timeFormat,\n        lang: lang\n      });\n      angular.forEach([ 'minTime', 'maxTime' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            if (!isNaN(timepicker.$options[key])) timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        }\n      });\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        timepicker.update(controller.$dateValue);\n      }, true);\n      function validateAgainstMinMaxTime(parsedTime) {\n        if (!angular.isDate(parsedTime)) return;\n        var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n        var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (!isValid) {\n          return;\n        }\n        controller.$dateValue = parsedTime;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedTime || isNaN(parsedTime.getTime())) {\n          controller.$setValidity('date', false);\n          return undefined;\n        }\n        validateAgainstMinMaxTime(parsedTime);\n        if (options.timeType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedTime, options.timezone, true);\n          return formatDate(date, options.modelTimeFormat || options.timeFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.timeType === 'number') {\n          return date.getTime();\n        } else if (options.timeType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.timeType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.timeType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n        } else if (options.timeType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getTimeFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getTimeFormattedString());\n      };\n      function getTimeFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (timepicker) timepicker.destroy();\n        options = null;\n        timepicker = null;\n      });\n    }\n  };\n} ]);\n\n// Source: tab/tab.js\nangular.module('mgcrea.ngStrap.tab', []).provider('$tab', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    template: 'tab/tab.tpl.html',\n    navClass: 'nav-tabs',\n    activeClass: 'active'\n  };\n  var controller = this.controller = function($scope, $element, $attrs) {\n    var self = this;\n    self.$options = angular.copy(defaults);\n    angular.forEach([ 'animation', 'navClass', 'activeClass' ], function(key) {\n      if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n    });\n    $scope.$navClass = self.$options.navClass;\n    $scope.$activeClass = self.$options.activeClass;\n    self.$panes = $scope.$panes = [];\n    self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n    self.$push = function(pane) {\n      if (angular.isUndefined(self.$panes.$active)) {\n        $scope.$setActive(pane.name || 0);\n      }\n      self.$panes.push(pane);\n    };\n    self.$remove = function(pane) {\n      var index = self.$panes.indexOf(pane);\n      var active = self.$panes.$active;\n      var activeIndex;\n      if (angular.isString(active)) {\n        activeIndex = self.$panes.map(function(pane) {\n          return pane.name;\n        }).indexOf(active);\n      } else {\n        activeIndex = self.$panes.$active;\n      }\n      self.$panes.splice(index, 1);\n      if (index < activeIndex) {\n        activeIndex--;\n      } else if (index === activeIndex && activeIndex === self.$panes.length) {\n        activeIndex--;\n      }\n      if (activeIndex >= 0 && activeIndex < self.$panes.length) {\n        self.$setActive(self.$panes[activeIndex].name || activeIndex);\n      } else {\n        self.$setActive();\n      }\n    };\n    self.$setActive = $scope.$setActive = function(value) {\n      self.$panes.$active = value;\n      self.$activePaneChangeListeners.forEach(function(fn) {\n        fn();\n      });\n    };\n    self.$isActive = $scope.$isActive = function($pane, $index) {\n      return self.$panes.$active === $pane.name || self.$panes.$active === $index;\n    };\n  };\n  this.$get = function() {\n    var $tab = {};\n    $tab.defaults = defaults;\n    $tab.controller = controller;\n    return $tab;\n  };\n}).directive('bsTabs', [ '$window', '$animate', '$tab', '$parse', function($window, $animate, $tab, $parse) {\n  var defaults = $tab.defaults;\n  return {\n    require: [ '?ngModel', 'bsTabs' ],\n    transclude: true,\n    scope: true,\n    controller: [ '$scope', '$element', '$attrs', $tab.controller ],\n    templateUrl: function(element, attr) {\n      return attr.template || defaults.template;\n    },\n    link: function postLink(scope, element, attrs, controllers) {\n      var ngModelCtrl = controllers[0];\n      var bsTabsCtrl = controllers[1];\n      if (ngModelCtrl) {\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n        });\n        ngModelCtrl.$formatters.push(function(modelValue) {\n          bsTabsCtrl.$setActive(modelValue);\n          return modelValue;\n        });\n      }\n      if (attrs.bsActivePane) {\n        var parsedBsActivePane = $parse(attrs.bsActivePane);\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n        });\n        scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n          bsTabsCtrl.$setActive(newValue);\n        }, true);\n      }\n    }\n  };\n} ]).directive('bsPane', [ '$window', '$animate', '$sce', function($window, $animate, $sce) {\n  return {\n    require: [ '^?ngModel', '^bsTabs' ],\n    scope: true,\n    link: function postLink(scope, element, attrs, controllers) {\n      var bsTabsCtrl = controllers[1];\n      element.addClass('tab-pane');\n      attrs.$observe('title', function(newValue, oldValue) {\n        scope.title = $sce.trustAsHtml(newValue);\n      });\n      scope.name = attrs.name;\n      scope.link = attrs.link ? attrs.link : false;\n      if (bsTabsCtrl.$options.animation) {\n        element.addClass(bsTabsCtrl.$options.animation);\n      }\n      attrs.$observe('disabled', function(newValue, oldValue) {\n        scope.disabled = scope.$eval(newValue);\n      });\n      bsTabsCtrl.$push(scope);\n      scope.$on('$destroy', function() {\n        bsTabsCtrl.$remove(scope);\n      });\n      function render() {\n        var index = bsTabsCtrl.$panes.indexOf(scope);\n        $animate[bsTabsCtrl.$isActive(scope, index) ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n      }\n      bsTabsCtrl.$activePaneChangeListeners.push(function() {\n        render();\n      });\n      render();\n    }\n  };\n} ]);\n\n// Source: select/select.js\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"select-arrow\"><i class=\"nox-sort-down\"></i></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          }\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function () {\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n            scope.$activeIndex = -1;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: rangedatepicker/rangedatepicker.js\n/**\n * Created by xiashan on 17/5/12.\n */\n\nangular.module('mgcrea.ngStrap.rangedatepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ])\n  .provider('$rangedatepicker', function () {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'rangedatepicker',\n      placement: 'bottom-left',\n      templateUrl: 'rangedatepicker/rangedatepicker.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      connector: ' / ',\n      dateType: 'date',\n      dateFormat: 'yyyy-MM-dd',\n      timezone: null,\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      compare: true\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'rangedatepickerViews', '$tooltip', '$timeout',\n      function ($window, $document, $rootScope, $sce, $dateFormatter, rangedatepickerViews, $tooltip, $timeout) {\n        var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n        var isTouch = 'createTouch' in $window.document && isNative;\n        if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n        function RangeDatepickerFactory (element, controller, config) {\n          var $rangedatepicker = $tooltip(element, angular.extend({}, defaults, config));\n          var options = $rangedatepicker.$options;\n          var scope = $rangedatepicker.$scope;\n          var pickerViews = rangedatepickerViews($rangedatepicker);\n          $rangedatepicker.$view = pickerViews.view;\n          var viewDate = pickerViews.viewDate;\n          scope.$iconLeft = options.iconLeft;\n          scope.$iconRight = options.iconRight;\n          scope.$compare = options.compare;\n          var $picker = $rangedatepicker.$view;\n\n          var today = new Date();\n          var t = $rangedatepicker.$today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n          var d = today.getDay();\n\n          scope.rangeList = [\n            {name: 'Today', value: '0d', date: {start: t, end: t}},\n            {name: 'Yesterday', value: '-2d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1)}},\n            {name: 'Last 7 Days', value: '-7d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6), end: t}},\n            {name: 'Last Week', value: '-1w', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6 - d), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - d)}},\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}}\n          ];\n\n          // 区间\n          scope.ctrl = {\n            rangeType: '',\n            compare: ''\n          };\n\n          scope.$select = function (date, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.select(date, index);\n          };\n          scope.$selectPane = function (value, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.$selectPane(value, index);\n          };\n          scope.$selectRange = function (type) {\n            if (type === scope.ctrl.rangeType || scope.ctrl.compare) {\n              return;\n            }\n            $rangedatepicker.$selectRange(type);\n            $rangedatepicker.hide(true);\n          };\n          scope.$toggleCompare = function () {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            modelValue.onlyCompare = true;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n          };\n          scope.$closePicker = function () {\n            $rangedatepicker.hide();\n          };\n          scope.$stopPropagation = function (evt) {\n            evt.stopPropagation();\n          };\n\n          $rangedatepicker.update = function (sDate, eDate, force) {\n            if (angular.isDate(sDate) && !isNaN(sDate.getTime()) && angular.isDate(eDate) && !isNaN(eDate.getTime())) {\n              if (!scope.ctrl.compare) {\n                $rangedatepicker.$date = [sDate, eDate];\n              } else {\n                $rangedatepicker.$compareDate = [sDate, eDate];\n              }\n              $picker.update.call($picker, sDate, eDate);\n            }\n            $rangedatepicker.$build(!force);\n          };\n          $rangedatepicker.updateDisabledDates = function (dateRanges) {\n            options.disabledDateRanges = dateRanges;\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], $rangedatepicker.$setDisabledEl);\n            }\n          };\n          $rangedatepicker.select = function (date, index, keep) {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            if (!scope.ctrl.compare) {\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$dateValue[index]) || isNaN(controller.$dateValue[index].getTime())) {\n                  controller.$dateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$dateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.startDate = angular.copy(date);\n              } else {\n                modelValue.endDate = angular.copy(date);\n              }\n            } else {\n              controller.$compareDateValue = !controller.$compareDateValue ? [] : controller.$compareDateValue;\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$compareDateValue[index]) || isNaN(controller.$compareDateValue[index].getTime())) {\n                  controller.$compareDateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$compareDateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.compareStartDate = angular.copy(date);\n              } else {\n                modelValue.compareEndDate = angular.copy(date);\n              }\n            }\n            modelValue.onlyCompare = false;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              scope.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === modelValue.startDate.toDateString() && item.date.end.toDateString() === modelValue.endDate.toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            if (options.autoclose && !keep) {\n              $timeout(function () {\n                $rangedatepicker.hide(true);\n              });\n            }\n          };\n          $rangedatepicker.$getCompare = function () {\n            return scope.ctrl && scope.ctrl.compare;\n          };\n          $rangedatepicker.$build = function (pristine) {\n            if (pristine === true && $picker.built) return;\n            if (pristine === false && !$picker.built) return;\n            $picker.build.call($picker, $rangedatepicker.$date);\n          };\n          $rangedatepicker.$updateSelected = function () {\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], updateSelected);\n            }\n          };\n          $rangedatepicker.$isSelected = function (date) {\n            return $picker.isSelected(date);\n          };\n          $rangedatepicker.$setDisabledEl = function (el) {\n            el.disabled = $picker.isDisabled(el.date);\n          };\n          $rangedatepicker.$selectPane = function (value, index) {\n            var steps = $picker.steps;\n            var key = (index === 0) ? 'startDate' : 'endDate';\n            var targetDate = new Date(Date.UTC(viewDate[key].year + (steps.year || 0) * value, viewDate[key].month + (steps.month || 0) * value, 1));\n            angular.extend(viewDate[key], {\n              year: targetDate.getUTCFullYear(),\n              month: targetDate.getUTCMonth(),\n              date: targetDate.getUTCDate()\n            });\n            $rangedatepicker.$build();\n          };\n          $rangedatepicker.$selectRange = function (type) {\n            var cate = type.substr(-1);\n            var value = parseInt(type.substr(0, type.length - 1), 10);\n            var endDate = $rangedatepicker.$today;\n            var startDate;\n            switch (cate) {\n              case 'd':\n                if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value + 1);\n                  if (value === -2) {\n                    endDate = startDate;\n                  }\n                } else {\n                  startDate = endDate;\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value);\n                }\n                break;\n              case 'w':\n                var day = endDate.getDay();\n                if (value <= 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (day * -1 + 1));\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + (day * -1));\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + 7 - day + 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (7 - day));\n                }\n                break;\n              case 'm':\n                if (value === 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n                } else if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + value, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), 0);\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                }\n                break;\n              default:\n                break;\n            }\n            if (angular.isDate(startDate) && angular.isDate(endDate)) {\n              controller.$dateValue[0] = new Date(startDate);\n              controller.$dateValue[1] = new Date(endDate);\n              var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n              modelValue.startDate = angular.copy(startDate);\n              modelValue.endDate = angular.copy(endDate);\n              modelValue.onlyCompare = false;\n              controller.$setViewValue(modelValue);\n              controller.$render();\n              scope.ctrl.rangeType = type;\n            }\n          };\n          $rangedatepicker.$onMouseDown = function (evt) {\n            evt.preventDefault(true);\n            evt.stopPropagation(true);\n            var targetEl = angular.element(evt.target);\n            if (isTouch) {\n              if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n                targetEl = targetEl.parent();\n              }\n              targetEl.triggerHandler('click');\n            }\n          };\n          function updateSelected (el) {\n            el.selected = $rangedatepicker.$isSelected(el.date);\n          }\n          function focusElement () {\n            element[0].focus();\n          }\n          var _init = $rangedatepicker.init;\n          $rangedatepicker.init = function () {\n            if (isNative && options.useNative) {\n              element.prop('type', 'date');\n              element.css('-webkit-appearance', 'textfield');\n              return;\n            } else if (isTouch) {\n              element.prop('type', 'text');\n              element.attr('readonly', 'true');\n              element.on('click', focusElement);\n            }\n            _init();\n          };\n          var _destroy = $rangedatepicker.destroy;\n          $rangedatepicker.destroy = function () {\n            if (isNative && options.useNative) {\n              element.off('click', focusElement);\n            }\n            _destroy();\n          };\n          var _show = $rangedatepicker.show;\n          $rangedatepicker.show = function () {\n            // if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n            if (element.attr('disabled')) return;\n            _show();\n            $timeout(function () {\n              if (!$rangedatepicker.$isShown) return;\n              $rangedatepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            }, 0, false);\n          };\n          var _hide = $rangedatepicker.hide;\n          $rangedatepicker.hide = function (blur) {\n            if (!$rangedatepicker.$isShown) return;\n            $rangedatepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            _hide(blur);\n          };\n          return $rangedatepicker;\n        }\n        RangeDatepickerFactory.defaults = defaults;\n        return RangeDatepickerFactory;\n      }];\n  })\n  .directive('bsRangedatepicker', ['$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$rangedatepicker',\n    function ($window, $parse, $q, $dateFormatter, $dateParser, $rangedatepicker) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      return {\n        restrict: 'EAC',\n        require: 'ngModel',\n        link: function postLink (scope, element, attr, controller) {\n          var options = {\n            scope: scope\n          };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'connector', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'compare'], function (key) {\n            if (angular.isDefined(attr[key])) options[key] = attr[key];\n          });\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container', 'autoclose', 'useNative', 'compare'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n              options[key] = false;\n            }\n          });\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n          var rangedatepicker = $rangedatepicker(element, controller, options);\n          options = rangedatepicker.$options;\n          if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n          var lang = options.lang;\n          var formatDate = function (date, format) {\n            return $dateFormatter.formatDate(date, format, lang);\n          };\n          var dateParser = $dateParser({\n            format: options.dateFormat,\n            lang: lang,\n            strict: options.strictFormat\n          });\n          angular.forEach(['minDate', 'maxDate'], function (key) {\n            if (angular.isDefined(attr[key])) {\n              attr.$observe(key, function (newValue) {\n                rangedatepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n                if (!isNaN(rangedatepicker.$options[key])) {\n                  rangedatepicker.$build(false);\n                }\n                if (controller.$dateValue) {\n                  validateAgainstMinMaxDate(controller.$dateValue[0], controller.$dateValue[1]);\n                }\n              });\n            }\n          });\n          if (angular.isDefined(attr.dateFormat)) {\n            attr.$observe('dateFormat', function (newValue) {\n              rangedatepicker.$options.dateFormat = newValue;\n            });\n          }\n          scope.$watch(attr.ngModel, function (newValue, oldValue) {\n            if (newValue && newValue.onlyCompare) {\n              rangedatepicker.update(null, null, true);\n            } else if (rangedatepicker.$getCompare()) {\n              rangedatepicker.update(controller.$compareDateValue[0], controller.$compareDateValue[1]);\n            } else {\n              rangedatepicker.update(controller.$dateValue[0], controller.$dateValue[1]);\n            }\n          }, true);\n\n          function getFormattedDate (modelValue) {\n            var date;\n            if (angular.isDate(modelValue)) {\n              date = modelValue;\n            } else if (options.dateType === 'string') {\n              date = dateParser.parse(modelValue, null, options.modelDateFormat);\n            } else if (options.dateType === 'unix') {\n              date = new Date(modelValue * 1e3);\n            } else {\n              date = new Date(modelValue);\n            }\n            return date;\n          }\n          function validateAgainstMinMaxDate (parsedDate1, parsedDate2) {\n            if (!angular.isDate(parsedDate1) || !angular.isDate(parsedDate2)) {\n              return false;\n            }\n            var isMinValid = isNaN(rangedatepicker.$options.minDate) || parsedDate1.getTime() >= rangedatepicker.$options.minDate;\n            var isMaxValid = isNaN(rangedatepicker.$options.maxDate) || parsedDate2.getTime() <= rangedatepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            var compare = rangedatepicker.$getCompare();\n            if (isValid) {\n              if (compare) {\n                controller.$compareDateValue[0] = parsedDate1;\n                controller.$compareDateValue[1] = parsedDate2;\n              } else {\n                controller.$dateValue[0] = parsedDate1;\n                controller.$dateValue[1] = parsedDate2;\n              }\n            }\n            return true;\n          }\n          controller.$parsers.unshift(function (viewValue) {\n            var compare = rangedatepicker.$getCompare();\n            if (!viewValue) {\n              controller.$setValidity('date', true);\n              return null;\n            }\n            if (viewValue.onlyCompare) {\n              viewValue.compare = compare;\n              return viewValue;\n            }\n            var parsedDate1;\n            var parsedDate2;\n            if (compare) {\n              parsedDate1 = dateParser.parse(viewValue.compareStartDate, controller.$compareDateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.compareEndDate, controller.$compareDateValue[1]);\n            } else {\n              parsedDate1 = dateParser.parse(viewValue.startDate, controller.$dateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.endDate, controller.$dateValue[1]);\n            }\n            if (parsedDate1 && !parsedDate2) {\n              parsedDate2 = angular.copy(parsedDate1);\n            }\n            if (!parsedDate1 && parsedDate2) {\n              parsedDate1 = angular.copy(parsedDate2);\n            }\n            if (!parsedDate1 || isNaN(parsedDate1.getTime()) || !parsedDate2 || isNaN(parsedDate2.getTime())) {\n              controller.$setValidity('date', false);\n              return false;\n            }\n            validateAgainstMinMaxDate(parsedDate1, parsedDate2);\n            var obj = {\n              dateRange: viewValue.dateRange,\n              compare: compare\n            };\n            var skey = '';\n            var ekey = '';\n            if (compare) {\n              obj.startDate = viewValue.startDate;\n              obj.endDate = viewValue.endDate;\n              skey = 'compareStartDate';\n              ekey = 'compareEndDate';\n            } else {\n              // obj.compareStartDate = viewValue.compareStartDate;\n              // obj.compareEndDate = viewValue.compareEndDate;\n              skey = 'startDate';\n              ekey = 'endDate';\n            }\n            if (options.dateType === 'string') {\n              obj[skey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate1, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              obj[ekey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate2, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              return obj;\n            }\n            var date1;\n            var date2;\n            if (compare) {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[1], options.timezone, true);\n            } else {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$dateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$dateValue[1], options.timezone, true);\n            }\n            if (options.dateType === 'number') {\n              obj[skey] = date1.getTime();\n              obj[ekey] = date2.getTime();\n            } else if (options.dateType === 'unix') {\n              obj[skey] = date1.getTime() / 1e3;\n              obj[ekey] = date2.getTime() / 1e3;\n            } else if (options.dateType === 'iso') {\n              obj[skey] = date1.toISOString();\n              obj[ekey] = date2.toISOString();\n            } else {\n              obj[skey] = new Date(date1);\n              obj[ekey] = new Date(date2);\n            }\n            return obj;\n          });\n          controller.$formatters.push(function (modelValue) {\n            var startDate;\n            var endDate;\n            if (angular.isUndefined(modelValue) || modelValue === null) {\n              return '';\n            } else if (modelValue.dateRange) {\n              controller.$dateRange = modelValue.dateRange;\n              controller.$dateValue = !controller.$dateValue ? [] : controller.$dateValue;\n              rangedatepicker.$selectRange(controller.$dateRange);\n            } else if (modelValue.startDate && modelValue.endDate) {\n              startDate = getFormattedDate(modelValue.startDate);\n              endDate = getFormattedDate(modelValue.endDate);\n              controller.$dateValue = [dateParser.timezoneOffsetAdjust(startDate, options.timezone), dateParser.timezoneOffsetAdjust(endDate, options.timezone)];\n            }\n            controller.$compareDateValue = [];\n\n            return getDateFormattedString();\n          });\n          controller.$render = function () {\n            element.val(getDateFormattedString());\n          };\n          function getDateFormattedString () {\n            // return (!controller.$dateValue || controller.$dateValue.length === 0 || !controller.$dateValue[0] || !controller.$dateValue[1] ||\n            // isNaN(controller.$dateValue[0].getTime()) || isNaN(controller.$dateValue[1].getTime()))\n            //   ? '' : formatDate(controller.$dateValue[0], options.dateFormat) + options.connector + formatDate(controller.$dateValue[1], options.dateFormat);\n            if (!controller.$modelValue || !controller.$modelValue.startDate || isNaN(controller.$modelValue.startDate.getTime())) {\n              return '';\n            }\n            var html = formatDate(controller.$modelValue.startDate, options.dateFormat);\n            if (controller.$modelValue.compare && controller.$modelValue.compareStartDate && !isNaN(controller.$modelValue.compareStartDate.getTime())) {\n              html += ' vs ' + formatDate(controller.$modelValue.compareStartDate, options.dateFormat);\n            } else if (!controller.$modelValue.compare && controller.$modelValue.endDate && !isNaN(controller.$modelValue.endDate.getTime())) {\n              html += ' / ' + formatDate(controller.$modelValue.endDate, options.dateFormat);\n            }\n            return html;\n          }\n          scope.$on('$destroy', function () {\n            if (rangedatepicker) rangedatepicker.destroy();\n            options = null;\n            rangedatepicker = null;\n          });\n        }\n      };\n    }])\n  .provider('rangedatepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      return function (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = (picker.$date && picker.$date[0]) || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var endDate = (picker.$date && picker.$date[1]) || (options.endDate ? dateParser.getDateForAttribute('endDate', options.endDate) : new Date());\n        var viewDate = {\n          startDate: {\n            year: startDate.getFullYear(),\n            month: startDate.getMonth(),\n            date: startDate.getDate()\n          },\n          endDate: {\n            year: endDate.getFullYear(),\n            month: endDate.getMonth(),\n            date: endDate.getDate()\n          }\n        };\n        var view = {\n          format: options.dayFormat,\n          split: 7,\n          steps: {\n            month: 1\n          },\n          update: function (sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function () {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var item = viewDate[value];\n              var firstDayOfMonth = new Date(item.year, item.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === today,\n                  label: formatDate(day, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], day),\n                  inRange: that.isInRange(day),\n                  muted: day.getMonth() !== item.month,\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(day, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], day)\n                });\n              }\n              scope.title[index] = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.rows[index] = split(days, that.split);\n            });\n            scope.showLabels = true;\n            scope.labels = weekDaysLabelsHtml;\n            scope.isTodayDisabled = this.isDisabled(new Date());\n            this.built = true;\n          },\n          isSelected: function (currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth() &&\n              date.getDate() === currentDate.getDate();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function (date, index) {\n            var time = date.getTime();\n            if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            if (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1]))) {\n              return true;\n            }\n            if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) {\n              return true;\n            }\n            if (options.disabledDateRanges) {\n              for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                  return true;\n                }\n              }\n            }\n            return false;\n          }\n        };\n        return {\n          view: view,\n          viewDate: viewDate\n        };\n      };\n    } ];\n  });\n\n// Source: popover/popover.js\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      // uncommenting the next two lines will break backwards compatability\n      // prefixClass: 'popover',\n      // prefixEvent: 'popover',\n      container: false,\n      target: false,\n      placement: 'right',\n      templateUrl: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function ($tooltip) {\n\n      function PopoverFactory (element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if (options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function ($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr) {\n\n        var popover;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent', 'bsEnabled'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n              if (angular.isDefined(oldValue)) {\n                requestAnimationFrame(function () {\n                  if (popover) popover.$applyPlacement();\n                });\n              }\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsPopover) {\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              requestAnimationFrame(function () {\n                if (popover) popover.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n            if (newValue === true) {\n              popover.show();\n            } else {\n              popover.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(popover),?/i);\n            if (newValue === false) {\n              popover.setEnabled(false);\n            } else {\n              popover.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            popover.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: pagination/pagination.js\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n\n// Source: modal/modal.js\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n\n// Source: helpers/raf.js\nif (angular.version.minor < 3 && angular.version.dot < 14) {\n  angular.module('ng')\n\n  .factory('$$rAF', function ($window, $timeout) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported ?\n      function (fn) {\n        var id = requestAnimationFrame(fn);\n        return function () {\n          cancelAnimationFrame(id);\n        };\n      } :\n      function (fn) {\n        var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n        return function () {\n          $timeout.cancel(timer);\n        };\n      };\n\n    raf.supported = rafSupported;\n\n    return raf;\n\n  });\n}\n\n// Source: helpers/parse-options.js\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function () {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function ($parse, $q) {\n\n      function ParseOptionsFactory (attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match;\n        var displayFn;\n        var valueName;\n        /* eslint-disable no-unused-vars */\n        var keyName;\n        var groupByFn;\n        /* eslint-enable no-unused-vars */\n        var valueFn;\n        var valuesFn;\n\n        $parseOptions.init = function () {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]);\n          valueName = match[4] || match[6];\n          keyName = match[5];\n          groupByFn = $parse(match[3] || '');\n          valueFn = $parse(match[2] ? match[1] : valueName);\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function (scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function (values) {\n            if (!angular.isArray(values)) {\n              values = [];\n            }\n            $parseOptions.$values = values.length ? parseValues(values, scope) : [];\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function (modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues (values, scope) {\n          return values.map(function (match, index) {\n            var locals = {};\n            var label;\n            var value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n\n// Source: helpers/dimensions.js\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function () {\n\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function (element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function (element, prop, extra) {\n      var value;\n      if (element.currentStyle) { // IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function (element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides set equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip\n     * @url http://api.jquery.com/offset/\n     * @param element\n     * @param options\n     * @param i\n     */\n    fn.setOffset = function (element, options, i) {\n      var curPosition;\n      var curLeft;\n      var curCSSTop;\n      var curTop;\n      var curOffset;\n      var curCSSLeft;\n      var calculatePosition;\n      var position = fn.css(element, 'position');\n      var curElem = angular.element(element);\n      var props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        element.style.position = 'relative';\n      }\n\n      curOffset = fn.offset(element);\n      curCSSTop = fn.css(element, 'top');\n      curCSSLeft = fn.css(element, 'left');\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = fn.position(element);\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (angular.isFunction(options)) {\n        options = options.call(element, i, curOffset);\n      }\n\n      if (options.top !== null) {\n        props.top = (options.top - curOffset.top) + curTop;\n      }\n      if (options.left !== null) {\n        props.left = (options.left - curOffset.left) + curLeft;\n      }\n\n      if ('using' in options) {\n        options.using.call(curElem, props);\n      } else {\n        curElem.css({\n          top: props.top + 'px',\n          left: props.left + 'px'\n        });\n      }\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function (element) {\n\n      var offsetParentRect = {top: 0, left: 0};\n      var offsetParentEl;\n      var offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentEl\n        offsetParentEl = offsetParentElement(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentEl, 'html')) {\n          offsetParentRect = fn.offset(offsetParentEl);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    function offsetParentElement (element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    }\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function (element, outer) {\n      var value = element.offsetHeight;\n      if (outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function (element, outer) {\n      var value = element.offsetWidth;\n      if (outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n\n// Source: helpers/debounce.js\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', function ($timeout) {\n  return function (func, wait, immediate) {\n    var timeout = null;\n    return function () {\n      var context = this;\n      var args = arguments;\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if (callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = null;\n    if (!options) options = {};\n    return function () {\n      var context = this;\n      var args = arguments;\n      if (!timeout) {\n        if (options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later () {\n          timeout = null;\n          if (options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n});\n\n// Source: helpers/date-parser.js\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function ($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate () {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function (value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function (value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function (value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function (value) { this.hours = value; };\n  ParseDate.prototype.getHours = function () { return this.hours; };\n  ParseDate.prototype.setDate = function (value) { this.day = value; };\n  ParseDate.prototype.setMonth = function (value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function (value) { this.year = value; };\n  ParseDate.prototype.fromDate = function (value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function () {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop () {\n  }\n\n  function isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive (array, value) {\n    var len = array.length;\n    var str = value.toString().toLowerCase();\n    for (var i = 0; i < len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function ($locale, dateFilter) {\n\n    var DateParserFactory = function (config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      /* eslint-disable key-spacing, quote-props */\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}'\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function (value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function (value) { return this.setMonth(1 * value - 1); },\n        'M'     : function (value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function (value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : function (value) { return (1 * value <= 50 && value.length === 2) ? this.setFullYear(2000 + 1 * value) : this.setFullYear(1 * value); }\n      };\n      /* eslint-enable key-spacing, quote-props */\n\n      var regex;\n      var setMap;\n\n      $dateParser.init = function () {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function (date) {\n        if (angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function (value, baseDate, format, timezone) {\n        // check for date format special names\n        if (format) format = $locale.DATETIME_FORMATS[format] || format;\n        if (angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format, timezone);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if (!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for (var i = 0; i < matches.length - 1; i++) {\n          if (formatSetMap[i]) formatSetMap[i].call(date, matches[i + 1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function (key, value) {\n        var date;\n\n        if (value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if (isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && value.length === 0) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function (key, value) {\n        var time;\n\n        if (value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if (isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.length === 0) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function (date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      /* Correct the date for timezone offset.\n      * @param  date  (Date) the date to adjust\n      * @param  timezone  (string) the timezone to adjust for\n      * @param  undo  (boolean) to add or subtract timezone offset\n      * @return  (Date) the corrected date\n      */\n      $dateParser.timezoneOffsetAdjust = function (date, timezone, undo) {\n        if (!date) {\n          return null;\n        }\n        // Right now, only 'UTC' is supported.\n        if (timezone && timezone === 'UTC') {\n          date = new Date(date.getTime());\n          date.setMinutes(date.getMinutes() + (undo ? -1 : 1) * date.getTimezoneOffset());\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function regExpForFormat (format) {\n        // `format` string can contain literal values.\n        // These need to be escaped by surrounding with\n        // single quotes (e.g. `\"h 'in the morning'\"`).\n        // In order to output a single quote, escape it - i.e.,\n        // two single quotes in a sequence (e.g. `\"h 'o''clock'\"`).\n\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseRegex(re);\n      }\n\n      function buildDateAbstractRegex (format) {\n        var escapedFormat = escapeReservedSymbols(format);\n        var escapedLiteralFormat = escapedFormat.replace(/''/g, '\\\\\\'');\n        var literalRegex = /('(?:\\\\'|.)*?')/;\n        var formatParts = escapedLiteralFormat.split(literalRegex);\n        var dateElements = Object.keys(regExpMap);\n        var dateRegexParts = [];\n\n        angular.forEach(formatParts, function (part) {\n          if (isFormatStringLiteral(part)) {\n            part = trimLiteralEscapeChars(part);\n          } else {\n            // Abstract replaces to avoid collisions\n            for (var i = 0; i < dateElements.length; i++) {\n              part = part.split(dateElements[i]).join('${' + i + '}');\n            }\n          }\n          dateRegexParts.push(part);\n        });\n\n        return dateRegexParts.join('');\n      }\n\n      function escapeReservedSymbols (text) {\n        return text.replace(/\\\\/g, '[\\\\\\\\]')\n                   .replace(/-/g, '[-]')\n                   .replace(/\\./g, '[.]')\n                   .replace(/\\*/g, '[*]')\n                   .replace(/\\+/g, '[+]')\n                   .replace(/\\?/g, '[?]')\n                   .replace(/\\$/g, '[$]')\n                   .replace(/\\^/g, '[^]')\n                   .replace(/\\//g, '[/]')\n                   .replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function isFormatStringLiteral (text) {\n        return /^'.*'$/.test(text);\n      }\n\n      function trimLiteralEscapeChars (text) {\n        return text.replace(/^'(.*)'$/, '$1');\n      }\n\n      function buildDateParseRegex (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var re = abstractRegex;\n\n        // Replace abstracted values\n        for (var i = 0; i < dateElements.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[dateElements[i]] + ')');\n        }\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      function setMapForFormat (format) {\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseValuesMap(re);\n      }\n\n      function buildDateParseValuesMap (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var valuesRegex = new RegExp('\\\\${(\\\\d+)}', 'g');\n        var valuesMatch;\n        var keyIndex;\n        var valueKey;\n        var valueFunction;\n        var valuesFunctionMap = [];\n\n        /* eslint-disable no-cond-assign */\n        while ((valuesMatch = valuesRegex.exec(abstractRegex)) !== null) {\n          keyIndex = valuesMatch[1];\n          valueKey = dateElements[keyIndex];\n          valueFunction = setFnMap[valueKey];\n\n          valuesFunctionMap.push(valueFunction);\n        }\n\n        return valuesFunctionMap;\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n\n// Source: helpers/date-formatter.js\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n\n// Source: helpers/compiler.js\n// NOTICE: This file was forked from the angular-material project (github.com/angular/material)\n// MIT Licensed - Copyright (c) 2014-2015 Google, Inc. http://angularjs.org\n\nangular.module('mgcrea.ngStrap.core', [])\n  .service('$bsCompiler', bsCompilerService);\n\nfunction bsCompilerService ($q, $http, $injector, $compile, $controller, $templateCache) {\n\n  /*\n   * @ngdoc service\n   * @name $bsCompiler\n   * @module material.core\n   * @description\n   * The $bsCompiler service is an abstraction of angular's compiler, that allows the developer\n   * to easily compile an element with a templateUrl, controller, and locals.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * $bsCompiler.compile({\n   *   templateUrl: 'modal.html',\n   *   controller: 'ModalCtrl',\n   *   locals: {\n   *     modal: myModalInstance;\n   *   }\n   * }).then(function(compileData) {\n   *   compileData.element; // modal.html's template in an element\n   *   compileData.link(myScope); //attach controller & scope to element\n   * });\n   * </hljs>\n   */\n\n   /*\n    * @ngdoc method\n    * @name $bsCompiler#compile\n    * @description A helper to compile an HTML template/templateUrl with a given controller,\n    * locals, and scope.\n    * @param {object} options An options object, with the following properties:\n    *\n    *    - `controller` - `{(string=|function()=}` Controller fn that should be associated with\n    *      newly created scope or the name of a registered controller if passed as a string.\n    *    - `controllerAs` - `{string=}` A controller alias name. If present the controller will be\n    *      published to scope under the `controllerAs` name.\n    *    - `template` - `{string=}` An html template as a string.\n    *    - `templateUrl` - `{string=}` A path to an html template.\n    *    - `transformTemplate` - `{function(template)=}` A function which transforms the template after\n    *      it is loaded. It will be given the template string as a parameter, and should\n    *      return a a new string representing the transformed template.\n    *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n    *      be injected into the controller. If any of these dependencies are promises, the compiler\n    *      will wait for them all to be resolved, or if one is rejected before the controller is\n    *      instantiated `compile()` will fail..\n    *      * `key` - `{string}`: a name of a dependency to be injected into the controller.\n    *      * `factory` - `{string|function}`: If `string` then it is an alias for a service.\n    *        Otherwise if function, then it is injected and the return value is treated as the\n    *        dependency. If the result is a promise, it is resolved before its value is\n    *        injected into the controller.\n    *\n    * @returns {object=} promise A promise, which will be resolved with a `compileData` object.\n    * `compileData` has the following properties:\n    *\n    *   - `element` - `{element}`: an uncompiled element matching the provided template.\n    *   - `link` - `{function(scope)}`: A link function, which, when called, will compile\n    *     the element and instantiate the provided controller (if given).\n    *   - `locals` - `{object}`: The locals which will be passed into the controller once `link` is\n    *     called. If `bindToController` is true, they will be coppied to the ctrl instead\n    *   - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n    */\n  this.compile = function (options) {\n\n    if (options.template && /\\.html$/.test(options.template)) {\n      console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.');\n      options.templateUrl = options.template;\n      options.template = '';\n    }\n\n    var templateUrl = options.templateUrl;\n    var template = options.template || '';\n    var controller = options.controller;\n    var controllerAs = options.controllerAs;\n    var resolve = angular.copy(options.resolve || {});\n    var locals = angular.copy(options.locals || {});\n    var transformTemplate = options.transformTemplate || angular.identity;\n    var bindToController = options.bindToController;\n\n    // Take resolve values and invoke them.\n    // Resolves can either be a string (value: 'MyRegisteredAngularConst'),\n    // or an invokable 'factory' of sorts: (value: function ValueGetter($dependency) {})\n    angular.forEach(resolve, function (value, key) {\n      if (angular.isString(value)) {\n        resolve[key] = $injector.get(value);\n      } else {\n        resolve[key] = $injector.invoke(value);\n      }\n    });\n    // Add the locals, which are just straight values to inject\n    // eg locals: { three: 3 }, will inject three into the controller\n    angular.extend(resolve, locals);\n\n    if (template) {\n      resolve.$template = $q.when(template);\n    } else if (templateUrl) {\n      resolve.$template = fetchTemplate(templateUrl);\n    } else {\n      throw new Error('Missing `template` / `templateUrl` option.');\n    }\n\n    if (options.titleTemplate) {\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.titleTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          findElement('[ng-bind=\"title\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    if (options.contentTemplate) {\n      // TODO(mgcrea): deprecate?\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.contentTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n          if (!options.templateUrl) contentEl.next().remove();\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    // Wait for all the resolves to finish if they are promises\n    return $q.all(resolve).then(function (locals) {\n\n      var template = transformTemplate(locals.$template);\n      if (options.html) {\n        template = template.replace(/ng-bind=\"/ig, 'ng-bind-html=\"');\n      }\n      // var element = options.element || angular.element('<div>').html(template.trim()).contents();\n      var element = angular.element('<div>').html(template.trim()).contents();\n      var linkFn = $compile(element);\n\n      // Return a linking function that can be used later when the element is ready\n      return {\n        locals: locals,\n        element: element,\n        link: function link (scope) {\n          locals.$scope = scope;\n\n          // Instantiate controller if it exists, because we have scope\n          if (controller) {\n            var invokeCtrl = $controller(controller, locals, true);\n            if (bindToController) {\n              angular.extend(invokeCtrl.instance, locals);\n            }\n            // Support angular@~1.2 invokeCtrl\n            var ctrl = angular.isObject(invokeCtrl) ? invokeCtrl : invokeCtrl();\n            // See angular-route source for this logic\n            element.data('$ngControllerController', ctrl);\n            element.children().data('$ngControllerController', ctrl);\n\n            if (controllerAs) {\n              scope[controllerAs] = ctrl;\n            }\n          }\n\n          return linkFn.apply(null, arguments);\n        }\n      };\n    });\n\n  };\n\n  function findElement (query, element) {\n    return angular.element((element || document).querySelectorAll(query));\n  }\n\n  var fetchPromises = {};\n  function fetchTemplate (template) {\n    if (fetchPromises[template]) return fetchPromises[template];\n    return (fetchPromises[template] = $http.get(template, {cache: $templateCache})\n      .then(function (res) {\n        return res.data;\n      }));\n  }\n\n}\n\n// Source: dropdown/dropdown.js\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) return;\n          if (options.keyboard && $dropdown.$element) $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          var options = {scope: scope};\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n\n// Source: datepicker/datepicker.js\nangular.module('mgcrea.ngStrap.datepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$datepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    prefixClass: 'datepicker',\n    placement: 'bottom-left',\n    templateUrl: 'datepicker/datepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: false,\n    dateType: 'date',\n    dateFormat: 'shortDate',\n    timezone: null,\n    modelDateFormat: null,\n    dayFormat: 'dd',\n    monthFormat: 'MMM',\n    yearFormat: 'yyyy',\n    monthTitleFormat: 'MMMM yyyy',\n    yearTitleFormat: 'yyyy',\n    strictFormat: false,\n    autoclose: false,\n    minDate: -Infinity,\n    maxDate: +Infinity,\n    startView: 0,\n    minView: 0,\n    startWeek: 0,\n    daysOfWeekDisabled: '',\n    hasToday: false,\n    hasClear: false,\n    iconLeft: 'nox-sort-left',\n    iconRight: 'nox-sort-right'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datepickerViews', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n    function DatepickerFactory(element, controller, config) {\n      var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $datepicker.$options;\n      var scope = $datepicker.$scope;\n      if (options.startView) options.startView -= options.minView;\n      var pickerViews = datepickerViews($datepicker);\n      $datepicker.$views = pickerViews.views;\n      var viewDate = pickerViews.viewDate;\n      scope.$mode = options.startView;\n      scope.$iconLeft = options.iconLeft;\n      scope.$iconRight = options.iconRight;\n      scope.$hasToday = options.hasToday;\n      scope.$hasClear = options.hasClear;\n      var $picker = $datepicker.$views[scope.$mode];\n      scope.$select = function(date) {\n        $datepicker.select(date);\n      };\n      scope.$selectPane = function(value) {\n        $datepicker.$selectPane(value);\n      };\n      scope.$toggleMode = function() {\n        $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n      };\n      scope.$setToday = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(new Date());\n        } else {\n          $datepicker.select(new Date(), true);\n        }\n      };\n      scope.$clear = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(null);\n        } else {\n          $datepicker.select(null, true);\n        }\n      };\n      $datepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $datepicker.$date = date;\n          $picker.update.call($picker, date);\n        }\n        $datepicker.$build(true);\n      };\n      $datepicker.updateDisabledDates = function(dateRanges) {\n        options.disabledDateRanges = dateRanges;\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n        }\n      };\n      $datepicker.select = function(date, keep) {\n        if (angular.isDate(date)) {\n          if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date(date);\n          }\n        } else {\n          controller.$dateValue = null;\n        }\n        if (!scope.$mode || keep) {\n          controller.$setViewValue(angular.copy(date));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              $datepicker.hide(true);\n            });\n          }\n        } else {\n          angular.extend(viewDate, {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            date: date.getDate()\n          });\n          $datepicker.setMode(scope.$mode - 1);\n          $datepicker.$build();\n        }\n      };\n      $datepicker.setMode = function(mode) {\n        scope.$mode = mode;\n        $picker = $datepicker.$views[scope.$mode];\n        $datepicker.$build();\n      };\n      $datepicker.$build = function(pristine) {\n        if (pristine === true && $picker.built) return;\n        if (pristine === false && !$picker.built) return;\n        $picker.build.call($picker);\n      };\n      $datepicker.$updateSelected = function() {\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], updateSelected);\n        }\n      };\n      $datepicker.$isSelected = function(date) {\n        return $picker.isSelected(date);\n      };\n      $datepicker.$setDisabledEl = function(el) {\n        el.disabled = $picker.isDisabled(el.date);\n      };\n      $datepicker.$selectPane = function(value) {\n        var steps = $picker.steps;\n        var targetDate = new Date(Date.UTC(viewDate.year + (steps.year || 0) * value, viewDate.month + (steps.month || 0) * value, 1));\n        angular.extend(viewDate, {\n          year: targetDate.getUTCFullYear(),\n          month: targetDate.getUTCMonth(),\n          date: targetDate.getUTCDate()\n        });\n        $datepicker.$build();\n      };\n      $datepicker.$onMouseDown = function(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $datepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          if (!scope.$mode) {\n            $datepicker.hide(true);\n          } else {\n            scope.$apply(function() {\n              $datepicker.setMode(scope.$mode - 1);\n            });\n          }\n          return;\n        }\n        $picker.onKeyDown(evt);\n        parentScope.$digest();\n      };\n      function updateSelected(el) {\n        el.selected = $datepicker.$isSelected(el.date);\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $datepicker.init;\n      $datepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'date');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $datepicker.destroy;\n      $datepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $datepicker.show;\n      $datepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.on('keydown', $datepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $datepicker.hide;\n      $datepicker.hide = function(blur) {\n        if (!$datepicker.$isShown) return;\n        $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n        if (options.keyboard) {\n          element.off('keydown', $datepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $datepicker;\n    }\n    DatepickerFactory.defaults = defaults;\n    return DatepickerFactory;\n  } ];\n}).directive('bsDatepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      var datepicker = $datepicker(element, controller, options);\n      options = datepicker.$options;\n      if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!datepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          if (newValue === true) {\n            datepicker.show();\n          } else {\n            datepicker.hide();\n          }\n        });\n      }\n      angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        }\n      });\n      if (angular.isDefined(attr.dateFormat)) {\n        attr.$observe('dateFormat', function(newValue) {\n          datepicker.$options.dateFormat = newValue;\n        });\n      }\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        datepicker.update(controller.$dateValue);\n      }, true);\n      function normalizeDateRanges(ranges) {\n        if (!ranges || !ranges.length) return null;\n        return ranges;\n      }\n      if (angular.isDefined(attr.disabledDates)) {\n        scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n          disabledRanges = normalizeDateRanges(disabledRanges);\n          previousValue = normalizeDateRanges(previousValue);\n          if (disabledRanges) {\n            datepicker.updateDisabledDates(disabledRanges);\n          }\n        });\n      }\n      function validateAgainstMinMaxDate(parsedDate) {\n        if (!angular.isDate(parsedDate)) return;\n        var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n        var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (isValid) controller.$dateValue = parsedDate;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedDate || isNaN(parsedDate.getTime())) {\n          controller.$setValidity('date', false);\n          return;\n        }\n        validateAgainstMinMaxDate(parsedDate);\n        if (options.dateType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n          return formatDate(date, options.modelDateFormat || options.dateFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.dateType === 'number') {\n          return date.getTime();\n        } else if (options.dateType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.dateType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.dateType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelDateFormat);\n        } else if (options.dateType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getDateFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getDateFormattedString());\n      };\n      function getDateFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (datepicker) datepicker.destroy();\n        options = null;\n        datepicker = null;\n      });\n    }\n  };\n} ]).provider('datepickerViews', function() {\n  function split(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  }\n  function mod(n, m) {\n    return (n % m + m) % m;\n  }\n  this.$get = [ '$dateFormatter', '$dateParser', '$sce', function($dateFormatter, $dateParser, $sce) {\n    return function(picker) {\n      var scope = picker.$scope;\n      var options = picker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n      var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n      var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n      var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n      var viewDate = {\n        year: startDate.getFullYear(),\n        month: startDate.getMonth(),\n        date: startDate.getDate()\n      };\n      var views = [ {\n        format: options.dayFormat,\n        split: 7,\n        steps: {\n          month: 1\n        },\n        update: function(date, force) {\n          if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n            viewDate.date = picker.$date.getDate();\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n          var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n          var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n          var firstDateOffset = firstDate.getTimezoneOffset();\n          var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n          if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n          var days = [];\n          var day;\n          for (var i = 0; i < 42; i++) {\n            day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n            days.push({\n              date: day,\n              isToday: day.toDateString() === today,\n              label: formatDate(day, this.format),\n              selected: picker.$date && this.isSelected(day),\n              muted: day.getMonth() !== viewDate.month,\n              disabled: this.isDisabled(day)\n            });\n          }\n          scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n          scope.showLabels = true;\n          scope.labels = weekDaysLabelsHtml;\n          scope.rows = split(days, this.split);\n          scope.isTodayDisabled = this.isDisabled(new Date());\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n        },\n        isDisabled: function(date) {\n          var time = date.getTime();\n          if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n          if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n          if (options.disabledDateRanges) {\n            for (var i = 0; i < options.disabledDateRanges.length; i++) {\n              if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                return true;\n              }\n            }\n          }\n          return false;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualTime = picker.$date.getTime();\n          var newDate;\n          if (evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5); else if (evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5); else if (evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5); else if (evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'month',\n        format: options.monthFormat,\n        split: 4,\n        steps: {\n          year: 1\n        },\n        update: function(date, force) {\n          if (!this.built || date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var months = [];\n          var month;\n          for (var i = 0; i < 12; i++) {\n            month = new Date(viewDate.year, i, 1);\n            months.push({\n              date: month,\n              label: formatDate(month, this.format),\n              selected: picker.$isSelected(month),\n              disabled: this.isDisabled(month)\n            });\n          }\n          scope.title = formatDate(month, options.yearTitleFormat);\n          scope.showLabels = false;\n          scope.rows = split(months, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualMonth = picker.$date.getMonth();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setMonth(actualMonth - 1); else if (evt.keyCode === 38) newDate.setMonth(actualMonth - 4); else if (evt.keyCode === 39) newDate.setMonth(actualMonth + 1); else if (evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'year',\n        format: options.yearFormat,\n        split: 4,\n        steps: {\n          year: 12\n        },\n        update: function(date, force) {\n          if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n          var years = [];\n          var year;\n          for (var i = 0; i < 12; i++) {\n            year = new Date(firstYear + i, 0, 1);\n            years.push({\n              date: year,\n              label: formatDate(year, this.format),\n              selected: picker.$isSelected(year),\n              disabled: this.isDisabled(year)\n            });\n          }\n          scope.title = years[0].label + '-' + years[years.length - 1].label;\n          scope.showLabels = false;\n          scope.rows = split(years, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualYear = picker.$date.getFullYear();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setYear(actualYear - 1); else if (evt.keyCode === 38) newDate.setYear(actualYear - 4); else if (evt.keyCode === 39) newDate.setYear(actualYear + 1); else if (evt.keyCode === 40) newDate.setYear(actualYear + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      } ];\n      return {\n        views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n        viewDate: viewDate\n      };\n    };\n  } ];\n});\n\n// Source: alert/alert.js\n// @BUG: following snippet won't compile correctly\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      templateUrl: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissible: true\n    };\n\n    this.$get = function ($modal, $timeout) {\n\n      function AlertFactory (config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissible]\n        $alert.$scope.dismissible = !!options.dismissible;\n        if (options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if (options.duration) {\n          $alert.show = function () {\n            show();\n            $timeout(function () {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function ($window, $sce, $alert) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsAlert) {\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: module.js\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.rangedatepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.pagination',\n  'mgcrea.ngStrap.sort'\n]);\n\n})(window, document);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.sort', []).directive('bsSort', [function() {\n  return {\n    scope: true,\n    compile: function (element, attrs) {\n      var list = element[0].querySelectorAll('th');\n      for (var i = 0, len = list.length; i < len; i++) {\n        var item = list[i];\n        item = angular.element(item);\n        if (item.attr('data-sortable')) {\n          var dataName = item.attr('data-name');\n          item.append('<div class=\"sorter\"><i class=\"nox-sort-up sort-asc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'asc\\'}\"></i><i class=\"nox-sort-down sort-desc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'desc\\'}\"></i></div>');\n        }\n      }\n\n      return function postLink (scope, element, attrs) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['onSort'], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        if (angular.isDefined(attrs.totalItems)) {\n          attrs.$observe('totalItems', function (newValue) {\n            options.totalItems = newValue;\n          });\n        }\n        // 初始化排序\n        angular.forEach([ 'orderBy', 'sortBy' ], function(key) {\n          if (angular.isDefined(attrs[key])) {\n            scope[key] = scope.$eval(attrs[key]);\n          }\n        });\n        var list = element[0].querySelectorAll('th');\n        for (var i = 0, len = list.length; i < len; i++) {\n          var item = list[i];\n          item = angular.element(item);\n          if (item.attr('data-sortable')) {\n            item.on('click', clickColumn);\n          }\n        }\n\n        function clickColumn (event) {\n          if (options.totalItems === -1) {\n            return;\n          }\n          var target = angular.element(event.currentTarget);\n          var dataName = target.attr('data-name');\n          if (dataName === scope.orderBy) {\n            scope.sortBy = scope.sortBy === 'asc' ? 'desc' : 'asc';\n          } else {\n            scope.orderBy = dataName;\n            scope.sortBy = 'desc';\n          }\n          scope.$apply();\n\n          if (angular.isDefined(options.onSort) && angular.isFunction(options.onSort)) {\n            options.onSort(scope.orderBy, scope.sortBy);\n          }\n        }\n      };\n    }\n  };\n}]);\n","'use strict';\n\n// NOTICE: This file was forked from the angular-material project (github.com/angular/material)\n// MIT Licensed - Copyright (c) 2014-2015 Google, Inc. http://angularjs.org\n\nangular.module('mgcrea.ngStrap.core', [])\n  .service('$bsCompiler', bsCompilerService);\n\nfunction bsCompilerService ($q, $http, $injector, $compile, $controller, $templateCache) {\n\n  /*\n   * @ngdoc service\n   * @name $bsCompiler\n   * @module material.core\n   * @description\n   * The $bsCompiler service is an abstraction of angular's compiler, that allows the developer\n   * to easily compile an element with a templateUrl, controller, and locals.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * $bsCompiler.compile({\n   *   templateUrl: 'modal.html',\n   *   controller: 'ModalCtrl',\n   *   locals: {\n   *     modal: myModalInstance;\n   *   }\n   * }).then(function(compileData) {\n   *   compileData.element; // modal.html's template in an element\n   *   compileData.link(myScope); //attach controller & scope to element\n   * });\n   * </hljs>\n   */\n\n   /*\n    * @ngdoc method\n    * @name $bsCompiler#compile\n    * @description A helper to compile an HTML template/templateUrl with a given controller,\n    * locals, and scope.\n    * @param {object} options An options object, with the following properties:\n    *\n    *    - `controller` - `{(string=|function()=}` Controller fn that should be associated with\n    *      newly created scope or the name of a registered controller if passed as a string.\n    *    - `controllerAs` - `{string=}` A controller alias name. If present the controller will be\n    *      published to scope under the `controllerAs` name.\n    *    - `template` - `{string=}` An html template as a string.\n    *    - `templateUrl` - `{string=}` A path to an html template.\n    *    - `transformTemplate` - `{function(template)=}` A function which transforms the template after\n    *      it is loaded. It will be given the template string as a parameter, and should\n    *      return a a new string representing the transformed template.\n    *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n    *      be injected into the controller. If any of these dependencies are promises, the compiler\n    *      will wait for them all to be resolved, or if one is rejected before the controller is\n    *      instantiated `compile()` will fail..\n    *      * `key` - `{string}`: a name of a dependency to be injected into the controller.\n    *      * `factory` - `{string|function}`: If `string` then it is an alias for a service.\n    *        Otherwise if function, then it is injected and the return value is treated as the\n    *        dependency. If the result is a promise, it is resolved before its value is\n    *        injected into the controller.\n    *\n    * @returns {object=} promise A promise, which will be resolved with a `compileData` object.\n    * `compileData` has the following properties:\n    *\n    *   - `element` - `{element}`: an uncompiled element matching the provided template.\n    *   - `link` - `{function(scope)}`: A link function, which, when called, will compile\n    *     the element and instantiate the provided controller (if given).\n    *   - `locals` - `{object}`: The locals which will be passed into the controller once `link` is\n    *     called. If `bindToController` is true, they will be coppied to the ctrl instead\n    *   - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n    */\n  this.compile = function (options) {\n\n    if (options.template && /\\.html$/.test(options.template)) {\n      console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.');\n      options.templateUrl = options.template;\n      options.template = '';\n    }\n\n    var templateUrl = options.templateUrl;\n    var template = options.template || '';\n    var controller = options.controller;\n    var controllerAs = options.controllerAs;\n    var resolve = angular.copy(options.resolve || {});\n    var locals = angular.copy(options.locals || {});\n    var transformTemplate = options.transformTemplate || angular.identity;\n    var bindToController = options.bindToController;\n\n    // Take resolve values and invoke them.\n    // Resolves can either be a string (value: 'MyRegisteredAngularConst'),\n    // or an invokable 'factory' of sorts: (value: function ValueGetter($dependency) {})\n    angular.forEach(resolve, function (value, key) {\n      if (angular.isString(value)) {\n        resolve[key] = $injector.get(value);\n      } else {\n        resolve[key] = $injector.invoke(value);\n      }\n    });\n    // Add the locals, which are just straight values to inject\n    // eg locals: { three: 3 }, will inject three into the controller\n    angular.extend(resolve, locals);\n\n    if (template) {\n      resolve.$template = $q.when(template);\n    } else if (templateUrl) {\n      resolve.$template = fetchTemplate(templateUrl);\n    } else {\n      throw new Error('Missing `template` / `templateUrl` option.');\n    }\n\n    if (options.titleTemplate) {\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.titleTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          findElement('[ng-bind=\"title\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    if (options.contentTemplate) {\n      // TODO(mgcrea): deprecate?\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.contentTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n          if (!options.templateUrl) contentEl.next().remove();\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    // Wait for all the resolves to finish if they are promises\n    return $q.all(resolve).then(function (locals) {\n\n      var template = transformTemplate(locals.$template);\n      if (options.html) {\n        template = template.replace(/ng-bind=\"/ig, 'ng-bind-html=\"');\n      }\n      // var element = options.element || angular.element('<div>').html(template.trim()).contents();\n      var element = angular.element('<div>').html(template.trim()).contents();\n      var linkFn = $compile(element);\n\n      // Return a linking function that can be used later when the element is ready\n      return {\n        locals: locals,\n        element: element,\n        link: function link (scope) {\n          locals.$scope = scope;\n\n          // Instantiate controller if it exists, because we have scope\n          if (controller) {\n            var invokeCtrl = $controller(controller, locals, true);\n            if (bindToController) {\n              angular.extend(invokeCtrl.instance, locals);\n            }\n            // Support angular@~1.2 invokeCtrl\n            var ctrl = angular.isObject(invokeCtrl) ? invokeCtrl : invokeCtrl();\n            // See angular-route source for this logic\n            element.data('$ngControllerController', ctrl);\n            element.children().data('$ngControllerController', ctrl);\n\n            if (controllerAs) {\n              scope[controllerAs] = ctrl;\n            }\n          }\n\n          return linkFn.apply(null, arguments);\n        }\n      };\n    });\n\n  };\n\n  function findElement (query, element) {\n    return angular.element((element || document).querySelectorAll(query));\n  }\n\n  var fetchPromises = {};\n  function fetchTemplate (template) {\n    if (fetchPromises[template]) return fetchPromises[template];\n    return (fetchPromises[template] = $http.get(template, {cache: $templateCache})\n      .then(function (res) {\n        return res.data;\n      }));\n  }\n\n}\n","'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) return;\n          if (options.keyboard && $dropdown.$element) $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          var options = {scope: scope};\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      templateUrl: 'tooltip/tooltip.tpl.html',\n      template: '',\n      titleTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true,\n      mouseDownPreventDefault: true,\n      mouseDownStopPropagation: true,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory (element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        var promise = $tooltip.$promise = $bsCompiler.compile(options);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        var nodeName = element[0].nodeName.toLowerCase();\n        if (options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if (options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function (isEnabled) {\n          scope.$$postDigest(function () {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout;\n        var hoverState;\n\n        // Fetch, compile then initialize tooltip\n        var compileData;\n        var tipElement;\n        var tipContainer;\n        var tipScope;\n        promise.then(function (data) {\n          compileData = data;\n          $tooltip.init();\n        });\n\n        $tooltip.init = function () {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if (options.container === 'self') {\n            tipContainer = element;\n          } else if (angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if (options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if (options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              if (options.trigger === 'focus') {\n                element[0].focus();\n              } else {\n                $tooltip.show();\n              }\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function () {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function () {\n            if (hoverState === 'in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function () {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($tooltip);\n          }\n          var parent;\n          var after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if (tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = compileData.link(tipScope, function (clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', right: 'auto', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if (options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if (options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if (options.customClass) tipElement.addClass(options.customClass);\n\n          // Append the element, without any animations.  If we append\n          // using $animate.enter, some of the animations cause the placement\n          // to be off due to the transforms.\n          if (after) {\n            after.after(tipElement);\n          } else {\n            parent.prepend(tipElement);\n          }\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n\n          // Now, apply placement\n          $tooltip.$applyPlacement();\n\n          // Once placed, animate it.\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(tipElement, parent, after).then(enterAnimateCallback);\n          }\n          safeDigest(scope);\n\n          $$rAF(function () {\n            // Once the tooltip is placed and the animation starts, make the tooltip visible\n            if (tipElement) tipElement.css({visibility: 'visible'});\n\n            // Bind events\n            if (options.keyboard) {\n              if (options.trigger !== 'focus') {\n                $tooltip.focus();\n              }\n              bindKeyboardEvents();\n            }\n          });\n\n          if (options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($tooltip);\n          }\n        }\n\n        $tooltip.leave = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function (blur) {\n\n          if (!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($tooltip);\n          }\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(tipElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(tipElement).then(leaveAnimateCallback);\n          }\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if (options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if (options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($tooltip);\n          }\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if (_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function (evt) {\n          if (evt) { evt.preventDefault(); }\n          if ($tooltip.$isShown) {\n            $tooltip.leave();\n          } else {\n            $tooltip.enter();\n          }\n        };\n\n        $tooltip.focus = function () {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function (isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        $tooltip.setViewport = function (viewport) {\n          options.viewport = viewport;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function () {\n          if (!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement;\n          var autoToken = /\\s?auto?\\s?/i;\n          var autoPlace = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition();\n          var tipWidth = tipElement.prop('offsetWidth');\n          var tipHeight = tipElement.prop('offsetHeight');\n\n          // Refresh viewport position\n          $tooltip.$viewport = options.viewport && findElement(options.viewport.selector || options.viewport);\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var viewportPosition = getPosition($tooltip.$viewport);\n\n            if (/bottom/.test(originalPlacement) && elementPosition.bottom + tipHeight > viewportPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (/top/.test(originalPlacement) && elementPosition.top - tipHeight < viewportPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            if (/left/.test(originalPlacement) && elementPosition.left - tipWidth < viewportPosition.left) {\n              placement = placement.replace('left', 'right');\n            } else if (/right/.test(originalPlacement) && elementPosition.right + tipWidth > viewportPosition.width) {\n              placement = placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacement(tipPosition, placement);\n        };\n\n        $tooltip.$onKeyUp = function (evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function (evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function (evt) {\n          if (options.mouseDownPreventDefault) { evt.preventDefault(); }\n          if (options.mouseDownStopPropagation) { evt.stopPropagation(); }\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          if ($tooltip.$isShown) {\n            element[0].blur();\n          } else {\n            element[0].focus();\n          }\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function (trigger) {\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.on(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover') {\n                element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          });\n        }\n\n        function unbindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.off(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover') {\n                element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents () {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents () {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation (event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition ($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n          var isBody = el.tagName === 'BODY';\n\n          var elRect = el.getBoundingClientRect();\n          var rect = {};\n\n          // IE8 has issues with angular.extend and using elRect directly.\n          // By coping the values of elRect into a new object, we can continue to use extend\n          /* eslint-disable guard-for-in */\n          for (var p in elRect) { // eslint-disable-line\n            // DO NOT use hasOwnProperty when inspecting the return of getBoundingClientRect.\n            rect[p] = elRect[p];\n          }\n          /* eslint-enable guard-for-in */\n\n          if (rect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            rect = angular.extend({}, rect, {width: elRect.right - elRect.left, height: elRect.bottom - elRect.top});\n          }\n          var elOffset = isBody ? {top: 0, left: 0} : dimensions.offset(el);\n          var scroll = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.prop('scrollTop') || 0};\n          var outerDims = isBody ? {width: document.documentElement.clientWidth, height: $window.innerHeight} : null;\n\n          return angular.extend({}, rect, scroll, outerDims, elOffset);\n        }\n\n        function getCalculatedOffset (placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n            case 'right':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left + position.width\n              };\n              break;\n            case 'bottom':\n              offset = {\n                top: position.top + position.height,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n            case 'left':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left - actualWidth\n              };\n              break;\n            default:\n              offset = {\n                top: position.top - actualHeight,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n          }\n\n          if (!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if (split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n              case 'left':\n                offset.left = position.left;\n                break;\n              case 'right':\n                offset.left = position.left + position.width - actualWidth;\n                break;\n              default:\n                break;\n            }\n          } else if (split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n              case 'top':\n                offset.top = position.top - actualHeight + position.height;\n                break;\n              case 'bottom':\n                offset.top = position.top;\n                break;\n              default:\n                break;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacement (offset, placement) {\n          var tip = tipElement[0];\n          var width = tip.offsetWidth;\n          var height = tip.offsetHeight;\n\n          // manually read margins because getBoundingClientRect includes difference\n          var marginTop = parseInt(dimensions.css(tip, 'margin-top'), 10);\n          var marginLeft = parseInt(dimensions.css(tip, 'margin-left'), 10);\n\n          // we must check for NaN for ie 8/9\n          if (isNaN(marginTop)) marginTop = 0;\n          if (isNaN(marginLeft)) marginLeft = 0;\n\n          offset.top = offset.top + marginTop;\n          offset.left = offset.left + marginLeft;\n\n          // dimensions setOffset doesn't round pixel values\n          // so we use setOffset directly with our own function\n          dimensions.setOffset(tip, angular.extend({\n            using: function (props) {\n              tipElement.css({\n                top: Math.round(props.top) + 'px',\n                left: Math.round(props.left) + 'px',\n                right: ''\n              });\n            }\n          }, offset), 0);\n\n          // check to see if placing tip in new offset caused the tip to resize itself\n          var actualWidth = tip.offsetWidth;\n          var actualHeight = tip.offsetHeight;\n\n          if (placement === 'top' && actualHeight !== height) {\n            offset.top = offset.top + height - actualHeight;\n          }\n\n          // If it's an exotic placement, exit now instead of\n          // applying a delta and changing the arrow\n          if (/top-left|top-right|bottom-left|bottom-right/.test(placement)) return;\n\n          var delta = getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n\n          if (delta.left) {\n            offset.left += delta.left;\n          } else {\n            offset.top += delta.top;\n          }\n\n          dimensions.setOffset(tip, offset);\n\n          if (/top|right|bottom|left/.test(placement)) {\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n\n            replaceArrow(arrowDelta, tip[arrowOffsetPosition], isVertical);\n          }\n        }\n\n        // @source https://github.com/twbs/bootstrap/blob/v3.3.5/js/tooltip.js#L380\n        function getViewportAdjustedDelta (placement, position, actualWidth, actualHeight) {\n          var delta = {top: 0, left: 0};\n          if (!$tooltip.$viewport) return delta;\n\n          var viewportPadding = options.viewport && options.viewport.padding || 0;\n          var viewportDimensions = getPosition($tooltip.$viewport);\n\n          if (/right|left/.test(placement)) {\n            var topEdgeOffset = position.top - viewportPadding - viewportDimensions.scroll;\n            var bottomEdgeOffset = position.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\n              delta.top = viewportDimensions.top - topEdgeOffset;\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n              delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n            }\n          } else {\n            var leftEdgeOffset = position.left - viewportPadding;\n            var rightEdgeOffset = position.left + viewportPadding + actualWidth;\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n              delta.left = viewportDimensions.left - leftEdgeOffset;\n            } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n              delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n            }\n          }\n\n          return delta;\n        }\n\n        function replaceArrow (delta, dimension, isHorizontal) {\n          var $arrow = findElement('.tooltip-arrow, .arrow', tipElement[0]);\n\n          $arrow.css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n                .css(isHorizontal ? 'top' : 'left', '');\n        }\n\n        function destroyTipElement () {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if ($tooltip.$isShown && tipElement !== null) {\n            if (options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if (options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if (tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if (tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function ($window, $location, $sce, $parse, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        var tooltip;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'titleTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function (newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }\n        });\n\n        attr.$observe('disabled', function (newValue) {\n          if (newValue && tooltip.$isShown) {\n            tooltip.hide();\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsTooltip) {\n          scope.$watch(attr.bsTooltip, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.title = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n            if (newValue === true) {\n              tooltip.show();\n            } else {\n              tooltip.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n            if (newValue === false) {\n              tooltip.setEnabled(false);\n            } else {\n              tooltip.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            tooltip.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.timepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$timepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    defaultDate: 'auto',\n    prefixClass: 'timepicker',\n    placement: 'bottom-left',\n    templateUrl: 'timepicker/timepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: true,\n    timeType: 'date',\n    timeFormat: 'shortTime',\n    timezone: null,\n    modelTimeFormat: null,\n    autoclose: false,\n    minTime: -Infinity,\n    maxTime: +Infinity,\n    length: 5,\n    hourStep: 1,\n    minuteStep: 5,\n    secondStep: 5,\n    roundDisplay: false,\n    iconUp: 'nox-sort-up',\n    iconDown: 'nox-sort-down',\n    arrowBehavior: 'pager'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) {\n      defaults.lang = $dateFormatter.getDefaultLocale();\n    }\n    function timepickerFactory(element, controller, config) {\n      var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $timepicker.$options;\n      var scope = $timepicker.$scope;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      function floorMinutes(time) {\n        var coeff = 1e3 * 60 * options.minuteStep;\n        return new Date(Math.floor(time.getTime() / coeff) * coeff);\n      }\n      var selectedIndex = 0;\n      var defaultDate = options.roundDisplay ? floorMinutes(new Date()) : new Date();\n      var startDate = controller.$dateValue || defaultDate;\n      var viewDate = {\n        hour: startDate.getHours(),\n        meridian: startDate.getHours() < 12,\n        minute: startDate.getMinutes(),\n        second: startDate.getSeconds(),\n        millisecond: startDate.getMilliseconds()\n      };\n      var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n      var hoursFormat = $dateFormatter.hoursFormat(format);\n      var timeSeparator = $dateFormatter.timeSeparator(format);\n      var minutesFormat = $dateFormatter.minutesFormat(format);\n      var secondsFormat = $dateFormatter.secondsFormat(format);\n      var showSeconds = $dateFormatter.showSeconds(format);\n      var showAM = $dateFormatter.showAM(format);\n      scope.$iconUp = options.iconUp;\n      scope.$iconDown = options.iconDown;\n      scope.$select = function(date, index) {\n        $timepicker.select(date, index);\n      };\n      scope.$moveIndex = function(value, index) {\n        $timepicker.$moveIndex(value, index);\n      };\n      scope.$switchMeridian = function(date) {\n        $timepicker.switchMeridian(date);\n      };\n      $timepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $timepicker.$date = date;\n          angular.extend(viewDate, {\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            millisecond: date.getMilliseconds()\n          });\n          $timepicker.$build();\n        } else if (!$timepicker.$isBuilt) {\n          $timepicker.$build();\n        }\n      };\n      $timepicker.select = function(date, index, keep) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          controller.$dateValue = options.defaultDate === 'today' ? new Date() : new Date(1970, 0, 1);\n        }\n        if (!angular.isDate(date)) date = new Date(date);\n        if (index === 0) controller.$dateValue.setHours(date.getHours()); else if (index === 1) controller.$dateValue.setMinutes(date.getMinutes()); else if (index === 2) controller.$dateValue.setSeconds(date.getSeconds());\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n        if (options.autoclose && !keep) {\n          $timeout(function() {\n            $timepicker.hide(true);\n          });\n        }\n      };\n      $timepicker.switchMeridian = function(date) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          return;\n        }\n        var hours = (date || controller.$dateValue).getHours();\n        controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n      };\n      $timepicker.$build = function() {\n        var i;\n        var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n        var hours = [];\n        var hour;\n        for (i = 0; i < options.length; i++) {\n          hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n          hours.push({\n            date: hour,\n            label: formatDate(hour, hoursFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n            disabled: $timepicker.$isDisabled(hour, 0)\n          });\n        }\n        var minutes = [];\n        var minute;\n        for (i = 0; i < options.length; i++) {\n          minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n          minutes.push({\n            date: minute,\n            label: formatDate(minute, minutesFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(minute, 1),\n            disabled: $timepicker.$isDisabled(minute, 1)\n          });\n        }\n        var seconds = [];\n        var second;\n        for (i = 0; i < options.length; i++) {\n          second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n          seconds.push({\n            date: second,\n            label: formatDate(second, secondsFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(second, 2),\n            disabled: $timepicker.$isDisabled(second, 2)\n          });\n        }\n        var rows = [];\n        for (i = 0; i < options.length; i++) {\n          if (showSeconds) {\n            rows.push([ hours[i], minutes[i], seconds[i] ]);\n          } else {\n            rows.push([ hours[i], minutes[i] ]);\n          }\n        }\n        scope.rows = rows;\n        scope.showSeconds = showSeconds;\n        scope.showAM = showAM;\n        scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n        scope.timeSeparator = timeSeparator;\n        $timepicker.$isBuilt = true;\n      };\n      $timepicker.$isSelected = function(date, index) {\n        if (!$timepicker.$date) return false; else if (index === 0) {\n          return date.getHours() === $timepicker.$date.getHours();\n        } else if (index === 1) {\n          return date.getMinutes() === $timepicker.$date.getMinutes();\n        } else if (index === 2) {\n          return date.getSeconds() === $timepicker.$date.getSeconds();\n        }\n      };\n      $timepicker.$isDisabled = function(date, index) {\n        var selectedTime;\n        if (index === 0) {\n          selectedTime = date.getTime() + viewDate.minute * 6e4 + viewDate.second * 1e3;\n        } else if (index === 1) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.second * 1e3;\n        } else if (index === 2) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.minute * 6e4;\n        }\n        return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n      };\n      scope.$arrowAction = function(value, index) {\n        if (options.arrowBehavior === 'picker') {\n          $timepicker.$setTimeByStep(value, index);\n        } else {\n          $timepicker.$moveIndex(value, index);\n        }\n      };\n      $timepicker.$setTimeByStep = function(value, index) {\n        var newDate = new Date($timepicker.$date || startDate);\n        var hours = newDate.getHours();\n        var minutes = newDate.getMinutes();\n        var seconds = newDate.getSeconds();\n        if (index === 0) {\n          newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n        } else if (index === 1) {\n          newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n        } else if (index === 2) {\n          newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n        }\n        $timepicker.select(newDate, index, true);\n      };\n      $timepicker.$moveIndex = function(value, index) {\n        var targetDate;\n        if (index === 0) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n          angular.extend(viewDate, {\n            hour: targetDate.getHours()\n          });\n        } else if (index === 1) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n          angular.extend(viewDate, {\n            minute: targetDate.getMinutes()\n          });\n        } else if (index === 2) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n          angular.extend(viewDate, {\n            second: targetDate.getSeconds()\n          });\n        }\n        $timepicker.$build();\n      };\n      $timepicker.$onMouseDown = function(evt) {\n        if (evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $timepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          $timepicker.hide(true);\n          return;\n        }\n        var newDate = new Date($timepicker.$date);\n        var hours = newDate.getHours();\n        var hoursLength = formatDate(newDate, hoursFormat).length;\n        var minutes = newDate.getMinutes();\n        var minutesLength = formatDate(newDate, minutesFormat).length;\n        var seconds = newDate.getSeconds();\n        var secondsLength = formatDate(newDate, secondsFormat).length;\n        var sepLength = 1;\n        var lateralMove = /(37|39)/.test(evt.keyCode);\n        var count = 2 + showSeconds * 1 + showAM * 1;\n        if (lateralMove) {\n          if (evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1; else if (evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n        }\n        var selectRange = [ 0, hoursLength ];\n        var incr = 0;\n        if (evt.keyCode === 38) incr = -1;\n        if (evt.keyCode === 40) incr = +1;\n        var isSeconds = selectedIndex === 2 && showSeconds;\n        var isMeridian = selectedIndex === 2 && !showSeconds || selectedIndex === 3 && showSeconds;\n        if (selectedIndex === 0) {\n          newDate.setHours(hours + incr * parseInt(options.hourStep, 10));\n          hoursLength = formatDate(newDate, hoursFormat).length;\n          selectRange = [ 0, hoursLength ];\n        } else if (selectedIndex === 1) {\n          newDate.setMinutes(minutes + incr * parseInt(options.minuteStep, 10));\n          minutesLength = formatDate(newDate, minutesFormat).length;\n          selectRange = [ hoursLength + sepLength, minutesLength ];\n        } else if (isSeconds) {\n          newDate.setSeconds(seconds + incr * parseInt(options.secondStep, 10));\n          secondsLength = formatDate(newDate, secondsFormat).length;\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength, secondsLength ];\n        } else if (isMeridian) {\n          if (!lateralMove) $timepicker.switchMeridian();\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength + (secondsLength + sepLength) * showSeconds, 2 ];\n        }\n        $timepicker.select(newDate, selectedIndex, true);\n        createSelection(selectRange[0], selectRange[1]);\n        parentScope.$digest();\n      };\n      function createSelection(start, length) {\n        var end = start + length;\n        if (element[0].createTextRange) {\n          var selRange = element[0].createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end);\n          selRange.select();\n        } else if (element[0].setSelectionRange) {\n          element[0].setSelectionRange(start, end);\n        } else if (angular.isUndefined(element[0].selectionStart)) {\n          element[0].selectionStart = start;\n          element[0].selectionEnd = end;\n        }\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $timepicker.init;\n      $timepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'time');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $timepicker.destroy;\n      $timepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $timepicker.show;\n      $timepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if ($timepicker.$element) $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if (options.keyboard) {\n            if (element) element.on('keydown', $timepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $timepicker.hide;\n      $timepicker.hide = function(blur) {\n        if (!$timepicker.$isShown) return;\n        if ($timepicker.$element) $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n        if (options.keyboard) {\n          if (element) element.off('keydown', $timepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $timepicker;\n    }\n    timepickerFactory.defaults = defaults;\n    return timepickerFactory;\n  } ];\n}).directive('bsTimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$timepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n  var defaults = $timepicker.defaults;\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'autoclose', 'timeType', 'timeFormat', 'timezone', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'secondStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'roundDisplay', 'id', 'prefixClass', 'prefixEvent', 'defaultDate' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'roundDisplay' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      if (isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n      var timepicker = $timepicker(element, controller, options);\n      options = timepicker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!timepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          if (newValue === true) {\n            timepicker.show();\n          } else {\n            timepicker.hide();\n          }\n        });\n      }\n      var dateParser = $dateParser({\n        format: options.timeFormat,\n        lang: lang\n      });\n      angular.forEach([ 'minTime', 'maxTime' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            if (!isNaN(timepicker.$options[key])) timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        }\n      });\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        timepicker.update(controller.$dateValue);\n      }, true);\n      function validateAgainstMinMaxTime(parsedTime) {\n        if (!angular.isDate(parsedTime)) return;\n        var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n        var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (!isValid) {\n          return;\n        }\n        controller.$dateValue = parsedTime;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedTime || isNaN(parsedTime.getTime())) {\n          controller.$setValidity('date', false);\n          return undefined;\n        }\n        validateAgainstMinMaxTime(parsedTime);\n        if (options.timeType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedTime, options.timezone, true);\n          return formatDate(date, options.modelTimeFormat || options.timeFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.timeType === 'number') {\n          return date.getTime();\n        } else if (options.timeType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.timeType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.timeType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n        } else if (options.timeType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getTimeFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getTimeFormattedString());\n      };\n      function getTimeFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (timepicker) timepicker.destroy();\n        options = null;\n        timepicker = null;\n      });\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tab', []).provider('$tab', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    template: 'tab/tab.tpl.html',\n    navClass: 'nav-tabs',\n    activeClass: 'active'\n  };\n  var controller = this.controller = function($scope, $element, $attrs) {\n    var self = this;\n    self.$options = angular.copy(defaults);\n    angular.forEach([ 'animation', 'navClass', 'activeClass' ], function(key) {\n      if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n    });\n    $scope.$navClass = self.$options.navClass;\n    $scope.$activeClass = self.$options.activeClass;\n    self.$panes = $scope.$panes = [];\n    self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n    self.$push = function(pane) {\n      if (angular.isUndefined(self.$panes.$active)) {\n        $scope.$setActive(pane.name || 0);\n      }\n      self.$panes.push(pane);\n    };\n    self.$remove = function(pane) {\n      var index = self.$panes.indexOf(pane);\n      var active = self.$panes.$active;\n      var activeIndex;\n      if (angular.isString(active)) {\n        activeIndex = self.$panes.map(function(pane) {\n          return pane.name;\n        }).indexOf(active);\n      } else {\n        activeIndex = self.$panes.$active;\n      }\n      self.$panes.splice(index, 1);\n      if (index < activeIndex) {\n        activeIndex--;\n      } else if (index === activeIndex && activeIndex === self.$panes.length) {\n        activeIndex--;\n      }\n      if (activeIndex >= 0 && activeIndex < self.$panes.length) {\n        self.$setActive(self.$panes[activeIndex].name || activeIndex);\n      } else {\n        self.$setActive();\n      }\n    };\n    self.$setActive = $scope.$setActive = function(value) {\n      self.$panes.$active = value;\n      self.$activePaneChangeListeners.forEach(function(fn) {\n        fn();\n      });\n    };\n    self.$isActive = $scope.$isActive = function($pane, $index) {\n      return self.$panes.$active === $pane.name || self.$panes.$active === $index;\n    };\n  };\n  this.$get = function() {\n    var $tab = {};\n    $tab.defaults = defaults;\n    $tab.controller = controller;\n    return $tab;\n  };\n}).directive('bsTabs', [ '$window', '$animate', '$tab', '$parse', function($window, $animate, $tab, $parse) {\n  var defaults = $tab.defaults;\n  return {\n    require: [ '?ngModel', 'bsTabs' ],\n    transclude: true,\n    scope: true,\n    controller: [ '$scope', '$element', '$attrs', $tab.controller ],\n    templateUrl: function(element, attr) {\n      return attr.template || defaults.template;\n    },\n    link: function postLink(scope, element, attrs, controllers) {\n      var ngModelCtrl = controllers[0];\n      var bsTabsCtrl = controllers[1];\n      if (ngModelCtrl) {\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n        });\n        ngModelCtrl.$formatters.push(function(modelValue) {\n          bsTabsCtrl.$setActive(modelValue);\n          return modelValue;\n        });\n      }\n      if (attrs.bsActivePane) {\n        var parsedBsActivePane = $parse(attrs.bsActivePane);\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n        });\n        scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n          bsTabsCtrl.$setActive(newValue);\n        }, true);\n      }\n    }\n  };\n} ]).directive('bsPane', [ '$window', '$animate', '$sce', function($window, $animate, $sce) {\n  return {\n    require: [ '^?ngModel', '^bsTabs' ],\n    scope: true,\n    link: function postLink(scope, element, attrs, controllers) {\n      var bsTabsCtrl = controllers[1];\n      element.addClass('tab-pane');\n      attrs.$observe('title', function(newValue, oldValue) {\n        scope.title = $sce.trustAsHtml(newValue);\n      });\n      scope.name = attrs.name;\n      scope.link = attrs.link ? attrs.link : false;\n      if (bsTabsCtrl.$options.animation) {\n        element.addClass(bsTabsCtrl.$options.animation);\n      }\n      attrs.$observe('disabled', function(newValue, oldValue) {\n        scope.disabled = scope.$eval(newValue);\n      });\n      bsTabsCtrl.$push(scope);\n      scope.$on('$destroy', function() {\n        bsTabsCtrl.$remove(scope);\n      });\n      function render() {\n        var index = bsTabsCtrl.$panes.indexOf(scope);\n        $animate[bsTabsCtrl.$isActive(scope, index) ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n      }\n      bsTabsCtrl.$activePaneChangeListeners.push(function() {\n        render();\n      });\n      render();\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"select-arrow\"><i class=\"nox-sort-down\"></i></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          }\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function () {\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n            scope.$activeIndex = -1;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n","/**\n * Created by xiashan on 17/5/12.\n */\n\n'use strict';\n\nangular.module('mgcrea.ngStrap.rangedatepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ])\n  .provider('$rangedatepicker', function () {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'rangedatepicker',\n      placement: 'bottom-left',\n      templateUrl: 'rangedatepicker/rangedatepicker.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      connector: ' / ',\n      dateType: 'date',\n      dateFormat: 'yyyy-MM-dd',\n      timezone: null,\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      compare: true\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'rangedatepickerViews', '$tooltip', '$timeout',\n      function ($window, $document, $rootScope, $sce, $dateFormatter, rangedatepickerViews, $tooltip, $timeout) {\n        var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n        var isTouch = 'createTouch' in $window.document && isNative;\n        if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n        function RangeDatepickerFactory (element, controller, config) {\n          var $rangedatepicker = $tooltip(element, angular.extend({}, defaults, config));\n          var options = $rangedatepicker.$options;\n          var scope = $rangedatepicker.$scope;\n          var pickerViews = rangedatepickerViews($rangedatepicker);\n          $rangedatepicker.$view = pickerViews.view;\n          var viewDate = pickerViews.viewDate;\n          scope.$iconLeft = options.iconLeft;\n          scope.$iconRight = options.iconRight;\n          scope.$compare = options.compare;\n          var $picker = $rangedatepicker.$view;\n\n          var today = new Date();\n          var t = $rangedatepicker.$today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n          var d = today.getDay();\n\n          scope.rangeList = [\n            {name: 'Today', value: '0d', date: {start: t, end: t}},\n            {name: 'Yesterday', value: '-2d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1)}},\n            {name: 'Last 7 Days', value: '-7d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6), end: t}},\n            {name: 'Last Week', value: '-1w', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6 - d), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - d)}},\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}}\n          ];\n\n          // 区间\n          scope.ctrl = {\n            rangeType: '',\n            compare: ''\n          };\n\n          scope.$select = function (date, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.select(date, index);\n          };\n          scope.$selectPane = function (value, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.$selectPane(value, index);\n          };\n          scope.$selectRange = function (type) {\n            if (type === scope.ctrl.rangeType || scope.ctrl.compare) {\n              return;\n            }\n            $rangedatepicker.$selectRange(type);\n            $rangedatepicker.hide(true);\n          };\n          scope.$toggleCompare = function () {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            modelValue.onlyCompare = true;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n          };\n          scope.$closePicker = function () {\n            $rangedatepicker.hide();\n          };\n          scope.$stopPropagation = function (evt) {\n            evt.stopPropagation();\n          };\n\n          $rangedatepicker.update = function (sDate, eDate, force) {\n            if (angular.isDate(sDate) && !isNaN(sDate.getTime()) && angular.isDate(eDate) && !isNaN(eDate.getTime())) {\n              if (!scope.ctrl.compare) {\n                $rangedatepicker.$date = [sDate, eDate];\n              } else {\n                $rangedatepicker.$compareDate = [sDate, eDate];\n              }\n              $picker.update.call($picker, sDate, eDate);\n            }\n            $rangedatepicker.$build(!force);\n          };\n          $rangedatepicker.updateDisabledDates = function (dateRanges) {\n            options.disabledDateRanges = dateRanges;\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], $rangedatepicker.$setDisabledEl);\n            }\n          };\n          $rangedatepicker.select = function (date, index, keep) {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            if (!scope.ctrl.compare) {\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$dateValue[index]) || isNaN(controller.$dateValue[index].getTime())) {\n                  controller.$dateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$dateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.startDate = angular.copy(date);\n              } else {\n                modelValue.endDate = angular.copy(date);\n              }\n            } else {\n              controller.$compareDateValue = !controller.$compareDateValue ? [] : controller.$compareDateValue;\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$compareDateValue[index]) || isNaN(controller.$compareDateValue[index].getTime())) {\n                  controller.$compareDateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$compareDateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.compareStartDate = angular.copy(date);\n              } else {\n                modelValue.compareEndDate = angular.copy(date);\n              }\n            }\n            modelValue.onlyCompare = false;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              scope.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === modelValue.startDate.toDateString() && item.date.end.toDateString() === modelValue.endDate.toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            if (options.autoclose && !keep) {\n              $timeout(function () {\n                $rangedatepicker.hide(true);\n              });\n            }\n          };\n          $rangedatepicker.$getCompare = function () {\n            return scope.ctrl && scope.ctrl.compare;\n          };\n          $rangedatepicker.$build = function (pristine) {\n            if (pristine === true && $picker.built) return;\n            if (pristine === false && !$picker.built) return;\n            $picker.build.call($picker, $rangedatepicker.$date);\n          };\n          $rangedatepicker.$updateSelected = function () {\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], updateSelected);\n            }\n          };\n          $rangedatepicker.$isSelected = function (date) {\n            return $picker.isSelected(date);\n          };\n          $rangedatepicker.$setDisabledEl = function (el) {\n            el.disabled = $picker.isDisabled(el.date);\n          };\n          $rangedatepicker.$selectPane = function (value, index) {\n            var steps = $picker.steps;\n            var key = (index === 0) ? 'startDate' : 'endDate';\n            var targetDate = new Date(Date.UTC(viewDate[key].year + (steps.year || 0) * value, viewDate[key].month + (steps.month || 0) * value, 1));\n            angular.extend(viewDate[key], {\n              year: targetDate.getUTCFullYear(),\n              month: targetDate.getUTCMonth(),\n              date: targetDate.getUTCDate()\n            });\n            $rangedatepicker.$build();\n          };\n          $rangedatepicker.$selectRange = function (type) {\n            var cate = type.substr(-1);\n            var value = parseInt(type.substr(0, type.length - 1), 10);\n            var endDate = $rangedatepicker.$today;\n            var startDate;\n            switch (cate) {\n              case 'd':\n                if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value + 1);\n                  if (value === -2) {\n                    endDate = startDate;\n                  }\n                } else {\n                  startDate = endDate;\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value);\n                }\n                break;\n              case 'w':\n                var day = endDate.getDay();\n                if (value <= 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (day * -1 + 1));\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + (day * -1));\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + 7 - day + 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (7 - day));\n                }\n                break;\n              case 'm':\n                if (value === 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n                } else if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + value, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), 0);\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                }\n                break;\n              default:\n                break;\n            }\n            if (angular.isDate(startDate) && angular.isDate(endDate)) {\n              controller.$dateValue[0] = new Date(startDate);\n              controller.$dateValue[1] = new Date(endDate);\n              var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n              modelValue.startDate = angular.copy(startDate);\n              modelValue.endDate = angular.copy(endDate);\n              modelValue.onlyCompare = false;\n              controller.$setViewValue(modelValue);\n              controller.$render();\n              scope.ctrl.rangeType = type;\n            }\n          };\n          $rangedatepicker.$onMouseDown = function (evt) {\n            evt.preventDefault(true);\n            evt.stopPropagation(true);\n            var targetEl = angular.element(evt.target);\n            if (isTouch) {\n              if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n                targetEl = targetEl.parent();\n              }\n              targetEl.triggerHandler('click');\n            }\n          };\n          function updateSelected (el) {\n            el.selected = $rangedatepicker.$isSelected(el.date);\n          }\n          function focusElement () {\n            element[0].focus();\n          }\n          var _init = $rangedatepicker.init;\n          $rangedatepicker.init = function () {\n            if (isNative && options.useNative) {\n              element.prop('type', 'date');\n              element.css('-webkit-appearance', 'textfield');\n              return;\n            } else if (isTouch) {\n              element.prop('type', 'text');\n              element.attr('readonly', 'true');\n              element.on('click', focusElement);\n            }\n            _init();\n          };\n          var _destroy = $rangedatepicker.destroy;\n          $rangedatepicker.destroy = function () {\n            if (isNative && options.useNative) {\n              element.off('click', focusElement);\n            }\n            _destroy();\n          };\n          var _show = $rangedatepicker.show;\n          $rangedatepicker.show = function () {\n            // if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n            if (element.attr('disabled')) return;\n            _show();\n            $timeout(function () {\n              if (!$rangedatepicker.$isShown) return;\n              $rangedatepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            }, 0, false);\n          };\n          var _hide = $rangedatepicker.hide;\n          $rangedatepicker.hide = function (blur) {\n            if (!$rangedatepicker.$isShown) return;\n            $rangedatepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            _hide(blur);\n          };\n          return $rangedatepicker;\n        }\n        RangeDatepickerFactory.defaults = defaults;\n        return RangeDatepickerFactory;\n      }];\n  })\n  .directive('bsRangedatepicker', ['$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$rangedatepicker',\n    function ($window, $parse, $q, $dateFormatter, $dateParser, $rangedatepicker) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      return {\n        restrict: 'EAC',\n        require: 'ngModel',\n        link: function postLink (scope, element, attr, controller) {\n          var options = {\n            scope: scope\n          };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'connector', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'compare'], function (key) {\n            if (angular.isDefined(attr[key])) options[key] = attr[key];\n          });\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container', 'autoclose', 'useNative', 'compare'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n              options[key] = false;\n            }\n          });\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n          var rangedatepicker = $rangedatepicker(element, controller, options);\n          options = rangedatepicker.$options;\n          if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n          var lang = options.lang;\n          var formatDate = function (date, format) {\n            return $dateFormatter.formatDate(date, format, lang);\n          };\n          var dateParser = $dateParser({\n            format: options.dateFormat,\n            lang: lang,\n            strict: options.strictFormat\n          });\n          angular.forEach(['minDate', 'maxDate'], function (key) {\n            if (angular.isDefined(attr[key])) {\n              attr.$observe(key, function (newValue) {\n                rangedatepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n                if (!isNaN(rangedatepicker.$options[key])) {\n                  rangedatepicker.$build(false);\n                }\n                if (controller.$dateValue) {\n                  validateAgainstMinMaxDate(controller.$dateValue[0], controller.$dateValue[1]);\n                }\n              });\n            }\n          });\n          if (angular.isDefined(attr.dateFormat)) {\n            attr.$observe('dateFormat', function (newValue) {\n              rangedatepicker.$options.dateFormat = newValue;\n            });\n          }\n          scope.$watch(attr.ngModel, function (newValue, oldValue) {\n            if (newValue && newValue.onlyCompare) {\n              rangedatepicker.update(null, null, true);\n            } else if (rangedatepicker.$getCompare()) {\n              rangedatepicker.update(controller.$compareDateValue[0], controller.$compareDateValue[1]);\n            } else {\n              rangedatepicker.update(controller.$dateValue[0], controller.$dateValue[1]);\n            }\n          }, true);\n\n          function getFormattedDate (modelValue) {\n            var date;\n            if (angular.isDate(modelValue)) {\n              date = modelValue;\n            } else if (options.dateType === 'string') {\n              date = dateParser.parse(modelValue, null, options.modelDateFormat);\n            } else if (options.dateType === 'unix') {\n              date = new Date(modelValue * 1e3);\n            } else {\n              date = new Date(modelValue);\n            }\n            return date;\n          }\n          function validateAgainstMinMaxDate (parsedDate1, parsedDate2) {\n            if (!angular.isDate(parsedDate1) || !angular.isDate(parsedDate2)) {\n              return false;\n            }\n            var isMinValid = isNaN(rangedatepicker.$options.minDate) || parsedDate1.getTime() >= rangedatepicker.$options.minDate;\n            var isMaxValid = isNaN(rangedatepicker.$options.maxDate) || parsedDate2.getTime() <= rangedatepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            var compare = rangedatepicker.$getCompare();\n            if (isValid) {\n              if (compare) {\n                controller.$compareDateValue[0] = parsedDate1;\n                controller.$compareDateValue[1] = parsedDate2;\n              } else {\n                controller.$dateValue[0] = parsedDate1;\n                controller.$dateValue[1] = parsedDate2;\n              }\n            }\n            return true;\n          }\n          controller.$parsers.unshift(function (viewValue) {\n            var compare = rangedatepicker.$getCompare();\n            if (!viewValue) {\n              controller.$setValidity('date', true);\n              return null;\n            }\n            if (viewValue.onlyCompare) {\n              viewValue.compare = compare;\n              return viewValue;\n            }\n            var parsedDate1;\n            var parsedDate2;\n            if (compare) {\n              parsedDate1 = dateParser.parse(viewValue.compareStartDate, controller.$compareDateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.compareEndDate, controller.$compareDateValue[1]);\n            } else {\n              parsedDate1 = dateParser.parse(viewValue.startDate, controller.$dateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.endDate, controller.$dateValue[1]);\n            }\n            if (parsedDate1 && !parsedDate2) {\n              parsedDate2 = angular.copy(parsedDate1);\n            }\n            if (!parsedDate1 && parsedDate2) {\n              parsedDate1 = angular.copy(parsedDate2);\n            }\n            if (!parsedDate1 || isNaN(parsedDate1.getTime()) || !parsedDate2 || isNaN(parsedDate2.getTime())) {\n              controller.$setValidity('date', false);\n              return false;\n            }\n            validateAgainstMinMaxDate(parsedDate1, parsedDate2);\n            var obj = {\n              dateRange: viewValue.dateRange,\n              compare: compare\n            };\n            var skey = '';\n            var ekey = '';\n            if (compare) {\n              obj.startDate = viewValue.startDate;\n              obj.endDate = viewValue.endDate;\n              skey = 'compareStartDate';\n              ekey = 'compareEndDate';\n            } else {\n              // obj.compareStartDate = viewValue.compareStartDate;\n              // obj.compareEndDate = viewValue.compareEndDate;\n              skey = 'startDate';\n              ekey = 'endDate';\n            }\n            if (options.dateType === 'string') {\n              obj[skey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate1, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              obj[ekey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate2, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              return obj;\n            }\n            var date1;\n            var date2;\n            if (compare) {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[1], options.timezone, true);\n            } else {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$dateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$dateValue[1], options.timezone, true);\n            }\n            if (options.dateType === 'number') {\n              obj[skey] = date1.getTime();\n              obj[ekey] = date2.getTime();\n            } else if (options.dateType === 'unix') {\n              obj[skey] = date1.getTime() / 1e3;\n              obj[ekey] = date2.getTime() / 1e3;\n            } else if (options.dateType === 'iso') {\n              obj[skey] = date1.toISOString();\n              obj[ekey] = date2.toISOString();\n            } else {\n              obj[skey] = new Date(date1);\n              obj[ekey] = new Date(date2);\n            }\n            return obj;\n          });\n          controller.$formatters.push(function (modelValue) {\n            var startDate;\n            var endDate;\n            if (angular.isUndefined(modelValue) || modelValue === null) {\n              return '';\n            } else if (modelValue.dateRange) {\n              controller.$dateRange = modelValue.dateRange;\n              controller.$dateValue = !controller.$dateValue ? [] : controller.$dateValue;\n              rangedatepicker.$selectRange(controller.$dateRange);\n            } else if (modelValue.startDate && modelValue.endDate) {\n              startDate = getFormattedDate(modelValue.startDate);\n              endDate = getFormattedDate(modelValue.endDate);\n              controller.$dateValue = [dateParser.timezoneOffsetAdjust(startDate, options.timezone), dateParser.timezoneOffsetAdjust(endDate, options.timezone)];\n            }\n            controller.$compareDateValue = [];\n\n            return getDateFormattedString();\n          });\n          controller.$render = function () {\n            element.val(getDateFormattedString());\n          };\n          function getDateFormattedString () {\n            // return (!controller.$dateValue || controller.$dateValue.length === 0 || !controller.$dateValue[0] || !controller.$dateValue[1] ||\n            // isNaN(controller.$dateValue[0].getTime()) || isNaN(controller.$dateValue[1].getTime()))\n            //   ? '' : formatDate(controller.$dateValue[0], options.dateFormat) + options.connector + formatDate(controller.$dateValue[1], options.dateFormat);\n            if (!controller.$modelValue || !controller.$modelValue.startDate || isNaN(controller.$modelValue.startDate.getTime())) {\n              return '';\n            }\n            var html = formatDate(controller.$modelValue.startDate, options.dateFormat);\n            if (controller.$modelValue.compare && controller.$modelValue.compareStartDate && !isNaN(controller.$modelValue.compareStartDate.getTime())) {\n              html += ' vs ' + formatDate(controller.$modelValue.compareStartDate, options.dateFormat);\n            } else if (!controller.$modelValue.compare && controller.$modelValue.endDate && !isNaN(controller.$modelValue.endDate.getTime())) {\n              html += ' / ' + formatDate(controller.$modelValue.endDate, options.dateFormat);\n            }\n            return html;\n          }\n          scope.$on('$destroy', function () {\n            if (rangedatepicker) rangedatepicker.destroy();\n            options = null;\n            rangedatepicker = null;\n          });\n        }\n      };\n    }])\n  .provider('rangedatepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      return function (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = (picker.$date && picker.$date[0]) || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var endDate = (picker.$date && picker.$date[1]) || (options.endDate ? dateParser.getDateForAttribute('endDate', options.endDate) : new Date());\n        var viewDate = {\n          startDate: {\n            year: startDate.getFullYear(),\n            month: startDate.getMonth(),\n            date: startDate.getDate()\n          },\n          endDate: {\n            year: endDate.getFullYear(),\n            month: endDate.getMonth(),\n            date: endDate.getDate()\n          }\n        };\n        var view = {\n          format: options.dayFormat,\n          split: 7,\n          steps: {\n            month: 1\n          },\n          update: function (sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function () {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var item = viewDate[value];\n              var firstDayOfMonth = new Date(item.year, item.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === today,\n                  label: formatDate(day, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], day),\n                  inRange: that.isInRange(day),\n                  muted: day.getMonth() !== item.month,\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(day, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], day)\n                });\n              }\n              scope.title[index] = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.rows[index] = split(days, that.split);\n            });\n            scope.showLabels = true;\n            scope.labels = weekDaysLabelsHtml;\n            scope.isTodayDisabled = this.isDisabled(new Date());\n            this.built = true;\n          },\n          isSelected: function (currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth() &&\n              date.getDate() === currentDate.getDate();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function (date, index) {\n            var time = date.getTime();\n            if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            if (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1]))) {\n              return true;\n            }\n            if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) {\n              return true;\n            }\n            if (options.disabledDateRanges) {\n              for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                  return true;\n                }\n              }\n            }\n            return false;\n          }\n        };\n        return {\n          view: view,\n          viewDate: viewDate\n        };\n      };\n    } ];\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      // uncommenting the next two lines will break backwards compatability\n      // prefixClass: 'popover',\n      // prefixEvent: 'popover',\n      container: false,\n      target: false,\n      placement: 'right',\n      templateUrl: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function ($tooltip) {\n\n      function PopoverFactory (element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if (options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function ($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr) {\n\n        var popover;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent', 'bsEnabled'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n              if (angular.isDefined(oldValue)) {\n                requestAnimationFrame(function () {\n                  if (popover) popover.$applyPlacement();\n                });\n              }\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsPopover) {\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              requestAnimationFrame(function () {\n                if (popover) popover.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n            if (newValue === true) {\n              popover.show();\n            } else {\n              popover.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(popover),?/i);\n            if (newValue === false) {\n              popover.setEnabled(false);\n            } else {\n              popover.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            popover.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n","'use strict';\n\nif (angular.version.minor < 3 && angular.version.dot < 14) {\n  angular.module('ng')\n\n  .factory('$$rAF', function ($window, $timeout) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported ?\n      function (fn) {\n        var id = requestAnimationFrame(fn);\n        return function () {\n          cancelAnimationFrame(id);\n        };\n      } :\n      function (fn) {\n        var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n        return function () {\n          $timeout.cancel(timer);\n        };\n      };\n\n    raf.supported = rafSupported;\n\n    return raf;\n\n  });\n}\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function () {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function ($parse, $q) {\n\n      function ParseOptionsFactory (attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match;\n        var displayFn;\n        var valueName;\n        /* eslint-disable no-unused-vars */\n        var keyName;\n        var groupByFn;\n        /* eslint-enable no-unused-vars */\n        var valueFn;\n        var valuesFn;\n\n        $parseOptions.init = function () {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]);\n          valueName = match[4] || match[6];\n          keyName = match[5];\n          groupByFn = $parse(match[3] || '');\n          valueFn = $parse(match[2] ? match[1] : valueName);\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function (scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function (values) {\n            if (!angular.isArray(values)) {\n              values = [];\n            }\n            $parseOptions.$values = values.length ? parseValues(values, scope) : [];\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function (modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues (values, scope) {\n          return values.map(function (match, index) {\n            var locals = {};\n            var label;\n            var value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function () {\n\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function (element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function (element, prop, extra) {\n      var value;\n      if (element.currentStyle) { // IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function (element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides set equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip\n     * @url http://api.jquery.com/offset/\n     * @param element\n     * @param options\n     * @param i\n     */\n    fn.setOffset = function (element, options, i) {\n      var curPosition;\n      var curLeft;\n      var curCSSTop;\n      var curTop;\n      var curOffset;\n      var curCSSLeft;\n      var calculatePosition;\n      var position = fn.css(element, 'position');\n      var curElem = angular.element(element);\n      var props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        element.style.position = 'relative';\n      }\n\n      curOffset = fn.offset(element);\n      curCSSTop = fn.css(element, 'top');\n      curCSSLeft = fn.css(element, 'left');\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = fn.position(element);\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (angular.isFunction(options)) {\n        options = options.call(element, i, curOffset);\n      }\n\n      if (options.top !== null) {\n        props.top = (options.top - curOffset.top) + curTop;\n      }\n      if (options.left !== null) {\n        props.left = (options.left - curOffset.left) + curLeft;\n      }\n\n      if ('using' in options) {\n        options.using.call(curElem, props);\n      } else {\n        curElem.css({\n          top: props.top + 'px',\n          left: props.left + 'px'\n        });\n      }\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function (element) {\n\n      var offsetParentRect = {top: 0, left: 0};\n      var offsetParentEl;\n      var offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentEl\n        offsetParentEl = offsetParentElement(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentEl, 'html')) {\n          offsetParentRect = fn.offset(offsetParentEl);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    function offsetParentElement (element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    }\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function (element, outer) {\n      var value = element.offsetHeight;\n      if (outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function (element, outer) {\n      var value = element.offsetWidth;\n      if (outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', function ($timeout) {\n  return function (func, wait, immediate) {\n    var timeout = null;\n    return function () {\n      var context = this;\n      var args = arguments;\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if (callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = null;\n    if (!options) options = {};\n    return function () {\n      var context = this;\n      var args = arguments;\n      if (!timeout) {\n        if (options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later () {\n          timeout = null;\n          if (options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function ($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate () {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function (value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function (value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function (value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function (value) { this.hours = value; };\n  ParseDate.prototype.getHours = function () { return this.hours; };\n  ParseDate.prototype.setDate = function (value) { this.day = value; };\n  ParseDate.prototype.setMonth = function (value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function (value) { this.year = value; };\n  ParseDate.prototype.fromDate = function (value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function () {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop () {\n  }\n\n  function isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive (array, value) {\n    var len = array.length;\n    var str = value.toString().toLowerCase();\n    for (var i = 0; i < len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function ($locale, dateFilter) {\n\n    var DateParserFactory = function (config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      /* eslint-disable key-spacing, quote-props */\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}'\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function (value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function (value) { return this.setMonth(1 * value - 1); },\n        'M'     : function (value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function (value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : function (value) { return (1 * value <= 50 && value.length === 2) ? this.setFullYear(2000 + 1 * value) : this.setFullYear(1 * value); }\n      };\n      /* eslint-enable key-spacing, quote-props */\n\n      var regex;\n      var setMap;\n\n      $dateParser.init = function () {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function (date) {\n        if (angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function (value, baseDate, format, timezone) {\n        // check for date format special names\n        if (format) format = $locale.DATETIME_FORMATS[format] || format;\n        if (angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format, timezone);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if (!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for (var i = 0; i < matches.length - 1; i++) {\n          if (formatSetMap[i]) formatSetMap[i].call(date, matches[i + 1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function (key, value) {\n        var date;\n\n        if (value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if (isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && value.length === 0) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function (key, value) {\n        var time;\n\n        if (value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if (isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.length === 0) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function (date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      /* Correct the date for timezone offset.\n      * @param  date  (Date) the date to adjust\n      * @param  timezone  (string) the timezone to adjust for\n      * @param  undo  (boolean) to add or subtract timezone offset\n      * @return  (Date) the corrected date\n      */\n      $dateParser.timezoneOffsetAdjust = function (date, timezone, undo) {\n        if (!date) {\n          return null;\n        }\n        // Right now, only 'UTC' is supported.\n        if (timezone && timezone === 'UTC') {\n          date = new Date(date.getTime());\n          date.setMinutes(date.getMinutes() + (undo ? -1 : 1) * date.getTimezoneOffset());\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function regExpForFormat (format) {\n        // `format` string can contain literal values.\n        // These need to be escaped by surrounding with\n        // single quotes (e.g. `\"h 'in the morning'\"`).\n        // In order to output a single quote, escape it - i.e.,\n        // two single quotes in a sequence (e.g. `\"h 'o''clock'\"`).\n\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseRegex(re);\n      }\n\n      function buildDateAbstractRegex (format) {\n        var escapedFormat = escapeReservedSymbols(format);\n        var escapedLiteralFormat = escapedFormat.replace(/''/g, '\\\\\\'');\n        var literalRegex = /('(?:\\\\'|.)*?')/;\n        var formatParts = escapedLiteralFormat.split(literalRegex);\n        var dateElements = Object.keys(regExpMap);\n        var dateRegexParts = [];\n\n        angular.forEach(formatParts, function (part) {\n          if (isFormatStringLiteral(part)) {\n            part = trimLiteralEscapeChars(part);\n          } else {\n            // Abstract replaces to avoid collisions\n            for (var i = 0; i < dateElements.length; i++) {\n              part = part.split(dateElements[i]).join('${' + i + '}');\n            }\n          }\n          dateRegexParts.push(part);\n        });\n\n        return dateRegexParts.join('');\n      }\n\n      function escapeReservedSymbols (text) {\n        return text.replace(/\\\\/g, '[\\\\\\\\]')\n                   .replace(/-/g, '[-]')\n                   .replace(/\\./g, '[.]')\n                   .replace(/\\*/g, '[*]')\n                   .replace(/\\+/g, '[+]')\n                   .replace(/\\?/g, '[?]')\n                   .replace(/\\$/g, '[$]')\n                   .replace(/\\^/g, '[^]')\n                   .replace(/\\//g, '[/]')\n                   .replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function isFormatStringLiteral (text) {\n        return /^'.*'$/.test(text);\n      }\n\n      function trimLiteralEscapeChars (text) {\n        return text.replace(/^'(.*)'$/, '$1');\n      }\n\n      function buildDateParseRegex (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var re = abstractRegex;\n\n        // Replace abstracted values\n        for (var i = 0; i < dateElements.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[dateElements[i]] + ')');\n        }\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      function setMapForFormat (format) {\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseValuesMap(re);\n      }\n\n      function buildDateParseValuesMap (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var valuesRegex = new RegExp('\\\\${(\\\\d+)}', 'g');\n        var valuesMatch;\n        var keyIndex;\n        var valueKey;\n        var valueFunction;\n        var valuesFunctionMap = [];\n\n        /* eslint-disable no-cond-assign */\n        while ((valuesMatch = valuesRegex.exec(abstractRegex)) !== null) {\n          keyIndex = valuesMatch[1];\n          valueKey = dateElements[keyIndex];\n          valueFunction = setFnMap[valueKey];\n\n          valuesFunctionMap.push(valueFunction);\n        }\n\n        return valuesFunctionMap;\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.datepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$datepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    prefixClass: 'datepicker',\n    placement: 'bottom-left',\n    templateUrl: 'datepicker/datepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: false,\n    dateType: 'date',\n    dateFormat: 'shortDate',\n    timezone: null,\n    modelDateFormat: null,\n    dayFormat: 'dd',\n    monthFormat: 'MMM',\n    yearFormat: 'yyyy',\n    monthTitleFormat: 'MMMM yyyy',\n    yearTitleFormat: 'yyyy',\n    strictFormat: false,\n    autoclose: false,\n    minDate: -Infinity,\n    maxDate: +Infinity,\n    startView: 0,\n    minView: 0,\n    startWeek: 0,\n    daysOfWeekDisabled: '',\n    hasToday: false,\n    hasClear: false,\n    iconLeft: 'nox-sort-left',\n    iconRight: 'nox-sort-right'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datepickerViews', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n    function DatepickerFactory(element, controller, config) {\n      var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $datepicker.$options;\n      var scope = $datepicker.$scope;\n      if (options.startView) options.startView -= options.minView;\n      var pickerViews = datepickerViews($datepicker);\n      $datepicker.$views = pickerViews.views;\n      var viewDate = pickerViews.viewDate;\n      scope.$mode = options.startView;\n      scope.$iconLeft = options.iconLeft;\n      scope.$iconRight = options.iconRight;\n      scope.$hasToday = options.hasToday;\n      scope.$hasClear = options.hasClear;\n      var $picker = $datepicker.$views[scope.$mode];\n      scope.$select = function(date) {\n        $datepicker.select(date);\n      };\n      scope.$selectPane = function(value) {\n        $datepicker.$selectPane(value);\n      };\n      scope.$toggleMode = function() {\n        $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n      };\n      scope.$setToday = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(new Date());\n        } else {\n          $datepicker.select(new Date(), true);\n        }\n      };\n      scope.$clear = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(null);\n        } else {\n          $datepicker.select(null, true);\n        }\n      };\n      $datepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $datepicker.$date = date;\n          $picker.update.call($picker, date);\n        }\n        $datepicker.$build(true);\n      };\n      $datepicker.updateDisabledDates = function(dateRanges) {\n        options.disabledDateRanges = dateRanges;\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n        }\n      };\n      $datepicker.select = function(date, keep) {\n        if (angular.isDate(date)) {\n          if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date(date);\n          }\n        } else {\n          controller.$dateValue = null;\n        }\n        if (!scope.$mode || keep) {\n          controller.$setViewValue(angular.copy(date));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              $datepicker.hide(true);\n            });\n          }\n        } else {\n          angular.extend(viewDate, {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            date: date.getDate()\n          });\n          $datepicker.setMode(scope.$mode - 1);\n          $datepicker.$build();\n        }\n      };\n      $datepicker.setMode = function(mode) {\n        scope.$mode = mode;\n        $picker = $datepicker.$views[scope.$mode];\n        $datepicker.$build();\n      };\n      $datepicker.$build = function(pristine) {\n        if (pristine === true && $picker.built) return;\n        if (pristine === false && !$picker.built) return;\n        $picker.build.call($picker);\n      };\n      $datepicker.$updateSelected = function() {\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], updateSelected);\n        }\n      };\n      $datepicker.$isSelected = function(date) {\n        return $picker.isSelected(date);\n      };\n      $datepicker.$setDisabledEl = function(el) {\n        el.disabled = $picker.isDisabled(el.date);\n      };\n      $datepicker.$selectPane = function(value) {\n        var steps = $picker.steps;\n        var targetDate = new Date(Date.UTC(viewDate.year + (steps.year || 0) * value, viewDate.month + (steps.month || 0) * value, 1));\n        angular.extend(viewDate, {\n          year: targetDate.getUTCFullYear(),\n          month: targetDate.getUTCMonth(),\n          date: targetDate.getUTCDate()\n        });\n        $datepicker.$build();\n      };\n      $datepicker.$onMouseDown = function(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $datepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          if (!scope.$mode) {\n            $datepicker.hide(true);\n          } else {\n            scope.$apply(function() {\n              $datepicker.setMode(scope.$mode - 1);\n            });\n          }\n          return;\n        }\n        $picker.onKeyDown(evt);\n        parentScope.$digest();\n      };\n      function updateSelected(el) {\n        el.selected = $datepicker.$isSelected(el.date);\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $datepicker.init;\n      $datepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'date');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $datepicker.destroy;\n      $datepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $datepicker.show;\n      $datepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.on('keydown', $datepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $datepicker.hide;\n      $datepicker.hide = function(blur) {\n        if (!$datepicker.$isShown) return;\n        $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n        if (options.keyboard) {\n          element.off('keydown', $datepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $datepicker;\n    }\n    DatepickerFactory.defaults = defaults;\n    return DatepickerFactory;\n  } ];\n}).directive('bsDatepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      var datepicker = $datepicker(element, controller, options);\n      options = datepicker.$options;\n      if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!datepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          if (newValue === true) {\n            datepicker.show();\n          } else {\n            datepicker.hide();\n          }\n        });\n      }\n      angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        }\n      });\n      if (angular.isDefined(attr.dateFormat)) {\n        attr.$observe('dateFormat', function(newValue) {\n          datepicker.$options.dateFormat = newValue;\n        });\n      }\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        datepicker.update(controller.$dateValue);\n      }, true);\n      function normalizeDateRanges(ranges) {\n        if (!ranges || !ranges.length) return null;\n        return ranges;\n      }\n      if (angular.isDefined(attr.disabledDates)) {\n        scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n          disabledRanges = normalizeDateRanges(disabledRanges);\n          previousValue = normalizeDateRanges(previousValue);\n          if (disabledRanges) {\n            datepicker.updateDisabledDates(disabledRanges);\n          }\n        });\n      }\n      function validateAgainstMinMaxDate(parsedDate) {\n        if (!angular.isDate(parsedDate)) return;\n        var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n        var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (isValid) controller.$dateValue = parsedDate;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedDate || isNaN(parsedDate.getTime())) {\n          controller.$setValidity('date', false);\n          return;\n        }\n        validateAgainstMinMaxDate(parsedDate);\n        if (options.dateType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n          return formatDate(date, options.modelDateFormat || options.dateFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.dateType === 'number') {\n          return date.getTime();\n        } else if (options.dateType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.dateType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.dateType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelDateFormat);\n        } else if (options.dateType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getDateFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getDateFormattedString());\n      };\n      function getDateFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (datepicker) datepicker.destroy();\n        options = null;\n        datepicker = null;\n      });\n    }\n  };\n} ]).provider('datepickerViews', function() {\n  function split(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  }\n  function mod(n, m) {\n    return (n % m + m) % m;\n  }\n  this.$get = [ '$dateFormatter', '$dateParser', '$sce', function($dateFormatter, $dateParser, $sce) {\n    return function(picker) {\n      var scope = picker.$scope;\n      var options = picker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n      var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n      var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n      var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n      var viewDate = {\n        year: startDate.getFullYear(),\n        month: startDate.getMonth(),\n        date: startDate.getDate()\n      };\n      var views = [ {\n        format: options.dayFormat,\n        split: 7,\n        steps: {\n          month: 1\n        },\n        update: function(date, force) {\n          if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n            viewDate.date = picker.$date.getDate();\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n          var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n          var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n          var firstDateOffset = firstDate.getTimezoneOffset();\n          var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n          if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n          var days = [];\n          var day;\n          for (var i = 0; i < 42; i++) {\n            day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n            days.push({\n              date: day,\n              isToday: day.toDateString() === today,\n              label: formatDate(day, this.format),\n              selected: picker.$date && this.isSelected(day),\n              muted: day.getMonth() !== viewDate.month,\n              disabled: this.isDisabled(day)\n            });\n          }\n          scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n          scope.showLabels = true;\n          scope.labels = weekDaysLabelsHtml;\n          scope.rows = split(days, this.split);\n          scope.isTodayDisabled = this.isDisabled(new Date());\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n        },\n        isDisabled: function(date) {\n          var time = date.getTime();\n          if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n          if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n          if (options.disabledDateRanges) {\n            for (var i = 0; i < options.disabledDateRanges.length; i++) {\n              if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                return true;\n              }\n            }\n          }\n          return false;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualTime = picker.$date.getTime();\n          var newDate;\n          if (evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5); else if (evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5); else if (evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5); else if (evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'month',\n        format: options.monthFormat,\n        split: 4,\n        steps: {\n          year: 1\n        },\n        update: function(date, force) {\n          if (!this.built || date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var months = [];\n          var month;\n          for (var i = 0; i < 12; i++) {\n            month = new Date(viewDate.year, i, 1);\n            months.push({\n              date: month,\n              label: formatDate(month, this.format),\n              selected: picker.$isSelected(month),\n              disabled: this.isDisabled(month)\n            });\n          }\n          scope.title = formatDate(month, options.yearTitleFormat);\n          scope.showLabels = false;\n          scope.rows = split(months, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualMonth = picker.$date.getMonth();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setMonth(actualMonth - 1); else if (evt.keyCode === 38) newDate.setMonth(actualMonth - 4); else if (evt.keyCode === 39) newDate.setMonth(actualMonth + 1); else if (evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'year',\n        format: options.yearFormat,\n        split: 4,\n        steps: {\n          year: 12\n        },\n        update: function(date, force) {\n          if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n          var years = [];\n          var year;\n          for (var i = 0; i < 12; i++) {\n            year = new Date(firstYear + i, 0, 1);\n            years.push({\n              date: year,\n              label: formatDate(year, this.format),\n              selected: picker.$isSelected(year),\n              disabled: this.isDisabled(year)\n            });\n          }\n          scope.title = years[0].label + '-' + years[years.length - 1].label;\n          scope.showLabels = false;\n          scope.rows = split(years, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualYear = picker.$date.getFullYear();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setYear(actualYear - 1); else if (evt.keyCode === 38) newDate.setYear(actualYear - 4); else if (evt.keyCode === 39) newDate.setYear(actualYear + 1); else if (evt.keyCode === 40) newDate.setYear(actualYear + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      } ];\n      return {\n        views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n        viewDate: viewDate\n      };\n    };\n  } ];\n});\n","'use strict';\n\n// @BUG: following snippet won't compile correctly\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      templateUrl: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissible: true\n    };\n\n    this.$get = function ($modal, $timeout) {\n\n      function AlertFactory (config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissible]\n        $alert.$scope.dismissible = !!options.dismissible;\n        if (options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if (options.duration) {\n          $alert.show = function () {\n            show();\n            $timeout(function () {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function ($window, $sce, $alert) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsAlert) {\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n","\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.rangedatepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.pagination',\n  'mgcrea.ngStrap.sort'\n]);\n"],"sourceRoot":"/source/"}