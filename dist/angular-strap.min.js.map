{"version":3,"sources":["angular-strap.js","tooltip/tooltip.js","helpers/compiler.js","dropdown/dropdown.js","timepicker/timepicker.js","tab/tab.js","sort/sort.js","select/select.js","rangedatepicker/rangedatepicker.js","popover/popover.js","pagination/pagination.js","modal/modal.js","helpers/raf.js","helpers/parse-options.js","helpers/dimensions.js","helpers/debounce.js","helpers/date-parser.js","helpers/date-formatter.js","datepicker/datepicker.js","alert/alert.js","module.js"],"names":["prefixClass","undefined","templateUrl","options","cache","$templateCache","then","element","res","fetchTemplate","template","fetchPromises","module","$http","get","defaults","animation","data","this","compile","controller","console","controllerAs","resolve","copy","locals","bindToController","angular","forEach","value","isString","$injector","key","invoke","transformTemplate","identity","extend","$template","when","$q","all","templateEl","Error","findElement","contentTemplate","templates","contentEl","removeAttr","html","replace","next","remove","outerHTML","link","scope","trim","contents","linkFn","invokeCtrl","children","instance","ctrl","isObject","arguments","apply","bsCompilerService","$inject","target","provider","placement","titleTemplate","trigger","keyboard","show","title","type","delay","autoClose","bsEnabled","mouseDownPreventDefault","mouseDownStopPropagation","viewport","selector","padding","TooltipFactory","$get","promise","$tooltip","$bsCompiler","split","clearTimeout","hoverState","prefixEvent","hide","isFunction","onShow","leaveAnimateCallback","$emit","destroyTipElement","onHide","_tipToHide","evt","preventDefault","triggers","nodeName","on","isTouch","toggle","enter","unbindTriggerEvents","length","$onFocusElementMouseDown","off","i","bindKeyboardEvents","tipElement","$onKeyUp","unbindKeyboardEvents","_autoCloseEventsBinded","bindAutoCloseEvents","$timeout","$body","unbindAutoCloseEvents","stopEventPropagation","event","getPosition","$element","elRect","getBoundingClientRect","rect","p","width","height","top","left","dimensions","offset","el","scroll","outerDims","isBody","document","documentElement","scrollTop","body","prop","clientWidth","innerHeight","position","actualWidth","actualHeight","marginLeft","isNaN","setOffset","using","parseInt","props","css","right","marginTop","tip","offsetHeight","getViewportAdjustedDelta","delta","offsetWidth","isVertical","arrowDelta","replaceArrow","arrowOffsetPosition","viewportDimensions","$viewport","topEdgeOffset","bottomEdgeOffset","viewportPadding","test","leftEdgeOffset","rightEdgeOffset","dimension","isHorizontal","$arrow","timeout","$isShown","tipScope","$destroy","$$phase","$options","config","$promise","$scope","$new","$rootScope","toLowerCase","$id","attr","map","parseFloat","$sce","trustAsHtml","$setEnabled","$$postDigest","id","$hide","setEnabled","isEnabled","compileData","tipContainer","init","container","bindTriggerEvents","isElement","destroy","focus","isDefined","onBeforeShow","after","parent","lastChild","display","visibility","clonedElement","addClass","safeDigest","version","prepend","$$rAF","$applyPlacement","$animate","enterAnimateCallback","_blur","leave","onBeforeHide","autoPlace","autoToken","elementPosition","tipWidth","tipHeight","viewportPosition","originalPlacement","removeClass","tipPosition","getCalculatedOffset","applyPlacement","blur","stopPropagation","directive","$root","$digest","restrict","query","querySelectorAll","isNative","tooltip","transclusion","falseValueRegExp","$eval","bsKey","dataTarget","slice","hasOwnProperty","oldValue","$observe","newValue","bsTooltip","bsShow","$watch","match","setViewport","$on","useNative","timeType","timeFormat","timezone","modelTimeFormat","autoclose","minTime","maxTime","Infinity","hourStep","minuteStep","secondStep","roundDisplay","iconUp","iconDown","arrowBehavior","$timepicker","timepickerFactory","formatDate","format","viewDate","hour","startDate","getHours","meridian","coeff","selRange","select","end","start","setSelectionRange","isUndefined","collapse","selectionStart","moveStart","selectionEnd","moveEnd","focusElement","_init","parentScope","floorMinutes","time","floor","lang","selectedIndex","date","defaultDate","second","getSeconds","millisecond","getMilliseconds","$dateValue","hoursFormat","$dateFormatter","timeSeparator","minute","minutesFormat","secondsFormat","showSeconds","$iconUp","index","$moveIndex","$switchMeridian","switchMeridian","isDate","getMinutes","getTime","$build","$isBuilt","$render","keep","Date","setHours","setMinutes","setSeconds","$setViewValue","midIndex","hours","push","disabled","label","selected","minutes","$date","seconds","rows","$isDisabled","showAM","$isSelected","isAM","selectedTime","$arrowAction","$setTimeByStep","newDate","targetDate","$onMouseDown","targetEl","triggerHandler","$onKeyDown","keyCode","hoursLength","minutesLength","sepLength","lateralMove","count","selectRange","incr","isSeconds","isMeridian","secondsLength","createSelection","createTextRange","_destroy","_show","_hide","require","$window","navigator","userAgent","isMaxValid","isValid","parsedTime","isMinValid","setFullYear","$setValidity","$parsers","unshift","viewValue","getTimeFormattedString","timepicker","dateParser","$dateParser","validateAgainstMinMaxTime","ngModel","update","timezoneOffsetAdjust","$formatters","modelValue","NaN","parse","self","navClass","activeClass","$activeClass","$panes","$activePaneChangeListeners","$push","pane","$active","$attrs","$navClass","$remove","active","activeIndex","indexOf","splice","$setActive","name","fn","$pane","$tab","transclude","postLink","ngModelCtrl","bsTabsCtrl","attrs","bsActivePane","parsedBsActivePane","assign","$parse","controllers","render","$isActive","item","list","len","dataName","charAt","toUpperCase","currentTarget","$apply","orderBy","sortBy","onSort","clickColumn","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","SelectFactory","$select","$activeIndex","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$activate","activate","$isVisible","$selectNone","$matches","matches","$updateActiveIndex","a","b","onSelect","isArray","$modelValue","$getIndex","minLength","$viewValue","equals","anchor","anchorCandidate","$selectScrollFix","$isIE","stopImmediatePropagation","ua","activeElement","tagName","e","dataMultiple","inputEl","addEventListener","watchedOptions","parsedOptions","valuesFn","values","$match","filter","join","$isEmpty","connector","dateType","dateFormat","modelDateFormat","dayFormat","monthFormat","yearFormat","monthTitleFormat","yearTitleFormat","strictFormat","minDate","maxDate","minView","startWeek","daysOfWeekDisabled","iconLeft","iconRight","compare","RangeDatepickerFactory","$rangedatepicker","$iconLeft","$compare","$picker","today","$today","view","d","getDay","rangeList","t","getFullYear","getMonth","getDate","rangeType","$toggleCompare","$closePicker","$stopPropagation","sDate","eDate","disabledDateRanges","dateRanges","force","l","$setDisabledEl","$compareDateValue","compareStartDate","compareEndDate","endDate","flag","toDateString","$getCompare","$updateSelected","updateSelected","pristine","built","isDisabled","steps","year","getUTCFullYear","getUTCDate","UTC","month","$selectRange","cate","substr","day","pickerViews","validateAgainstMinMaxDate","parsedDate1","rangedatepicker","parsedDate2","getDateFormattedString","strict","getDateForAttribute","onlyCompare","getFormattedDate","obj","skey","ekey","date1","date2","toISOString","$dateRange","dateRange","size","arrays","mod","n","m","arr","weekDaysMin","weekdaysShort","weekDaysLabelsHtml","picker","build","that","firstDate","firstDateOffset","firstDayOfMonthOffset","days","getTimezoneOffset","daylightSavingAdjust","isToday","inRange","isInRange","muted","compareSelect","firstDayOfMonth","showLabels","labels","isSelected","currentDate","content","$popover","PopoverFactory","requestAnimationFrame","bsPopover","popover","calculateTotalPages","pageClass","totalPages","pagesLength","Math","itemsPerPage","makePage","number","text","isActive","max","getPages","currentPage","pages","half","ceil","$pagination","bsPaginationCtrl","totalItems","page","selectPage","onChange","noPrevious","noNext","selectPrevious","backdrop","zIndex","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","$modal","unbindBackdropEvents","modalElement","hideOnBackdropClick","backdropElement","preventEventDefault","modalScope","setScrollBar","scrollDiv","append","scrollbarWidth","fullWindowWidth","documentElementRect","bodyIsOverflowing","window","innerWidth","resetScrollBar","abs","backdropBaseZindex","$show","destroyModalElement","z-index","defaultPrevented","customClass","minor","backdropAnimation","bindBackdropEvents","which","lg","sm","setTimeout","modalClass","bsModal","modal","dot","cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","rafSupported","raf","timer","cancel","supported","$parseOptions","$values","regexp","valueName","keyName","displayFn","valueFn","ParseOptionsFactory","groupByFn","displayValue","factory","offsetParent","docElement","ownerDocument","outer","getComputedStyle","extra","currentStyle","boxRect","style","curPosition","curLeft","curCSSTop","curTop","calculatePosition","curElem","curCSSLeft","curOffset","call","offsetParentRect","offsetParentEl","offsetParentElement","func","immediate","args","context","callNow","leading","wait","trailing","$localeProvider","milliseconds","ParseDate","prototype","noop","array","indexOfCaseInsensitive","str","toString","DateParserFactory","proto","isNumeric","toDate","regExpMap","sss","$locale","dateFilter","mm","literalRegex","formatParts","escapedLiteralFormat","dateElements","keys","escapedFormat","isFormatStringLiteral","part","trimLiteralEscapeChars","dateRegexParts","escapeReservedSymbols","re","abstractRegex","buildDateParseRegex","setMapForFormat","buildDateAbstractRegex","buildDateParseValuesMap","Object","valuesMatch","keyIndex","valueKey","valuesFunctionMap","valueFunction","valuesRegex","exec","setFnMap","setMap","HH","H","hh","h","EEEE","EEE","DATETIME_FORMATS","SHORTDAY","dd","MMMM","MMM","SHORTMONTH","MM","M","DAY","yyyy","yy","y","MONTH","ss","s","setDate","setMonth","regex","$format","regExpForFormat","baseDate","formatRegex","formatSetMap","fromDate","getTimeForAttribute","undo","getDefaultLocale","getDatetimeFormat","splitTimeFormat","service","bodyEl","matchesSelector","DropdownFactory","$dropdown","onBodyClick","items","parentEl","hasClass","tAttrs","nextSibling","nodeType","parentNode","removeChild","dropdown","startView","hasToday","hasClear","DatepickerFactory","$datepicker","views","$iconRight","$hasToday","$selectPane","$hasClear","$toggleMode","$views","$mode","setMode","$setToday","$clear","updateDisabledDates","mode","getUTCMonth","shiftKey","altKey","onKeyDown","datepickerViews","previousValue","normalizeDateRanges","ranges","disabledRanges","datepicker","parsedDate","disabledDates","weekDaysLabels","concat","isTodayDisabled","months","lastDate","actualMonth","firstYear","years","actualYear","Array","setYear","duration","dismissible","AlertFactory","$alert","bsAlert","alert"],"mappings":"CAOA,SCIAA,EAAAA,EAAAC,GDHE,YA+6GA,SEx2GFC,GAAAC,EAAAD,EAAAA,EAAAA,EAAAA,EAAAA,GFk7GI,QEz0GJE,GAAAC,EAAAA,GF00GM,MEz0GNC,SAAAC,SAAAC,GAAAA,GAAAA,iBAAAA,IF40GI,QAASC,GAAcC,GACrB,MAAIC,GAAcD,GAAkBC,EAAcD,GGlgHxDE,EAAAF,GAAAG,EAAAC,IAAAJ,GAIAK,MAAAA,IACAC,KAAAA,SAAAR,GACAR,MAAAA,GAAAiB,OH86GIC,KEx2GJC,QAAAT,SAAAP,GACAiB,EAAAA,UAAAjB,UAAAiB,KAAAA,EAAAA,YACAC,QAAAC,KAAAA,oGACAnB,EAAAoB,YAAAC,EAAArB,SACAA,EAAAsB,SAAAD,GAEA,IAAAE,GAAAA,EAAAvB,YAKAwB,EAAAC,EAAAL,UAAAM,GACAT,EAAAU,EAAAD,WACAN,EAAAQ,EAAAA,aFq2GUR,EEp2GVI,QAAAH,KAAArB,EAAAoB,aACAA,EAAAS,QAAAD,KAAAA,EAAAE,YFq2GUC,EAAoB/B,EAAQ+B,mBAAqBP,QAAQQ,SACzDT,EAAmBvB,EAAQuB,gBEv1GrC,IAVAC,QAAAS,QAAAb,EAAAE,SAAAA,EAAAA,GAEAf,QAAAoB,SAAAD,GACAN,EAAAc,GAAAA,EAAAC,IAAA5B,GAEAa,EAAAc,GAAAA,EAAA5B,OAAAP,KFo2GMyB,QAAQS,OAAOb,EAASE,GE/1G9BtB,EACAoB,EAAAc,UAAAE,EAAAC,KAAAA,OAEA,CAAA,IAAAC,EFk2GQ,KAAM,IAAIC,OAAM,6CAFhBnB,GE/1GRoB,UAAAlC,EAAAP,GFk3GM,ME32GNC,GAAAyC,gBAEArB,EAAAc,UAAAE,EAAAC,KAAAjB,EAAAc,UAAA5B,EAAAN,EAAAyC,iBAAAA,KACAtC,SAAAuC,GACA,GAAAJ,GAAAd,QAAApB,QAAAsC,EAAA,GAKA,OAJAF,GAAAG,oBAAAL,EAAA,IAAAM,WAAAN,WACAM,KAAAA,EAAA,IAGA5C,EAAAD,GAAAA,aF01GUC,EAAQyC,kBEp1GlBrB,EAAAiB,UAAAjB,EAAAjB,KAAAiB,EAAAE,UAAAA,EAAAA,EAAAA,mBAAAA,KAAAA,SAAAA,GAEA,GAAAf,GAAAwB,QAAAA,QAAAT,EAAAY,IACAlC,EAAAwC,EAAA,sBAAAF,EAAA,IAAAM,WAAA,WAAAC,KAAAH,EAAA,GFs1GU,OEr1GVnC,GAAAA,aAAAuC,EAAAC,OAAAC,SFq1GiBV,EAAW,GAAGW,aE90G/Bb,EAAAC,IAAAjB,GAAAjB,KAAA,SAAAmB,GFk1GQ,GEj1GRA,GAAAA,EAAAA,EAAAA,UACAlB,GAAAA,OACA8C,EAAA3C,EAAA4C,QAAAA,cAAAA,kBFm1GQ,IE/0GR/C,GAAAa,QAAAb,QAAA,SAAAyC,KAAAtC,EAAA6C,QAAAC,WFg1GYC,EE/0GZC,EAAAA,EFg1GQ,QACEjC,OE/0GVE,EFg1GUpB,QAASA,EACT8C,KE90GV,SAAA1B,GFg1GY,GADAF,EE70GZlB,OAAA+C,EACA/C,EAAAoD,CAEA,GAAArC,GAAAA,EAAAF,EAAAK,GAAA,EACA6B,IF60GgB3B,QAAQS,OAAOsB,EAAWE,SAAUnC,EEz0GpD,IAAAoC,GAAAJ,QAAAK,SAAAC,GAAAA,EAAAA,GF40GcxD,GAAQU,KAAK,0BAA2B4C,GACxCtD,EAAQoD,WAAW1C,KAAK,0BAA2B4C,GAC/CvC,IACFgC,EAAMhC,GAAgBuC,GAG1B,MAAOJ,GAAOO,MAAM,KAAMD,eAQlC,IAAIpD,MA3/GNsD,ECIFC,SAAA,KAAA,QAAA,YAAA,WAAA,cAAA,kBDHEvC,QCIFwC,OAAA,0BAAA,sBAAA,sCAAAC,SAAA,WAAA,WDHI,GCIJC,GAAAnD,KAAAH,UACAb,UAAAA,UACAQ,YAAA,GACA4D,YAAAA,UACAC,YAAA,UACAC,WAAA,EACAxB,QAAA,EACAyB,UAAA,MACAC,YAAA,2BACAC,SAAA,GACAC,eAAA,EACAC,QAAAA,cACAC,UAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAC,MAAAA,GDHMN,KCINO,GDHMN,MCINO,EDHMN,WAAW,EACXC,WAAW,ECMjB5D,yBAAA,EAEA8D,0BAAA,EACAC,UACAC,SAAAvD,OAEAwD,QAAAC,GDJIlE,MCUJmE,MAAAC,UAAAC,aAAAC,cAAArE,KAAAhB,iBAAAA,QAAAA,WAAAA,OAAAA,aAAAA,QAAAA,WAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GDNM,QCWNsF,GAAAb,EAAAa,GD6IQ,QC2ERC,KACAC,EAAAA,MAAAA,EAAAC,YAAA,QAAAL,GACA5D,QAAAxB,UAAAyE,EAAAzE,SAAA0F,QAAAC,WAAA3F,EAAA4F,SACA5F,EAAAoF,OAAAA,GDpCQ,QC+FRS,KAQAT,GDtGUjC,EAAM2C,MAAM9F,EAAQyF,YAAc,QAASL,GCkGrDW,QAAAA,UAAAA,EAAAA,SAAAA,QAAAA,WAAAA,EAAAA,SDhGY/F,EAAQgG,OAAOZ,GCoG3BA,IAAAa,EAAAC,CACA,GAAAA,GAAA,UAAAlG,EAAAoE,QAAA8B,MAAAC,GAAAA,GAAAA,MACAJ,MDlBQ,QC0HR3F,KDzHU,GC0HVgG,GAAAC,EAAAjC,QAAAkB,MAAAlB,IDzHU5C,SC0HVpB,QAAAkG,EAAAC,SAAAnC,GDzH4B,UAAZA,GAAmC,gBAAZA,EACzBhE,EAAQkG,GAAGlC,EAASgB,EAASoB,QACR,WAAZpC,IACThE,EAAQkG,GAAe,UAAZlC,EAAsB,aAAe,QAASgB,EAASqB,OC4HhFrG,EAAAsG,GAAAA,UAAAA,EAAAA,aAAAA,OAAAA,EAAAA,OACA1G,WAAAoG,GAAA,UAAAd,GACAlF,EAAAgG,GAAAA,EAAAO,aAAA,YAAAvB,EAAAwB,6BDtHQ,QC2HRxG,KDzHU,IC2HV,GADAA,GAAAyG,EAAAzC,QAAAkB,MAAA,KACAe,EAAAA,EAAAM,OAAAG,KAAA1C,CD1HY,GC2HZhE,GAAAyG,EAAAN,ED1H4B,WAAZnC,GAAmC,gBAAZA,EACzBhE,EAAQyG,IAAIzC,EAASgB,EAASoB,QACT,WAAZpC,IACThE,EAAQyG,IAAgB,UAAZzC,EAAsB,aAAe,QAASgB,EAASqB,OC6HjFrG,EAAA2G,IAAAA,UAAAA,EAAAA,aAAAA,OAAAA,EAAAA,OACA3C,WAAApE,GAAA,UAAAoE,GACA4C,EAAAV,IAAAC,EAAAnB,aAAA6B,YAAAA,EAAAA,4BAMA,QAAAC,KACA,UAAAlH,EAAAoE,QACA4C,EAAAH,GAAAA,QAAAzB,EAAAA,UAEAhF,EAAAyG,GAAAA,QAAAzB,EAAAA,eAIA,QAAA+B,KACAC,UAAApH,EAAAoH,QAGAC,EAAAR,IAAA,QAAAzB,EAAA6B,UAKAK,EAAAhB,IAAA,QAAAlB,EAAAM,eAMA,QAAA6B,KACAF,EAAAF,WACAH,EAAAH,GAAAA,QAAAW,GACAF,EAAAT,GAAAA,QAAAzB,EAAAA,MACA+B,GAAA,GDpIa,GAAG,GCwIhB,QAAAK,KACAC,IDrIYT,EAAWH,IAAI,QAASW,GC0IpCF,EAAAI,IAAAA,QAAAC,EAAAA,MACAA,GAAA3H,GDtIQ,QC2IR4H,GAAAC,GACAJ,EAAAK,kBDzIQ,QCgJRC,GAAAA,GD/IUJ,EAAWA,GAAa3H,EAAQgE,QAAU5D,CCmJpD,IAAA0H,GAAAE,EAAAA,GAEAF,EAAAA,SAAAtG,EAAAA,QAAAwG,EAAAJ,EAAAA,wBAAAK,IDhJU,KAAK,GAAIF,KAAKH,GACZE,EAAKC,GAAKH,EAAOG,ECiJ7B,QAAAG,EAAAF,QAAAG,EAAA3G,QAAAS,UAAA6F,GAAAM,MAAAA,EAAAC,MAAAC,EAAAA,KACAC,OAAAA,EAAAA,OAAAA,EAAAA,MACA,IAAAC,GAAAA,GAAAR,IAAAA,EAAAC,KAAAA,GAAAG,EAAAC,OAAAC,GAEAC,GDxIYA,OAAQE,EAASC,EAASC,gBAAgBC,WAAaF,EAASG,KAAKD,UAAYjB,EAASmB,KAAK,cAAgB,GC4I3HT,EAAAA,GACAL,MAAA1C,EAAApB,gBAAA6E,YAEAd,OAAA3C,EAAA0D,aACA,ID1IU,OC2IVX,SAAAA,UAAAA,EAAAA,EAAAA,EAAAA,GDzIQ,QC2IRF,GAAAc,EAAAjB,EAAAA,EAAAA,GD1IU,GAAIK,GC4Id/C,EAAApB,EAAAoB,MAAA,ID1IU,QAAQA,EAAM,IC2IxB,IAAA,QACA+C,GACAH,IAAAe,EAAAf,IAAAe,EAAAhB,OAAAA,EAAAA,EAAAA,EACAE,KAAAc,EAAAd,KAAAc,EAAAjB,MAEA,MACA,KAAA,SACAK,GACAH,IAAAe,EAAAf,IAAAe,EAAAhB,OACAE,KAAAc,EAAAd,KAAAe,EAAAA,MAAAA,EAAAA,EAAAA,EAEA,MACA,KAAA,OACAb,GACAH,IAAAe,EAAAf,IAAAiB,EAAAA,OAAAA,EAAAA,EAAAA,EACAhB,KAAAc,EAAAd,KAAAc,EAEA,MAGA,SACAZ,GDxIcH,IAAKe,EAASf,IAAMiB,EC4IlC7D,KAAA2D,EAAAd,KAAA7C,EAAA0C,MAAA,EAAAkB,EAAA,GDvIU,IC2IV5D,EAAA,GD1IY,MAAO+C,EAET,IC0IVF,QAAAE,EAAAA,IAAAY,WAAAA,EAAAd,GDzIY,OC0IZ7C,EAAA,IDzIa,IAAK,OC0IlB+C,EAAAF,KAAAc,EAAAd,IACA,MDvIa,KCyIb,QACAE,EAAA/C,KAAA2D,EAAAd,KAAAc,EAAAjB,MAAAkB,MAKAb,IAAAY,SAAAf,EAAAe,IAAAf,UAAAA,EAAAA,GDvIY,OCwIZ5C,EAAA,IDvIa,IAAK,MCwIlB+C,EAAAH,IAAAe,EAAAf,IAAAiB,EAAAF,EAAAhB,MACA,MDrIa,KAAK,SCyIlBI,EAAAA,IAAAA,EAAAA,IAUA,MAAAe,GDzIQ,QC6IRC,GAAAD,EAAAA,GAEAf,GAAAA,GAAAH,EAAAA,GACAG,EAAAF,EAAAE,YAIAD,EAAAkB,EAAAA,aACAC,EAAAC,SAAAC,EAAAA,IAAAA,EAAAA,cAAAA,IACAzC,EAAA0C,SAAAA,EAAAA,IAAAA,EAAAA,eAAAA,GDhJcL,OCiJdnB,KAAAuB,EAAAvB,GDhJcmB,MCiJdlB,KAAAsB,EAAAtB,GDhJUE,ECiJVsB,IAAAtB,EAAAH,IAAA0B,EDhJUvB,EAAOF,KAAOE,EAAOF,KAAOiB,EAC5BhB,EAAWkB,UAAUO,EAAKrI,QAAQS,QAChCsH,MCiJZlB,SAAAoB,GAGAP,EAAAA,KACAC,IAAAA,KAAAA,MAAAU,EAAAC,KAAAA,KAEA5F,KAAAA,KAAAA,MAAAuF,EAAAN,MAAAA,KACAd,MAAAH,OAOAG,GAAA0B,EAEA,IAAAC,GAAAH,EAAAI,YACA5B,EAAA2B,EAAA7B,YAKAC,IAJA,QDzJclE,GCyJdiF,IAAAlB,IACAI,EAAAH,IAAAA,EAAAA,IAAAA,EAAAA,IAGAE,8CAAAC,KAAAA,GAAAD,CAEA,GAAA4B,GAAAD,EAAA7F,EAAAmE,EAAAa,EAAAC,EAUA,IATAa,EAAAE,KACA7B,EAAA8B,MAAAA,EAAAD,KAGAE,EAAAA,KAAAD,EAAAA,ID1JU/B,EAAWkB,UAAUO,EAAKxB,GC+JpC,wBAAA0B,KAAA7F,GAAA+E,CACA,GAAAe,GAAAA,aAAAA,KAAAA,GAAA9B,EAAAgC,EAAA,EAAAF,EAAA7B,KAAAH,EAAAkB,EAAA,EAAAc,EAAA9B,IAAAD,EAAAkB,EAAAhB,EAAA+B,EAAA,cAAA,cD3JYE,GAAaD,EAAYN,EAAIQ,GAAsBH,KAGvD,QC4JRI,GAAA5C,EAAAtC,EAAAmF,EAAAA,GAEA,GAAAP,IACA9B,IAAAsC,EACArC,KAAAsC,ED3JU,KC6JVT,EAAA9B,UAAAoC,MAAAA,ED5JU,IAAII,GC6JdD,EAAAA,UAAAH,EAAAA,SAAAA,SAAAA,EACAN,EAAAM,EAAApC,EAAAoC,UD5JU,IAAI,aAAaK,KAAKzG,GAAY,CAChC,GAAIsG,GC6JhBvB,EAAAf,IAAAwC,EAAAJ,EAAA/B,OACAqC,EAAA3B,EAAAd,IAAAuC,EAAAA,EAAAA,OAAAA,CACAG,GAAAA,EAAAH,IACAV,EAAAY,IAAAA,EAAAN,IAAAA,EACAnC,EAAAmC,EAAAM,IAAAA,EAAAA,SD5JcZ,EC6Jd9B,IAAA2C,EAAAP,IAAAA,EAAArC,OAAAwC,OD3JiB,CACL,GAAIG,GAAiB3B,EAASd,KAAOuC,EC+JjDG,EAAAb,EAAAA,KAAAA,EAAAA,CD7JgBY,GAAiBN,EAAmBnC,KCgKpD6B,EAAAI,KAAAA,EAAAU,KAAAC,EACAvI,EAAA8H,EAAAX,QAEAqB,EAAAtB,KAAAqB,EAAA5C,KAAAmC,EAAAQ,MAAAA,GAMAvF,MAAAA,GDjKQ,QCoKRvF,GAAA0E,EAAAoG,EAAAC,GDnKU,GCoKVxD,GAAAA,EAAAA,yBAAAA,EAAAA,GDnKUyD,GAAOtB,IAAIqB,EAAe,OAAS,MAAO,IAAM,EAAIf,EAAQc,GAAa,KAAKpB,IAAIqB,EAAe,MAAQ,OAAQ,IAEnH,QCqKR7D,KDpKU3B,aAAa0F,GACT7F,EAAS8F,UAA2B,OAAflE,ICuKnCmE,EAAAzG,WACAyG,IDpKgBnL,EAAQqE,UCwKxB2C,KDpKcmE,IACFA,EAASC,WCyKrBD,EAAA/F,MAMA4B,IAEA7D,EAAAkI,SD5KYrE,EAAa5B,EAASuC,SAAW,MAvgBrC,GCWR3H,MAAAsE,EAAAgB,EAAAgG,SAAA9J,QAAAS,UAAArB,EAAA2K,GAAA7F,EAAAJ,EAAAkG,SAAAnG,EAAArE,QAAAhB,GDRYmD,ECQZiC,EAAAqG,OAAAzL,EAAAmD,OAAAnD,EAAAmD,MAAAuI,QAAAC,EAAAD,ODPYrF,EAAWjG,EAAQ,GAAGiG,SAASuF,aCa3CxG,IAAAA,EAAAyG,OAAA7L,QAAAI,SAAA0L,EAAArH,OAAA,CAGA,GAAAzE,GAAAuE,EAAAE,MAAAa,MAAA,KAAAyG,IAAAC,WACA7I,GAAAoB,MAAA0H,EAAAC,OAAAlM,GDbYsE,KAAMgB,EAAM,GCiBxBnC,KAAAgJ,EAAAA,IACAhJ,EAAAiJ,GDdQhH,EAASyG,IAAM7L,EAAQqM,IAAMjM,EAAQ0L,KAAK,OAAS,GAC/C9L,EAAQuE,QCiBpBpB,EAAAmJ,MAAAL,EAAAC,YAAAlM,EAAAuE,QDdQpB,ECgBRiC,YAAAM,SAAAA,GDfUvC,EAAMiJ,aAAa,WACjBhH,EAASmH,WAAWC,MAGxBrJ,ECgBRiC,MAAAd,WDfUnB,EAAMiJ,aAAa,WACjBhH,EAASM,UAGbvC,ECgBRiC,MAAAoB,WDfUrD,EAAMiJ,aAAa,WACjBhH,EAASd,UCsBrBnB,EAAAqC,QAAAA,WAGArC,EAAAsJ,aAAAA,WACAzF,EAAAA,YAGA7B,EAAAhF,SAAAgD,EAAArC,UAAAA,CDpBQ,ICqBR2L,GACArH,EDpBYqH,ECuBZrH,EAGAsH,EACA1M,CDvBQmF,GCwBRb,KAAAtE,SAAAyE,GDvBUgI,ECwBVzM,EDvBUoF,EAASuH,SAEXvH,EC+BRpF,KAAA4M,WACAF,EAAAA,OAAAtM,QAAAA,SAAAA,EAAAA,SD9BYJ,EC+BZyE,OACAiI,KAAAA,EAAA1M,MD9Bc0F,KC+Bd1F,EAAAA,QAKA6M,SAAAA,EAAAA,UAGAH,EAAA1I,EACAA,QAAAxC,UAAAsL,EAAA9M,WDlCY0M,EAAe1M,EAAQ4M,UCsCnC5M,EAAA4M,YACAzJ,EAAAiJ,EAAApM,EAAA4M,YDnCUC,IACI7M,ECqCdgE,SDpCYhE,ECqCZoF,OAAAd,QAAAA,UAAAA,EAAAA,QAAAA,EAAAA,OAAAA,EAAAA,EAAAA,SDnCctE,EAAQsE,MACVnB,EAAMiJ,aAAa,WACO,UAApBpM,EAAQoE,QCwC1BgB,EAAA2H,GAAAC,QAMAjH,EAAAA,UDtCQX,ECgDRI,QAAA,WACAkB,ID/CUX,IACA5C,EAAMiI,YAERhG,ECiDRI,MAAAA,WAKAJ,MDrDUG,cCiDVd,GDhDUe,EAAa,KCoDvBJ,EAAAd,OAAAtE,EAAAyE,MAAAH,UAIA2G,EAAAzJ,WAAAyL,WACAC,OAAAlN,GAAAoF,EAAAA,QDnDapF,EAAQyE,MAAMH,OC+C3BtE,EAAA2E,QD7CQS,ECoDR+H,KAAAA,WACA,GAAAnN,EAAA4M,YAAAxH,EAAA8F,SAAA,CDnDU/H,ECoDViK,MAAAV,EAAAA,YAAAA,eAAAA,GACAlL,QAAAkL,UAAAW,EAAAA,eAAA7L,QAAAmE,WAAA3F,EAAAkN,eDnDYlN,ECoDZmN,aAAA/M,EDlDU,ICoDV+M,GDnDcA,CACAnN,GCoDd4M,WACAQ,EAAAV,EDlDcS,ECmDdA,EAAA/M,GAAAA,UDnDsBoB,QAAQpB,QAAQsM,EAAa,GAAGW,WC0DtDjI,OAKA8C,EAAA,KAAAC,EAAA/H,GAAAkN,GAAAvH,IDtDUoF,ECsDVoC,EAAA9B,OAAAC,ODrDU1E,EAAa5B,EAASuC,SAAW8E,EAAYvJ,KAAKiI,EAAU,SAASqC,EAAerK,MCwD9F6D,EAAAhH,KAEAkI,IAAAlI,UAEAmI,KAAAnI,UAKA2J,MAAAwD,OACAA,QAAAA,QD5DYI,WC6DZ,WD3DcvN,EAAQa,WAAWmG,EAAWyG,SAASzN,EAAQa,WC+D7DuE,EAAA8F,MAAAA,EAAAA,SAAAlL,EAAAH,YAAA,IAAAG,EAAAwE,MACAkJ,EAAAvK,aAAAA,EAAAA,SAAAA,EAAAA,aAGAiC,EAKA+H,EAAA3L,MAAAmM,GDlEYP,ECoEZQ,QAAA5G,GDlEU5B,EAAS8F,SAAW/H,EAAM+H,UAAW,ECqE/CwC,EAAAvK,GAEA0K,EAAAC,kBAEAtM,QAAAwF,QAAAA,OAAA0C,EDrEYqE,ECqEZR,MAAAvG,EAAAoG,EAAAD,EAAAa,GAGAD,EAAA/N,MAAAqE,EAAA+I,EAAAD,GAAAhN,KAAA6N,GDpEUN,ECsEVtI,GDrEUyI,EAAM,WCuEhB9G,GAAAA,EAAAA,KDrEcwG,WAAY,YCyE1BvN,EAAA0E,WACA0C,UAAAA,EAAAA,SDtEgBhC,EAAS4H,QC2EzBjG,OAGA/G,EAAA4F,WDxEYwB,MASJhC,EC2ERI,MAAAA,WDxEU,MAFAD,cC2EVG,GD1EUF,EAAa,MC4EvBxF,EAAAyE,OAAAiB,EAAAA,MAAAA,UAKAuF,EAAAhF,WAAAA,WACA,QAAAb,GAEAA,EAAAA,QAEApF,EAAAwB,MAAAyL,ODpFmB7H,EAASM,OAQpB,IAAIuI,GCiFZA,CD/EQ7I,GCmFRa,KAAAe,SAAAA,GAIAxF,EAAAmM,WDrFUxK,ECsFV4K,MAAAG,EAAAlH,YAAAnB,eAAAA,GDrFcrE,QCsFdyL,UAAAjN,EAAAmO,eAAA3M,QAAAmE,WAAA3F,EAAAmO,eACAJ,EAAAA,aAAA/G,GAGA5B,EAAAA,EACAsI,EAAAvK,EAGAnD,QAAAqE,QAAAA,OAAA2C,EACAE,EAAAA,MAAAA,EAAAA,GAGA6G,EAAA/N,MAAA0E,GAAAsC,KAAAA,GDxFU5B,EAAS8F,SAAW/H,EAAM+H,UAAW,EACrCwC,EAAWvK,GC4FrBnD,EAAA6F,UAAAA,OAAAA,GACA1C,IAEAnD,EAAAgG,WAAAZ,OAAAA,GD1FYmC,MAeJnC,ECgGRA,OAAAqB,SAAAA,GD/FcP,GACFA,EAAIC,iBCmGhBa,EAAAkE,SDhGY9F,EAAS8I,QCoGrBlO,EAAA2E,SD/FQS,ECmGRpF,MAAA8E,WDlGUkC,EAAW,GAAGgG,SAEhB5H,ECsGR4B,WAAA,SAAAwF,GAGAxM,EAAAkE,UAAAlE,GDtGQoF,ECwGRgJ,YAAAC,SAAA1D,GAEA3K,EAAAoO,SAAAtJ,GDvGQM,EAAS0I,gBAAkB,WC6GnC9G,GAAAA,EAAAA,CAIA,GAAAsH,GAAAA,EAAA5G,UACA6G,EAAAvH,eACAwH,EAAAxH,EAAAA,KAAA8B,EAGA1D,KAGAlB,EAAAkK,EAAAtL,QAAAuL,EAAA,KAAAzN,EAAAsD,WDjHU8C,ECmHVyH,SAAAA,EAAA/G,UDlHU,ICoHV4G,GAAAI,IACAxK,EAAAA,EAAAwK,KAAAA,eDnHcF,ECoHdxH,EAAA0H,KAAAA,eDlHU,IADAtJ,ECoHVlB,UAAAwK,EAAAA,UAAA5L,EAAA9C,EAAA8E,SAAAC,UAAA/E,EAAA8E,UDnHcsJ,EAAW,CCsHzB,GAAAM,GAAAA,EACAxK,EAAAA,EAAAkB,EAAAmF,UDpHgB,UCqHhBI,KAAA+D,IAAAA,EAAAJ,OAAA3E,EAAA4E,EAAAE,OACAvK,EAAAA,EAAApB,QAAA,SAAA,ODpHuB,MAAM6H,KAAK+D,IAAsBJ,EAAgBpG,IAAMsG,EAAYC,EAAiBvG,MCuH3GlB,EAAA2H,EAAAD,QAAAA,MAAAjB,WAIAmB,OAAAA,KAAAC,IAAA3K,EAAAoK,KAAAA,EAAAC,EAAAC,KACAM,EAAAF,EAAAA,QAAA1K,OAAAA,SDvHuB,QAAQyG,KAAK+D,IAAsBJ,EAAgB3E,MAAQ4E,EAAWE,EAAiBzG,QC0H9G5C,EAAA6B,EAAAnE,QAAAoD,QAAAA,SAEAd,EAAAM,YAAAA,GAAAA,SAAAA,GDvHU,GAAIkJ,GAAcC,EAAoB3K,EAAWoK,EAAiBC,EAAUC,EAC5EM,GAAeF,EAAa1K,KAE9BkB,EC0HRc,SAAA,SAAAA,GACA6I,KAAA3O,EAAAA,OAAA2O,EAAAA,WACA7I,EAAA8I,ODzHY9I,EAAI8I,oBAGR5J,EC2HRpF,cAAA4E,SAAAA,GAAAuB,KAAAD,EAAAC,QDzHY/F,EAAQ,GAAG2O,OC0HvB7I,EAAAlG,oBDtHQoF,ECwHRA,yBAAA,SAAAc,GACA9F,EAAAwE,yBDvHYsB,EAAIC,iBAEFnG,EAAQ6E,0BACVqB,EAAI8I,kBC4HhB5I,EAAAA,SACA5E,EAAAC,GAAAA,ODxHYrB,EC0HZA,GAAAkG,QD5EQ,IAAIa,IAAyB,CAuM7B,OAAO/B,GAET,QAASsI,GAAWvK,GCqL1B8L,EAAAA,SAAA9L,EAAA+L,OAAA/L,EAAA+L,MAAA7D,SAAAlI,EAAAgM,UAGAC,QAAAA,GAAAC,EAAAjP,GACA+C,MAAA3B,SAAApB,SAAAA,GAAAsI,GAAA4G,iBAAAD,IDzsBM,GCUNE,GAAAnK,6BAAAjC,KAAAnD,EAAAmD,UAAAuI,WAEAnF,EAAAF,eAAAA,GAAAuF,UAAAA,EACAtE,EAAAtH,QAAAyE,QAAAjD,EAAAG,SDygBM,OCsLN6N,ODpLKP,UCsLL9L,aAAAA,UAAAA,YAAAA,OAAAA,SAAAA,WAAAA,QAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GDrLI,OACEiM,SCqLN3N,MDpLM0B,OCqLN,EDpLMD,KAAM,SAAkBC,EAAO/C,EAAS0L,EAAM2D,GCwLpD,GAAAC,GACAlO,GACA2B,MAAA3B,EDrLQA,SAAQC,SAAU,WAAY,cAAe,aAAc,eAAgB,gBAAiB,YAAa,YAAa,QAAS,UAAW,OAAQ,YAAa,oBAAqB,OAAQ,cAAe,MAAQ,SAASI,GACtNL,QAAQyL,UAAUnB,EAAKjK,MAAO7B,EAAQ6B,GAAOiK,EAAKjK,KAExD,ICyLR6N,GAAA7N,eDxLQL,SCyLRA,SAAAyL,OAAAnB,aAAA,SAAAjK,GACA7B,QAAA6B,UAAAsB,EAAAwM,KAAAC,EAAAA,KAAAA,EAAAA,MDxLY5P,EAAQ6B,IAAO,KC8L3BL,QAAAA,SAAAyL,eAAA4C,SAAA,eAAA,UAAA,SAAAhO,GACA,GAAA6N,GAAAA,KAAAA,EAAA/E,OAAAkF,GAAAA,cAAAhO,EAAAiO,MAAA,EACA9P,SAAAgE,UAAA8H,EAAA8D,MD1LY5P,EC2LZ6B,GAAAsB,EAAAwM,MAAA7D,EAAA8D,MDxLQ,IAAIC,GAAazP,EAAQ0L,KAAK,cC+LtCtK,SAAAuO,UAAAA,KACA5M,EAAAwH,KAAAkF,GD7LY7P,EAAQgE,QAAS,ECkM7BhE,EAAAwB,OAAAyL,GAGA9J,EAAA3B,eAAAwO,WD/LU7M,ECgMV0K,MAAA,ID9LQ/B,EAAKmE,SAAS,QAAS,SAASC,GAC9B,GAAI1O,QAAQyL,UAAUiD,KAAc/M,EAAM4M,eAAe,SAAU,CACjE,GAAIC,GAAW7M,EAAMoB,KACrBpB,GAAMoB,MAAQ0H,EAAKC,YAAYgE,GCkM3CD,QAAAhD,UAAA+C,IACAE,EAAAA,WACAxK,GAAAA,EAAAA,uBD5LQoG,ECmMRmE,SAAAzO,WAAA0O,SAAAA,GACA1O,GAAAS,EAAAkB,UDlMYqM,ECmMZ9J,SAGAoG,EAAAtK,WDlMU2B,ECmMV0K,OAAA/B,EAAAqE,UAAA,SAAAD,EAAAF,GACAxO,QAAAgO,SAAAA,GDlMchO,QAAQS,OAAOkB,EAAO+M,GCqMpC/M,EAAAoB,MAAA2L,EAIApE,QAAAsE,UAAAJ,IACA7M,EAAAkN,WACAb,GAAAhO,EAAAyL,sBDlMa,GAEDnB,ECqMZ0D,QDpMUrM,EAAMkN,OAAOvE,EAAKsE,OAAQ,SAASF,EAAUF,GACtCR,GAAYhO,QAAQyL,UAAUiD,KAC/B1O,QAAQG,SAASuO,KAAWA,IAAaA,EAASI,MAAM,wBCwMxExE,KAAA,EACA3I,EAAAkN,OAGAb,EAAAhO,UDpMYsK,ECwMZ0D,WDvMUrM,EAAMkN,OAAOvE,EAAKnH,UAAW,SAASuL,EAAUF,GACzCR,GAAYhO,QAAQyL,UAAUiD,KAC/B1O,QAAQG,SAASuO,KAAWA,IAAaA,EAASI,MAAM,0BC2MxExE,KAAA,EACA3I,EAAAkN,YAAAvL,GAEA0K,EAAAe,YAAAL,MAQA/M,EAAAqN,UACArN,EAAAqM,OAAAA,EAAAA,SAAAzC,SAAAA,GACA/M,GAAAwB,QAAAyL,UAAAiD,IACAV,EAAAe,YAAAL,KD3MQV,EAAUpK,EAAShF,EAASJ,GAC5BmD,EAAMqN,IAAI,WAAY,WIzpB9B/P,GAAA+O,EAAAzC,UACAnM,EAAAG,KACAF,EAAA,YJ+pBEW,QI1pBF4C,OAAA,6BAAA,oCAAA,uCAAA,2BAAAH,SAAA,cAAA,WJ2pBI,GI1pBJ2I,GAAA7L,KAAAH,UACAyD,UAAA,UACAxB,YAAA,OACA4B,YAAA,aACAgM,UAAA,cACAC,YAAA,iCACAC,QAAAA,QACAC,WAAA,EACAC,UAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAC,WAAAC,EACAtK,SAAA,OACAuK,WAAA,YACAC,SAAAA,KACAC,gBAAA,KACAC,WAAAA,EACAC,UAAAL,EAAAA,GACAM,UAAAN,EAAAA,GACAO,OAAAA,EJ2pBMN,SAAU,EIzpBhBnQ,WAAA,EACAqQ,WAAA7B,EACA8B,cAAA,EACAC,OAAA1Q,cJ2pBM2Q,SI1pBN3Q,gBJ2pBM4Q,cAAe,QAEjBzQ,MI1pBJmE,MAAAuM,UAAArM,YAAAhF,aAAA6B,OAAArB,iBAAA2K,WAAAA,WAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GJgqBM,QI1pBNmG,GAAAC,EAAAA,EAAAC,GASA,QAAAC,GAAAA,GACAC,GAAAA,GAAAC,IAAAC,EAAAA,UACAC,OAAAA,IAAAF,MAAAA,KAAAC,MAAAA,EAAAA,UAAAE,GAAAA,GJu4BQ,QI1pBRC,GAAAC,EAAAA,GJ2pBU,GAAIC,GI1pBdC,EAAAlS,CJ2pBU,II1pBVA,EAAA,GAAAmS,gBAAAD,CJ2pBY,GAAIH,GI1pBhB3Q,EAAAgR,GAAAA,iBACApS,GAAAqS,UAAAC,GACAtS,EAAAuS,UAAAC,YAAAP,GJ2pBYF,EAASU,QAAQ,YAAaR,GAC9BF,EAASC,aIzpBrBU,GAAAA,GAAAA,kBACA1S,EAAA,GAAA4M,kBAAAA,EAAAA,GJ2pBqBxL,QAAQgR,YAAYpS,EAAQ,GAAGsS,kBIzpBpDK,EAAAtB,GAAAA,eAAA9E,EACA8E,EAAA9E,GAAAA,aAAA0F,GJ6pBQ,QI1pBRjS,KJ2pBUA,EI1pBV,GAAA4M,QJmZQ,GAAIyE,GAAcrM,EAAShF,EAASoB,QAAQS,UAAWrB,EAAU2K,IIzpBzEyH,EAAAC,EAAAC,MACAlT,EAAAyR,EAAAzR,SACAmD,EAAAsO,EAAA0B,OJ2pBYC,EAAOpT,EAAQoT,KIzpB3BC,EAAAA,SAAAC,EAAA1B,EAAAhB,GACA,MAAA2C,GAAAvT,WAAAqR,EAAA4B,EAAAA,EAAArC,IAMA4C,EAAAC,EACAC,EAAA3B,EAAA4B,aAAAA,EAAAA,GAAAA,OAAAA,GAAAA,MJ2pBY5B,EAAY9Q,EAAW2S,YAAcL,EIzpBjD3B,GACAE,KAAA+B,EAAAC,WACA7B,SAAA8B,EAAAD,WAAAC,GACAC,OAAAC,EAAAH,aACAN,OAAAU,EAAAJ,aACAJ,YAAAS,EAAAL,mBAEA3Q,EAAAiR,EAAA9C,kBAAAA,EAAAA,WAAAA,GACAnO,EAAAnD,EAAAuR,YAAAA,GACApO,EAAA2Q,EAAAO,cAAAA,GACA5C,EAAAW,EAAAiC,cAAAA,GJ2pBYH,EAAgBJ,EAAeI,cAActC,GIzpBzDzO,EAAAmR,EAAA5S,YAAA2S,GACA5C,EAAAA,EAAA/P,OAAA2S,EJ2pBQlR,GAAMiR,QAAUpU,EAAQsR,OIzpBhCnO,EAAAoR,UAAAA,EAAAhD,SJ2pBQpO,EI1pBRsO,QAAA+C,SAAAA,EAAAlB,GJ2pBU7B,EAAYW,OAAOkB,EAAMe,IAE3BlR,EI1pBR3B,WAAAiT,SAAAnB,EAAAjK,GJ2pBUoI,EI1pBVA,WAAA6B,EAAAA,IJ4pBQnQ,EI1pBR2O,gBAAAE,SAAAA,GJ2pBUP,EI1pBV6B,eAAAoB,IJ4pBQjD,EI1pBRiC,OAAAJ,SAAAK,GJ2pBcnS,QAAQiT,OAAOnB,KAAUjK,MAAMiK,EAAKqB,YIzpBlDlD,EAAAmD,MAAAA,EJ2pBYpT,QI1pBZS,OAAAwP,GACAA,KAAAA,EAAAmD,WJ2pBcZ,OAAQV,EAAKoB,aACblB,OAAQF,EAAKG,aIzpB3BhC,YAAAW,EAAAuB,oBAEA1S,EAAA2S,UJ2pBsBnC,EAAYoD,UIzpBlCpD,EAAAgD,UJ6pBQhD,EI1pBRxQ,OAAA6T,SAAAA,EAAAA,EAAAA,KACA9U,EAAA8Q,YAAAiE,MAAA9T,EAAA2S,WAAAe,cACAtN,EAAAuM,WAAA,UAAA5T,EAAAuT,YAAA,GAAAyB,MAAA,GAAAA,MAAA,KAAA,EAAA,IJ4pBexT,QAAQiT,OAAOnB,KAAOA,EAAO,GAAI0B,MAAK1B,IAC7B,IAAVe,EAAapT,EAAW2S,WAAWqB,SAAS3B,EAAKtB,YAAgC,IAAVqC,EAAapT,EAAW2S,WAAWsB,WAAW5B,EAAKoB,cAAkC,IAAVL,GAAapT,EAAW2S,WAAWuB,WAAW7B,EAAKG,cACzMxS,EAAWmU,cAAc5T,QAAQH,KAAKJ,EAAW2S,aIzpB3DnC,EAAA+C,UACAxU,EAAAiB,YAAA2S,GACAvM,EAAA,WJ2pBcoK,EAAY/L,MAAK,MAIvB+L,EI1pBRxQ,eAAA6T,SAAAA,GJ2pBU,GAAK7T,EAAW2S,aAAcvK,MAAMpI,EAAW2S,WAAWe,WAA1D,CIvpBV,GAAAU,IAAAA,GAAAA,EAAA7L,YAAAxJ,UACAiB,GAAAqU,WAAAA,SAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,IACArU,EAAA6Q,cAAAA,QAAAA,KAAAA,EAAAA,aACA7Q,EAAA6T,YJ4pBQrD,EI1pBR8D,OAAAA,WJ2pBU,GI1pBVjC,GAGAkC,EAFAC,EAAA9D,EAAAA,SAAAkC,SAAAA,EAAAA,OAAAA,EAAAA,IACA6B,IJ4pBU,KAAK5O,EAAI,EAAGA,EAAI9G,EAAQ2G,OAAQG,IAC9BgL,EAAO,GAAIkD,MAAK,KAAM,EAAG,EAAGnD,EAASC,MAAQuD,EAAWvO,GAAK9G,EAAQkR,UIzpBjFoE,EAAAK,MACA3B,KAAAA,EACAyB,MAAA9D,EAAA3R,EAAA2G,GACAqN,SAAAvC,EAAAmE,OAAA/D,EAAAmC,YAAAqB,EAAAvO,GACA6O,SAAAJ,EAAAA,YAAAA,EAAAA,IJ6pBU,IIzpBVC,GADAE,IJ4pBU,KAAK5O,EAAI,EAAGA,EAAI9G,EAAQ2G,OAAQG,IAC9BkN,EAAS,GAAIgB,MAAK,KAAM,EAAG,EAAG,EAAGnD,EAASmC,QAAUqB,EAAWvO,GAAK9G,EAAQmR,YIzpBxFwE,EAAAE,MACArC,KAAAA,EACAiC,MAAA9D,EAAA3R,EAAA2G,GACA6M,SAAA/B,EAAAmE,OAAAnE,EAAA+B,YAAA6B,EAAAA,GACAQ,SAAAN,EAAAA,YAAAA,EAAAA,IJ6pBU,IIzpBVC,GADAE,IJ4pBU,KAAK5O,EAAI,EAAGA,EAAI9G,EAAQ2G,OAAQG,IAC9B0M,EAAS,GAAIwB,MAAK,KAAM,EAAG,EAAG,EAAG,EAAGnD,EAAS2B,QAAU6B,EAAWvO,GAAK9G,EAAQoR,YIzpB3FyE,EAAAC,MACAxC,KAAAE,EACAiC,MAAAtB,EAAAX,EAAAU,GACA4B,SAAAP,EAAAI,OAAA7O,EAAAA,YAAAA,EAAAA,GJ2pBc0O,SI1pBd/D,EAAAsE,YAAAvC,EAAA,IJ6pBU,IAAIsC,KIzpBd3S,KAAAA,EAAA2S,EAAAA,EAAAA,EAAAA,OAAAA,IACA3B,EACAhR,EAAA6S,MAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,KAEA7S,EAAA4Q,MAAAA,EAAAA,GAAAA,EAAAA,IAGAtC,GAAAA,KAAAwE,EACA9S,EAAAsO,YAAAmE,EJ2pBUzS,EI1pBV6S,OAAAhE,EJ2pBU7O,EAAM+S,MI1pBhB7B,EAAAuB,OAAAN,EAAAD,GAAA/B,MAAAtB,WAAA,GJ2pBU7O,EI1pBV4Q,cAAAW,EJ2pBUjD,EI1pBV4C,UAAA,GJ4pBQ5C,EAAYwE,YAAc,SAAS3C,EAAMe,GACvC,MAAK5C,GAAYmE,MAAwC,IAAVvB,EIzpBzD5C,EAAAsE,aAAAtE,EAAA4C,MAAAA,WACA8B,IAAAA,EACA9B,EAAAK,eAAAjD,EAAAmE,MAAAlB,aACApB,IAAA6C,EACA7C,EAAAe,eAAA5C,EAAAmE,MAAAnC,aADA0C,QJspByC,GAQjC1E,EI1pBR0E,YAAAxB,SAAAA,EAAA9C,GJ2pBU,GAAIsE,EAQJ,OIjqBVA,KAAA9B,EJ2pBY8B,EAAe7C,EAAKqB,UAA8B,IAAlB9C,EAASmC,OAAiC,IAAlBnC,EAAS2B,OIzpB7E,IAAA4C,EACAD,EAAA3E,EAAAA,UAAA,KAAAK,EAAAC,KAAA,IAAAD,EAAA2B,OACA6C,IAAA5E,IJ2pBY0E,EI1pBZ7C,EAAAqB,UAAA,KAAA9C,EAAAC,KAAA,IAAAD,EAAAmC,QJ4pBiBmC,EAAiC,EAAlBnW,EAAQ+Q,SAAeoF,EAAiC,EAAlBnW,EAAQgR,SIxpB9ES,EAAAA,aAAA4E,SAAA3U,EAAA2S,GACA5C,WAAA6E,EAAAA,cACA7E,EAAA6E,eAAAtE,EAAAA,GAEAP,EAAA6E,WAAA7C,EAAAA,IJ6pBQhC,EI1pBR4E,eAAA,SAAA3U,EAAA2S,GJ2pBU,GI1pBViC,GAAApB,GAAAA,MAAAS,EAAAnM,OAAAxJ,GJ2pBcsV,EI1pBdjB,EAAAA,WACAiC,EAAAnB,EAAAU,aJ2pBcA,EAAUS,EAAQ7C,YIzpBhCrB,KAAAX,EJ2pBY6E,EAAQrB,SAASK,EAAQ9L,SAASxJ,EAAQkR,SAAU,IAAMxP,GIzpBtE4S,IAAAA,EACAgC,EAAAC,WAAAA,EAAAA,SAAAA,EAAAA,WAAAA,IAAAA,GACA,IAAAlC,GACAkC,EAAAA,WAAAvB,EAAAxL,SAAAqI,EAAAC,WAAA9R,IAAAA,GJ4pBUyR,EI1pBV8E,OAAAA,EAAAvE,GAAAA,IJ4pBQP,EI1pBR6C,WAAA,SAAA5S,EAAA2S,GJ2pBU,GI1pBVkC,EACAtU,KAAAT,GJ2pBY+U,EI1pBZA,GAAAA,MAAA7B,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,OAAAA,EAAAA,OAAAA,EAAAA,QJ2pBYlT,QAAQS,OAAO4P,GACbC,KI1pBdyE,EAAAvE,cAEAH,IAAA5P,GJ2pBYsU,EI1pBZA,GAAAA,MAAA9C,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAAAA,EAAAA,OAAAA,EAAAA,WAAAA,EAAAA,QJ2pBYjS,QAAQS,OAAO4P,GACbmC,OAAQuC,EAAW7B,gBAEF,IAAVL,IIzpBrB5C,EAAA+E,GAAAA,MAAAA,KAAA,EAAA,EAAAtQ,EAAAA,KAAAA,EAAAA,OAAAA,EAAAA,OAAAA,EAAAA,EAAAA,OAAAA,EAAAA,YACA1E,QAAAwC,OAAAqC,GACA2I,OAAAA,EAAAA,gBJ6pBUyC,EI1pBVgF,UJ4pBQhF,EAAY+E,aAAe,SAAStQ,GAGlC,GI5pBV,UAAAuQ,EAAAA,OAAAC,SAAAA,eAAAxQ,EAAAC,iBJ2pBUD,EAAI8I,kBACAzI,EAAS,CIzpBvBkL,GAAAA,GAAAkF,QAAAvW,QAAA8F,EAAAA,OACAA,YAAAuQ,EAAA,GAAApQ,SAAAsE,gBACAxE,EAAAA,EAAAA,UAEAsQ,EAAAG,eAAA,WJ6pBQnF,EAAYkF,WAAa,SAASzQ,GIzpB1C,GAAAoQ,mBAAA7E,KAAAA,EAAAA,WAAAmE,EAAAA,WAAAA,EAAAA,OAAA,CAGA,GAFA1P,EAAAoP,iBACApP,EAAA2Q,kBACAP,KAAAX,EAAAA,QAEA,WADAlE,GAAAqF,MAAAA,EAGA,IAAAC,GAAAA,GAAA/B,MAAAvD,EAAAmE,OACAoB,EAAAA,EAAAhF,WACAiF,EAAA9C,EAAAA,EAAA6B,GAAArP,OACAqQ,EAAAA,EAAAtC,aACAoC,EAAAF,EAAAvD,EAAAA,GAAAA,OJ2pBcwC,EAAUS,EAAQ7C,aIzpBhCyD,EAAAvF,EAAAkF,EAAAA,GAAAA,OACAM,EAAA,EACAjR,EAAA0Q,UAAAO,KAAAjR,EAAA0Q,SACA1Q,EAAA0Q,EAAAO,EAAAP,EAAA,EAAAZ,CACAoB,KACA/D,KAAAgE,EAAAA,QAAAhE,EAAAA,EAAAc,EAAAd,EAAAA,EAAAA,EAAAc,EAAAA,KAAAA,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GJ4pBU,II1pBVmC,IAAAhB,EAAAA,GACAuB,EAAAA,CACA,MAAAK,EAAAA,UAAAL,EAAAA,IACAxD,KJ0pBcnN,EI1pBd0Q,UAAAvD,EAAA,EJ2pBU,II1pBViD,GAAAa,IAAAjC,GAAA1L,EACAsN,EAAAR,IAAAQ,IAAA7C,GAAAtN,IAAAA,GAAAA,CACAkQ,KAAAK,GJ2pBYZ,EI1pBZrB,SAAAmC,EAAAD,EAAA3N,SAAAxJ,EAAAkR,SAAA,KACAoF,EAAAnB,EAAAU,EAAAsB,GAAAnX,OACAsX,GAAA3F,EAAAA,IACAkF,IAAAK,GJ2pBYZ,EI1pBZpB,WAAAmC,EAAAF,EAAA3N,SAAAxJ,EAAAmR,WAAA,KACA2F,EAAAE,EAAAvF,EAAA+C,GAAAA,OACA0C,GAAAL,EAAAE,EAAAA,IJ2pBqBK,GIzpBrB3F,EAAAA,WAAA6E,EAAAjD,EAAAA,SAAArT,EAAAoR,WAAA,KACAmG,EAAAL,EAAAZ,EAAAY,GAAAvQ,OACAqM,GAAA7D,EAAAA,EAAAA,EAAAA,EAAAA,IJ2pBqBkI,IIzpBrBE,GAAAA,EAAA5Q,iBACAuQ,GAAAvQ,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IJ4pBU8K,EI1pBVU,OAAA/R,EAAAoX,GAAAA,GJ2pBUD,EI1pBV9E,EAAA,GAAAyE,EAAA,IJ2pBUlE,EI1pBVL,WJ8qBQ,II1pBRvS,GAAA0I,EAAA6D,IJ2pBQ8E,GI1pBR3F,KAAA,WJ2pBU,MI1pBV1L,IAAAJ,EAAA8S,WJ2pBY1S,EAAQ0I,KAAK,OAAQ,YIzpBjCiK,GAAAA,IAAAA,qBAAAA,eAEA0E,IACAhG,EAAA1E,KAAAA,OAAA,QACA3M,EAAAmP,KAAAA,WAAAkB,QACArQ,EAAAyG,GAAAA,QAAAiM,QAEA2E,MAEA,IAAAC,GAAAjG,EAAAnN,OACAmN,GAAAnN,QAAA,WACAiL,GAAAnP,EAAA0L,WACA4L,EAAAA,IAAAA,QAAAA,GJ4pBUD,IAEF,IAAIC,GI1pBZtX,EAAAA,IJ2pBQqR,GAAYnN,KAAO,YIzpB3BiC,GAAAnG,EAAA0L,KAAA,aAAA1L,EAAA0L,KAAA,cJ2pBU4L,IIzpBVrQ,EAAAsQ,WACAlG,EAAA9J,UAAAoH,EAAAA,SAAAA,GAAAA,EAAAA,aAAAA,YAAAA,EAAAA,cACA0C,EAAAA,UACAA,GAAA9J,EAAAA,GAAA8J,UAAA9J,EAAApB,aAEA,GAAAnG,IJ4pBQ,II1pBRuX,GAAA5I,EAAAA,IASAQ,OJkpBQkC,GAAY/L,KAAO,SAASqJ,GIzpBpC0C,EAAAA,WJ2pBcA,EAAY9J,UAAU8J,EAAY9J,SAASd,IAAIN,EAAU,aAAe,YAAakL,EAAY+E,cIzpB/G9E,EAAAA,UACAA,GAAAA,EAAAA,IAAAA,UAAAA,EAAAA,YAEAzC,EAAAF,KAEAQ,EJmWM,GI1pBNA,GAAAyD,6BAAA7P,KAAAA,EAAAA,UAAAA,WACAoD,EAAAvG,eAAAsL,GAAAA,UAAAA,CAyTAsM,OAxTAhX,GAAA6Q,OACA7Q,EAAAwS,KAAApT,EAAAoT,oBAsTAhE,EAAAxO,SAAAA,EACAgX,MJ4pBK3I,UI1pBLjP,gBAAAA,UAAAA,SAAAA,KAAAA,iBAAAA,cAAAA,cAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GJ2pBI,GAAIY,GI1pBRuC,EAAAA,SJ2pBQoM,EAAW,6BAA6B5E,KAAKkN,EAAQC,UAAUC,UACnE,QACE3I,SI1pBN5N,MJ2pBMoW,QAAS,UACT1U,KI1pBNwM,SAAAA,EAAAtP,EAAA0L,EAAA7K,GJ+sBQ,QI1pBRA,GAAA+W,GACA,GAAAC,QAAAA,OAAAC,GAAA,CJ2pBU,GI1pBVC,GAAA9O,MAAArJ,EAAA+Q,UAAA,GAAAiE,MAAAkD,EAAAvD,WAAAyD,YAAA,KAAA,EAAA,IAAApY,EAAA+Q,QJ2pBciH,EAAa3O,MAAMrJ,EAAQgR,UAAY,GAAIgE,MAAKkD,EAAWvD,WAAWyD,YAAY,KAAM,EAAG,IAAMpY,EAAQgR,QIzpBvH/P,EAAA2S,GAAAsE,CJ2pBUjX,GAAWoX,aAAa,OAAQJ,GIzpB1ChX,EAAAqX,aAAAC,MAAAJ,GACAlX,EAAAqS,aAAAA,MAAAA,GACAkF,IJ6pBUvX,EAAW2S,WAAasE,IA+C1B,QAASO,KACP,OAAQxX,EAAW2S,YAAcvK,MAAMpI,EAAW2S,WAAWe,WAAa,GAAKhD,EAAW1Q,EAAW2S,WAAY5T,EAAQ2Q,YIzwBnInP,GAAAA,IACA2B,MAAA3B,EJ4pBQA,SAAQC,SAAU,WAAY,cAAe,aAAc,eAAgB,YAAa,YAAa,QAAS,UAAW,WAAY,OAAQ,YAAa,YAAa,WAAY,aAAc,WAAY,kBAAmB,YAAa,WAAY,aAAc,aAAc,SAAU,gBAAiB,SAAU,WAAY,eAAgB,KAAM,cAAe,cAAe,eAAiB,SAASI,GAC9YL,QAAQyL,UAAUnB,EAAKjK,MAAO7B,EAAQ6B,GAAOiK,EAAKjK,KAExD,II1pBR6N,GAAA7N,eJ2pBQL,SI1pBRA,SAAAyL,OAAAnB,YAAA,YAAA,YAAA,gBAAA,SAAAjK,GACA7B,QAAA6B,UAAAsB,EAAAwM,KAAAC,EAAAA,KAAAA,EAAAA,MJ2pBY5P,EAAQ6B,IAAO,KIvpB3BL,QAAAkX,SAAAjH,eAAArR,SAAAa,eAAAjB,UAAAA,SAAAA,GACAA,GAAAA,GAAA0Y,KAAApN,EAAAA,OAAAA,GAAAA,cAAAA,EAAAA,MAAAA,EACA8H,SAAApT,UAAAoT,EAAAA,MACAzB,EAAAA,GAAAxO,EAAAwM,MAAA2D,EAAA1B,OAGA9F,IAAA9L,EAAAyQ,WAAA7P,EAAA6P,aAAAzQ,EAAA2Q,WAAA,QJ2pBQ,II1pBRxN,GAAA2I,EAAA1L,EAAA8P,EAAAF,EJ2pBQhQ,GI1pBR0Y,EAAAA,QJ2pBQ,II1pBRtF,GAAA5R,EAAAG,KACAgQ,EAAAzB,SAAAoD,EAAA1B,EAAAhB,GJ2pBU,MI1pBV8H,GAAApU,WAAAA,EAAAA,EAAAA,EAAAA,GJ4pBYwH,GI1pBZ4M,QJ2pBUvV,EAAMkN,OAAOvE,EAAKsE,OAAQ,SAASF,EAAUF,GACtC0I,GAAelX,QAAQyL,UAAUiD,KAClC1O,QAAQG,SAASuO,KAAWA,IAAaA,EAASI,MAAM,2BIzpBxEqI,KAAAC,EACAhH,EAAA5R,OJ4pBc0Y,EAAWhT,SAIjB,IAAIiT,GI1pBZrN,GJ2pBUsG,OI1pBV5R,EAAA0Y,WJ2pBUtF,KI1pBVyF,GJ4pBQrX,SAAQC,SAAU,UAAW,WAAa,SAASI,GAC7CL,QAAQyL,UAAUnB,EAAKjK,KIzpBrCsB,EAAAkN,SAAAyI,EAAAA,SAAA5I,GACAwI,EAAAK,SAAA9X,GAAA2S,EAAAA,oBAAAA,EAAAA,GACAvK,MAAAqP,EAAApN,SAAAzJ,KAAA6W,EAAA9D,SACAiE,EAAAA,EAAAX,gBJ8pBQ/U,EI1pBR8U,OAAAA,EAAAE,QAAAA,SAAAH,EAAAA,GACA/W,EAAAoX,OAAAA,EAAAzE,cACA3S,GJwqBQA,EI1pBRiX,SAAAA,QAAAA,SAAAA,GJ2pBU,GI1pBVjX,EJ2pBU,KI1pBVuX,EAEAK,MJypBY5X,GAAWoX,aAAa,QAAQ,GIzpB5CQ,IJ4pBU,II1pBVvF,GAAAqF,QAAAK,OAAAA,GAAAd,EAAAlY,EAAA4Q,MAAA4H,EAAAvX,EAAA2S,WJ2pBU,QI1pBVsE,GAAAvG,MAAA2B,EAAAzC,YJ2pBY5P,EAAWoX,aAAa,QAAQ,GIzpB5CM,IJ4pBUE,EI1pBVlE,GACAjE,WJ0pBc1Q,EI1pBdA,UACAsT,EAAAA,EAAAqB,qBAAAuD,EAAAlY,EAAA4Q,UAAA,GACAe,EAAAjB,EAAAA,EAAAG,iBAAA7Q,EAAA2Q,cJ4pBU2C,EAAOqF,EAAWK,qBAAqB/X,EAAW2S,WAAY5T,EAAQ4Q,UAAU,GIzpB1F0C,WAAAtT,EAAAgV,SJ2pBmB1B,EAAKqB,UIzpBxB,SAAAsE,EAAAA,SACA3F,EAAAA,UAAAA,IACA4F,QAAA1X,EAAAgR,SACA2G,EAAAA,cAEA7F,GAAA4F,MAAAA,OJ4pBQjY,EI1pBR0X,YAAAS,KAAAF,SAAAA,GJ2pBU,GAAI5F,EAaJ,OAXEA,GI3pBZA,QAAAd,YAAA0G,IAAA,OAAAA,EACAC,IACA3X,QAAA0X,OAAAA,GJ2pBmBA,EIzpBnBP,WAAA/E,EAAAA,SACA6E,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,iBJ2pB0C,SAArBzY,EAAQ0Q,SIzpB7BoE,GAAAA,MAAA,IAAAA,GJ4pBmB,GAAIE,MAAKkE,GIxpB5BjY,EAAAA,WAAA2S,EAAAvK,qBAAAuK,EAAAe,EAAAA,UJ2pBiB8D,MAETxX,EI1pBRyX,QAAAA,WACA1Y,EAAAA,IAAAyY,MJ+pBQtV,EAAMqN,IAAI,WAAY,WKnnC9B/P,GAAAiY,EAAA3L,UACAnM,EAAAG,KACAF,EAAA,YLynCEW,QKpnCFP,OAAAA,yBAAAgD,SAAAwH,OAAA9D,WLqnCI,GKpnCJ/G,GAAAG,KAAAA,UACAsY,UAAA/N,UACA9J,SAAAC,mBLqnCM6X,SKpnCN9X,WLqnCM+X,YAAa,UKlnCnB9N,EAAA+N,KAAAA,WAAAlO,SAAAiO,EAAAA,EAAAA,GACAF,GAAAA,GAAAI,IACAJ,GAAAK,SAAAA,QAAAA,KAAAA,GACAL,QAAAM,SAAA,YAAAC,WAAAA,eAAAA,SAAAA,GACApY,QAAAgR,UAAAA,EAAAiH,MAAAI,EAAAA,SAAAhY,GAAAiY,EAAAjY,MLsnCM4J,EAAOsO,UAAYV,EAAK/N,SAASgO,SACjC7N,EKpnCNgO,aAAAG,EAAAA,SAAAA,YLqnCMP,EAAKI,OAAShO,EAAOgO,UKnnC3BJ,EAAAW,2BAAAJ,EAAAA,wBLqnCMP,EKpnCNM,MAAAtF,SAAAoF,GACAQ,QAAAA,YAAAR,EAAAI,OAAAA,UACApO,EAAAyO,WAAAA,EAAAA,MAAAA,GLsnCQb,EKpnCRa,OAAAA,KAAAb,ILsnCMA,EAAKW,QKpnCXC,SAAAA,GLqnCQ,GAEIC,GAFA7F,EKpnCZgF,EAAAI,OAAAU,QAAAP,GACAM,EAAAA,EAAAb,OAAAI,OAGAS,GADAb,QAAAe,SAAA/F,GACA6F,EAAAA,OAAAnO,IAAA,SAAA6N,GACAM,MAAAA,GAAAA,OLqnCaC,QKpnCb9F,GLsnCwBgF,EAAKI,OAAOI,QAE5BR,EKpnCRA,OAAAgB,OAAAhB,EAAAI,GACAS,ELonCY7F,EKnnCZgF,ILqnCmBhF,IAAU6F,GAAeA,IAAgBb,EAAKI,OAAO9S,QAC9DuT,IKlnCVb,GAAAQ,GAAAnY,EAAAA,EAAAA,OAAAA,OACA2X,EAAAK,WAAAA,EAAAA,OAAAA,GAAAY,MAAAC,GLsnCUlB,EAAKgB,cAGThB,EKpnCNgB,WAAAZ,EAAAI,WAAAW,SAAAnB,GLqnCQA,EAAKI,OAAOI,QAAUnY,EACtB2X,EAAKK,2BAA2BjY,QAAQ,SAAS8Y,GKnnCzDrV,OAGAuV,EAAAxZ,UAAAA,EAAAA,UAAAA,SAAAA,EAAAA,GACA,MAAAwZ,GAAAA,OAAAA,UAAAA,EAAAA,MAAAA,EAAAA,OAAAA,UAAAA,GAGA1Z,MAAAH,KAAAA,WACA,GAAA6Z,KAGAtX,OAFAyU,GAAAA,SAAAhX,EACA8Z,EAAAA,WAAAzZ,EACAwZ,KLsnCKxL,UKpnCLlP,UAAA,UAAA+L,WAAAA,OAAAA,SAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GLqnCI,GKpnCJlL,GAAAkL,EAAAvL,QLqnCI,QKnnCJ2C,SAAA,WAAAyX,ULqnCMD,YKpnCNE,ELqnCMzX,OKpnCN0X,ELqnCM5Z,YKpnCN2Z,SAAA,WAAA,SAAAH,EAAAxZ,YLqnCMlB,YKpnCN8a,SAAAnB,EAAAA,GLqnCQ,MKpnCRkB,GAAAA,UAAAxF,EAAAyF,ULsnCM3X,KKpnCN0X,SAAA3B,EAAA1D,EAAAuF,EAAA5B,GLqnCQ,GKpnCR2B,GAAAR,EAAAnB,GACA2B,EAAA3B,EAAAA,EL8nCQ,IATI0B,IACFC,EAAWnB,2BAA2BnE,KAAK,WKnnCrDuF,EAAAC,cAAAF,EAAApB,OAAAI,WAEAgB,EAAAnB,YAAAA,KAAAA,SAAAnE,GLsnCY,MKrnCZyF,GAAAA,WAAAC,GLqnCmB/B,KAGP4B,EKpnCZC,aAAA,CLqnCU,GAAIC,GAAqBE,EAAOJ,EAAMC,aACtCF,GAAWnB,2BAA2BnE,KAAK,WACzCyF,EAAmBC,OAAO9X,EAAO0X,EAAWpB,OAAOI,WKlnC/D1W,EAAAkN,OAAAyK,EAAAC,aAAA,SAAA7K,EAAAF,GACA4H,EAAAyC,WAAAnK,KACA,SLwnCOjB,UKpnCPgB,UAAA,UAAA,WAAAD,OAAAA,SAAAA,EAAAA,EAAAA,GLqnCI,OACE4H,SAAW,YAAa,WACxBzU,OKpnCNA,ELqnCMD,KKpnCNC,SAAAD,EAAA4X,EAAA5X,EAAAiY,GAkBAC,QAAAA,KLqnCU,GAAI/G,GAAQwG,EAAWpB,OAAOU,QAAQhX,EACtC4K,GAAS8M,EAAWQ,UAAUlY,EAAOkR,GAAS,WAAa,eAAejU,EAASya,EAAWvP,SAASiO,aKvoCjH,GAAAsB,GAAAvP,EAAAzK,ELqnCQT,GKpnCRA,SAAAqN,YLqnCQqN,EAAM7K,SAAS,QAAS,SAASC,EAAUF,GKnnCnD8K,EAAA7K,MAAAhE,EAAAC,YAAAgE,KLsnCQ/M,EAAMmX,KAAOQ,EAAMR,KKnnC3BO,EAAAA,KAAAlB,EAAAxW,KAAAA,EAAAA,MAAAA,EACAA,EAAAmI,SAAAzK,WACAga,EAAAA,SAAAb,EAAA7W,SAAAA,WAEA2X,EAAA7K,SAAAmL,WAAAA,SAAAA,EAAAA,GACAjY,EAAAkR,SAAAwG,EAAApB,MAAAA,KLsnCQoB,EAAWlB,MAAMxW,GKnnCzB0X,EAAAA,IAAAA,WAAAnB,WACA0B,EAAAA,QAAAA,KC1HA5Z,EAAAkY,2BAAAzK,KAAAA,WACAmM,MAEApa,SNwvCEQ,QMpvCF8Z,OAAA9Z,0BAAA8Z,UAAAA,UAAAA,WNqvCI,OACEnY,OMpvCN,ENqvCMnC,QMpvCNsa,SAAAlb,EAAA0a,GNsvCQ,IAAK,GADDS,GAAOnb,EAAQ,GAAGkP,iBAAiB,MAC9BxI,EAAI,EAAG0U,EAAMD,EAAK5U,OAAY6U,EAAJ1U,EAASA,IAAK,CMlvCzD,GAAAwU,GAAAC,EAAAZ,ENqvCU,IMpvCVW,EAAAtb,QAAAA,QAAAA,GACAmD,EAAAA,KAAAA,iBAAAA,CACA/C,GAAAA,GAAAA,EAAAA,KAAAA,YACAkE,GAAAA,OAAA,uFAAAmX,EAAA,oGAAAA,EAAA,0CNsvCQ,MMnvCR,UAAA5Z,EAAA6Z,EAAAC,GNuwCU,QMjvCVxY,GAAAsE,GNkvCY,GAAIzD,GAASxC,QAAQpB,QAAQqH,EAAMmU,eMhvC/CzY,EAAA0Y,EAAAA,KAAAA,YAEAra,KAAAyL,EAAAjN,QACAA,EAAAA,OAAAmD,QAAAA,EAAA2Y,OAAAC,OAAAA,ONkvCc5Y,EAAM2Y,QAAUL,EAChBtY,EAAM4Y,OAAS,QAEjB5Y,EAAM0Y,SACFra,QAAQyL,UAAUjN,EAAQgc,SAAWxa,QAAQmE,WAAW3F,EAAQgc,SOtyChFvb,EAAAub,OAAA7Y,EAAA2Y,QAAA3Y,EAAA4Y,QPywCU,GMnvCV/b,INovCYmD,MMnvCZnD,ENovCYI,QAASA,EACTkE,MAAM,EMjvClB9C,SAAAC,SAAA+Z,UAAA7U,SAAA6U,GACA,GAAAF,GAAAC,KAAAzU,EAAAA,OAAAA,GAAAA,cAAAA,EAAAA,MAAAA,EACAwU,SAAA9Z,UAAApB,EAAAkb,MACAtb,EAAA8L,GAAA3I,EAAAwM,MAAAmL,EAAAlL,MAKA,KAAA,GNivCc2L,GAAOnb,EAAQ,GAAGkP,iBAAiB,MMjvCjD2M,EAAAA,EAAAA,EAAAxU,EAAAA,OAAAA,EAAAA,EAAAA,IAAAA,CACA,GAAAzD,GAAAA,EAAAxC,EACA8Z,GAAAG,QAAAzX,QAAA8H,GACA2P,EAAAA,KAAAA,kBACAtY,EAAAA,GAAA4Y,QAAA5Y,UNuwCE3B,QOpyCF4C,OAAA,yBAAA,yBAAA,wCAAAH,SAAA,UAAA,WPqyCI,GOpyCJ2I,GAAA7L,KAAAH,UACAyD,UAAA,UACAxB,YAAA,SACA4B,YAAA,UACAyX,UAAA,cACAC,YAAAA,yBACAC,QAAA,QACAC,WAAA,EACAC,UAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAC,UAAAA,EACAC,gBAAA,EACAC,MAAAA,EACAnW,UAAA,wEPqyCM8V,YAAa,gCOlyCnBvb,QAAAmE,MAGAsX,SAAAjN,OACAkN,UAAAlW,EAEAmW,cAAAE,WPiyCMD,cO/xCNE,yBPgyCMrW,QO7xCNxG,EP+xCIe,MO5xCJmE,MAAA/B,UAAAsI,YAAAA,aAAAA,WAAAA,WAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GP+xCM,QO3xCNtI,GAAA2Z,EAAAA,EAAAA,GP4xCQ,GAAID,MO1xCZ1Z,EAAA2Z,QAAAA,UAAAlc,EAAA2K,EP4xCQsR,GAAUzX,EAAShF,EAASJ,EO1xCpCmD,IAAAA,GAAA4Z,EAAA/c,MACAmD,GAAA6Z,YACA7Z,EAAA8Z,SACA9Z,EAAA+Z,gBAGA/Z,EAAAga,aAAA,GP4xCQha,EO1xCR0Z,YAAAO,EAAA/I,SP2xCQlR,EAAM6Z,oBAAsBhd,EAAQmc,gBAAkBnc,EAAQkc,SAC9D/Y,EAAM8Z,eAAiBjd,EAAQ2c,cOxxCvCxZ,EAAA0Z,SAAA7c,EAAAqU,QP0xCQlR,EOzxCRA,UAAAiJ,EAAAoQ,SP0xCQrZ,EOzxCR0Z,UAAAzK,SAAAiC,GP0xCUlR,EAAMiJ,aAAa,WACjByQ,EAAQO,SAAS/I,MAGrBlR,EAAM0Z,QAAU,SAASxI,EAAOnO,GOtxCxC/C,EAAAkY,aAAA,WACAwB,EAAAA,OAAAxB,MP0xCQlY,EOtxCRka,WAAAvW,WPuxCU,MOtxCV3D,GAAAkY,cPwxCQlY,EAAMkY,UAAY,SAAShH,GACzB,MAAOwI,GAAQxB,UAAUhH,IOnxCnClR,EAAAma,WAAAA,WACA,IAAA,GAAAxW,GAAA,EAAAA,EAAA3D,EAAAoa,SAAA5W,OAAAG,IACA3D,EAAAkY,UAAAvU,IACA3D,EAAA0Z,QAAA/V,IAOA+V,EAAAA,YAAA,WACA1Z,IAAAA,GAAAoa,GAAAA,EAAAA,EAAAC,EAAAA,SAAAA,OAAAA,IACAX,EAAAY,UAAAA,IPmxCcta,EAAM0Z,QAAQ/V,IAIpB+V,EOjxCR1Z,OAAA2Z,SAAA1C,GPkxCUjX,EAAMoa,SOjxChBC,EPkxCUX,EOjxCV1Z,sBPmxCQ0Z,EOjxCR7c,SAAAoc,SAAAU,GAUA3Z,MAVAnD,GAAA0d,UPmxCgBb,EAAQxB,UAAUhH,GACpBlR,EOnxCd2Z,aAAA1C,OAAAjX,EAAA2Z,aAAA3C,QAAA9F,GAAA,GPqxCclR,EAAM2Z,aAAavH,KAAKlB,GAEtBrU,EAAQoc,MAAMjZ,EAAM2Z,aAAaV,KAAK,SAASsB,EAAGC,GOjxClEd,MAAAzK,GAAAuL,KPqxCYxa,EAAM2Z,aAAezI,EOlxCjCwH,EAAAiB,cPsxCQD,EOpxCR7c,OAAAkc,SAAA7H,GPqxCU,KOpxCVpT,QAAAA,YAAAmU,IAAA0H,EAAA3Z,GAAA2Z,GAAA3Z,EAAAkR,SAAAA,QPoxCU,CAGA,GAAI3S,GAAQyB,EAAMoa,SAASlJ,GAAO3S,KAClCyB,GOpxCV0Y,OAAA1Y,WPqxCY0Z,EAAQO,SAAS/I,GACbrU,EOpxChBkc,SACAjb,EAAAjB,cAAAmD,EAAA2Z,aAAA/Q,IAAA,SAAAsI,GACApT,MAAAA,SAAAmU,YAAAA,EAAA1T,SAAAT,IACA,KPsxCuBkC,EAAMoa,SAASlJ,GAAO3S,UAG3B1B,EAAQwG,OOjxC1BV,EAAA9F,cAAAyF,IAAAxE,EAAAoT,YAAAwI,EAAAA,GAEA7c,EAAA4d,cAAAvJ,GPoxCcwI,EAAQnX,UAGZvC,EO/wCV3B,MAAAA,EAAAqc,YAAAC,UAAAA,EAAAzJ,EAAAwI,GACA1Z,QAAA2Z,UAAAA,EAAA7b,WAAA6c,QAAA/R,WAAArK,EAAAA,WPgxCY1B,EO/wCZ4d,SAAAf,EAAAkB,EAAArc,KPkxCQmb,EO/wCR1Z,mBAAA2Z,WPgxCc9c,EAAQkc,SACN1a,QO/wChBqc,QAAA5c,EAAA6c,aACA3a,EAAA3B,aAAAP,EAAA6c,YAAAA,IAAA3a,SAAAoa,GACApa,MAAA2Z,GAAAA,UAAAD,KPkxCc1Z,EAAM2Z,gBO3wCpBO,QAAAA,UAAApc,EAAA6c,cAAA3a,EAAAoa,SAAA5W,OACAxD,EAAAnD,aAAAge,EAAA/c,UAAAA,EAAA6c,aPgxCc3a,EAAM2Z,aAAe,IAI3BD,EO5wCR7c,WAAAkc,WP6wCU,MO5wCVlc,GAAAmD,WAAA2Z,EP+wCiB3Z,EAAMoa,SAAS5W,QAAU1F,EAAWgd,WAAWtX,QAAU3G,EAAQge,UAF/D7a,EAAMoa,SAAS5W,QAI1BkW,EO3wCRxI,UAAAA,SAAAA,GACA,MAAArU,GAAAqU,SACA3S,KAAAF,EAAA0c,aAAAX,QAAAlJ,GAEAA,EAAAA,eAAAA,GAGAwI,EAAArG,UAAAA,SAAA9U,GAEAwE,GAAAC,EACAD,KAAA8I,EAAAA,EAAAA,SAAAA,OAAAA,MAEAzI,QAAA2X,OAAA/a,EAAAoa,SAAAlJ,GAAA3S,MAAAA,KP0wCU,MOxwCVyc,IP0wCQtB,EOvwCRrG,aAAA4H,SAAA3H,GP0wCU,GAFAvQ,EOvwCVC,iBPwwCUD,EAAI8I,kBACAzI,EOvwCd4X,CPwwCY,GOtwCZC,GPswCgB3H,EAAWjV,QAAQpB,QAAQ8F,EAAIlC,OAEnC,IAA4B,MAAxBkC,EAAIlC,OAAOqC,SOpwC3B,IPqwCc,GAAI+X,GAAkB3H,EAASrJ,UOrwC7C+Q,GAAAC,EAAAzX,OAAA,GACA+P,MAAAlV,EAAA2c,GAAAzH,WPuwCkByH,EOtwClBC,GPwwCgBA,EAAkBA,EAAgBhR,QOlwClDuJ,GACAnV,QAAApB,QAAAuK,GAAAzE,eAAA,SAGAA,EAAAC,eAAAA,WPwwCQ0W,EOlwCRlG,WAAAjR,SAAAA,GPmwCU,MAAK,eAAeiF,KAAKzE,EAAI0Q,UO/vCvCsF,IAAAhW,EAAAlG,UACAkG,EAAAC,iBPiwCYD,EAAI8I,mBO5vChBhP,EAAA4W,UAAAkG,IAAA5W,EAAA/C,QAIAgM,EAAAA,OP6vCenP,EAAQkc,UAA6B,KAAhBhW,EAAI0Q,SAAkC,IAAhB1Q,EAAI0Q,aOvvC9D5W,EAAAma,WP2vCgC,KAAhBjU,EAAI0Q,SAAkBzT,EAAM2Z,aAAe,EAAG3Z,EAAM2Z,eAAyC,KAAhB5W,EAAI0Q,SAAkBzT,EAAM2Z,aAAe,EAAG3Z,EAAM2Z,aAAe3Z,EAAMoa,SAAS5W,OAAS,EAA4B,KAAhBT,EAAI0Q,SAAkBzT,EAAM2Z,aAAe3Z,EAAMoa,SAAS5W,OAAS,EAAGxD,EAAM2Z,eAAyBtb,QAAQgR,YAAYrP,EAAM2Z,gBAAe3Z,EAAM2Z,aAAe,GOxvCvWD,EAAAwB,YALAC,EAAAlM,OAAAjP,EAAA2Z,ePivCU,QAgBFD,EOzvCR0B,MAAAA,WP0vCU,GOzvCVva,GAAAA,EAAAgJ,UAAAA,SP0vCU,OAAOwR,GAAGrE,QAAQ,SAAW,GAAKqE,EAAGrE,QAAQ,YAAc,GAAKqE,EAAGrE,QAAQ,SAAW,GOpvChG0C,EAAAnF,iBAAApT,SAAAA,GACA,OAAAuY,EAAA,GAAA4B,cAAAC,UACAhH,EAAAA,iBACAiH,EAAA3e,2BACA6c,EAAAA,OAAAlV,SPyvCQ,IOpvCRkV,GAAAlV,EAAAA,IPqvCQkV,GOpvCR7c,KAAAA,WPqvCU0X,IACI1X,EAAQkc,UACVW,EOpvCZlV,SAAA8F,SAAA,mBAGApG,EAAAsQ,WACAkF,EAAAnX,SAAAY,GAAAC,EAAA,aAAA,YAAAsW,EAAArG,cACAxW,EAAAkc,UACA/Y,EAAA2Z,GAAAA,UAAAD,EAAAlG,aAEAkG,GAAAA,GPqvCQ,IOnvCRzc,GAAAyG,EAAAnB,IAoBA,OPguCQmX,GAAQnX,KAAO,YOlvCvBiS,EAAAuE,UAAA1a,QAAAgR,YAAAvR,EAAA6c,ePovCY3a,EAAM2Z,aAAe,IAEvBD,EAAQlV,SAASd,IAAIN,EAAU,aAAe,YAAasW,EAAQrG,cO/uC7EoG,EAAAhc,UACAR,EAAAwc,IAAAA,UAAAA,EAAAA,YAMA3N,GAAA,IAIA4N,EP6hCM,GO3xCN1Z,GAAAoa,6BAAAA,KAAAA,EAAAA,UAAAA,WACAhX,EAAA2V,eAAArE,GAAAnP,UAAA6G,CAgQArM,OADA0U,GAAAhX,SAAAA,EACAgc,MP4uCK3N,UOzuCL9L,YAAAA,UAAAA,SAAAA,KAAAA,UAAAA,gBAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GP0uCI,GAAIvC,GO1uCR0b,EAAA1b,QP2uCI,QACEwO,SO3uCN3N,MP4uCMmW,QO3uCNpW,UP4uCM0B,KAAM,SAAkBC,EAAO/C,EAAS0L,EAAM7K,GOxuCpD,GAAAyO,IACAlO,MAAAC,EACA6a,YAAArP,EAAAnB,YP2uCQtK,SAAQC,SAAU,WAAY,cAAe,aAAc,eAAgB,YAAa,YAAa,QAAS,UAAW,WAAY,OAAQ,YAAa,cAAe,iBAAkB,YAAa,gBAAiB,UAAW,WAAY,gBAAiB,YAAa,KAAM,OAAQ,YAAa,cAAe,cAAe,UAAY,SAASI,GACtVL,QAAQyL,UAAUnB,EAAKjK,MAAO7B,EAAQ6B,GAAOiK,EAAKjK,KAExD,IOvuCR6N,GAAA7N,ePwuCQL,SOvuCRA,SAAAyL,OAAAnB,YAAA,iBAAA,QAAA,SAAAjK,GACA7B,QAAA6B,UAAAsB,EAAAwM,KAAAC,EAAAA,KAAAA,EAAAA,MPwuCY5P,EAAQ6B,IAAO,KOjuC3BL,QAAAA,SAAAyL,eAAA2R,SAAA,eAAA,SAAA,YAAA,SAAA/c,GACA,GAAA6N,GAAAA,KAAAA,EAAA/E,OAAAiU,GAAAA,cAAA/c,EAAAiO,MAAA,EACA9P,SAAAkc,UAAApQ,EAAA8D,MPquCY5P,EOpuCZ6B,GAAAsB,EAAAwM,MAAA7D,EAAA8D,MPuuCQ,IAAIgP,GAAexe,EAAQ0L,KAAK,gBOttCxC,IAXA1L,QAAA6M,UAAA5G,KACAwY,EAAAze,KAAAA,GACAye,EAAAnV,UAAA,EAEAmV,EAAA1R,SAAA/M,GAOAJ,WAAAoS,EAAAA,GAAAyK,SAAAzc,cAAAJ,CAEA,GAAAoS,GAAAkM,CACAle,GAAAsJ,IAAAoV,UAAAA,QP8tCU1e,EAAUoB,QAAQpB,QAAQ,2DO1tCpCye,EAAAE,MAAAA,GP6tCQ,GO1tCRC,GAAAC,EAAAhe,EAAAA,WAEAmR,EAAA2G,EAAAmG,EAAAA,EAAAA,EACAje,GAAAA,SP0tCUb,EAAQ,GAAG0e,iBAAiB,OAAQ1M,EAAOiM,iBOrtCrDlb,IAAAA,GAAA2V,EAAAqG,OAAAjP,GAAAA,QAAAF,OAAAA,IAAAA,MPwtCQ7M,GOttCRiP,OAAAqL,EAAAA,SAAAA,EAAAA,GACAxc,EAAA6T,SAAAA,EAAAA,GAAAA,KAAAA,SAAAA,GACA1C,EAAA2G,OAAAmG,GAGAje,EAAA6T,cAGA,GPotCQ3R,EOntCRnD,OAAAA,EAAAkc,QAAA1a,SAAAqc,EAAA5c,GPotCUmR,EOntCVsD,qBPotCUzU,EOntCVoT,YPotCW,GACHpT,EOntCRme,QAAA5d,WPotCU,GOntCVkU,GACAA,CPotCc1V,GOntCdkc,UAAA1a,QAAAqc,QAAA5c,EAAA6c,cPotCYpI,EOntCZA,EAAA2J,YAAAtT,IAAA,SAAArK,GPqtCc,MADA2S,GAAQjC,EAAO2L,UAAUrc,GOltCvC,KAAA2S,EAAAjC,EAAA3G,OAAA8R,SAAAlJ,GAAAoB,OAAA,IACApB,OAAAjC,QAAA2L,WPqtCcrI,EOptCdA,EAAArB,QAAArU,EAAAoS,WAAAmL,EAAAlJ,WPotCyBqB,EAAS/O,OAAS,KAAO3G,EAAQ0c,eAAiB9b,EAAS8b,eAE3DhH,EAAS2J,KAAK,QO/sCvChL,EAAA3S,EAAAA,UAAAiF,EAAAmX,aPmtCYpI,EAAqB,KAAVrB,EAAejC,EAAO3G,OAAO8R,SAASlJ,GAAOoB,OAAQ,GO9sC5EtS,EAAAN,MAAA6S,GAAA1V,EAAAsc,cAAAtc,EAAAqc,WAAAzb,EAAAyb,aAEArc,EAAAkc,WACA9J,EAAAkN,SAAA,SAAA5d,GPitCY,OAAQA,GAA0B,IAAjBA,EAAMiF,SAG3BxD,EAAMqN,IAAI,WAAY,WQpmD9B/P,GAAA2R,EAAArF,UAEAnM,EAAAG,KACAF,EAAA,YRymDEW,QQpmDFoL,OAAA,kCAAA,oCAAA,uCAAA,2BAAA3I,SAAA,mBAAA,WRqmDI,GQpmDJI,GAAAtD,KAAAH,UACAiC,UAAA,UACA4B,YAAA,kBACAgM,UAAA,cACA8O,YAAA,2CACAC,QAAAA,QACAC,WAAAA,EACA7O,UAAA,EACA8O,MAAAA,EACAC,MAAAA,EACAC,WAAAA,EACAC,UAAAA,MACAC,SAAAA,OACAC,WAAAA,aACAC,SAAAA,KACAlP,gBAAA,KACAmP,UAAAhP,KACAiP,YAAAjP,MACAkP,WAAA,OACAC,iBAAA,YACAC,gBAAAA,OACAC,cAAA,EACAC,WAAA,EACAC,UAAAvP,EAAAA,GRqmDMiP,UAAUjP,EAAAA,GQnmDhBlQ,QAAAmE,EAEAkb,UAAA7Q,EACA8Q,mBAAA,GACAC,SAAA1f,gBACA2f,UAAAE,iBRomDMD,SQnmDNE,ERqmDI3f,MQnmDJmE,MAAA/B,UAAAud,YAAAjV,aAAAA,OAAAA,iBAAAA,uBAAAA,WAAAA,WAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GRumDM,QQnmDNkV,GAAAL,EAAAA,EAAAA,GAsOAI,QAAAA,GAAApY,GACAA,EAAAoN,SAAAnG,EAAAkB,YAAAnI,EAAAgL,MRkoDQ,QQhoDRlT,KRioDUA,EQhoDV,GAAA4M,QAzOA7J,GAAAA,GAAAnD,EAAAugB,EAAAA,QAAAA,UAAAA,EAAAA,IACApd,EAAAyd,EAAAJ,SACAK,EAAAA,EAAAH,OAEAI,EAAA9L,EAAAA,EACA0L,GAAAA,MAAAK,EAAAC,IACA,IAAAC,GAAAC,EAAAA,QAEA/d,GAAAge,UAAAA,EAAAA,SRkmDQhe,EQjmDRmX,WAAAta,EAAAugB,URkmDQpd,EQlmDRzB,SAAA1B,EAAAwgB;ARmmDQ,GQnmDRlN,GAAAA,EAAAA,MAAAhB,EAAA8O,GAAAA,MAAA/O,EAAAA,EAAA+O,OAAAA,GAAAA,MAAAA,EAAAA,cAAAA,EAAAA,WAAAA,EAAAA,WRsmDYH,EAAIH,EAAMI,QACd/d,GAAMge,YQtmDd7G,KAAA,QAAA5Y,MAAA,KAAA4R,MAAAhB,MAAA8O,EAAA/O,IAAA+O,KACA9G,KAAA,YAAA5Y,MAAA,MAAA4R,MAAAhB,MAAA,GAAA0C,MAAAoM,EAAAC,cAAAD,EAAAE,WAAAF,EAAAG,UAAA,GAAAlP,IAAA+O,GAAAA,MAAAA,EAAAA,cAAAA,EAAAA,WAAAA,EAAAA,UAAAA,MACA9G,KAAA,cAAA5Y,MAAA,MAAA4R,MAAAhB,MAAA,GAAA0C,MAAAoM,EAAAC,cAAAD,EAAAE,WAAAF,EAAAG,UAAA,GAAAlP,IAAA+O,KACA9G,KAAA,YAAA5Y,MAAA,MAAA4R,MAAAhB,MAAA,GAAA0C,MAAAoM,EAAAC,cAAAD,EAAAE,WAAAF,EAAAG,UAAA,EAAAN,GAAA5O,IAAA+O,GAAAA,MAAAA,EAAAA,cAAAA,EAAAA,WAAAA,EAAAA,UAAAA,MACA9G,KAAA,aAAA5Y,MAAA,KAAA4R,MAAAhB,MAAA,GAAA0C,MAAAoM,EAAAC,cAAAD,EAAAE,WAAAA,GAAAjP,IAAA+O,KAIAje,KAAAO,aACA8d,MAAAA,MACAhB,MRmoDYlO,MAAO,GAAI0C,MAAKoM,EAAEC,cAAeD,EAAEE,WAAa,EAAG,GQhoD/Dne,IAAA0Z,GAAAA,MAAAuE,EAAAC,cAAAhN,EAAAA,WAAAA,MRooDQlR,EAAMO,MQ/nDdgd,UAAAA,GRioDUF,QAAS,IAEXrd,EQ/nDRA,QAAAO,SAAA8c,EAAAnM,GACAlR,EAAAO,KAAA8c,SAAAnM,GRkoDUqM,EAAiBtO,OAAOkB,EAAMe,IAEhClR,EQ/nDRqB,YAAArB,SAAAqe,EAAAA,GACAre,EAAAO,KAAA8c,SAAAnM,GAGAqM,EAAAhb,YAAAhE,EAAA2S,IAEAlR,EAAAse,aAAAA,SAAAjd,GACA0U,IAAAA,EAAAjY,KAAAA,WAAA6c,EAAAtc,KAAAA,UAGAP,EAAAmU,aAAA8D,GACAjY,EAAA6T,MAAAA,KAEA3R,EAAAue,eAAA,WACAhB,GAAAA,GAAAhb,EAAAA,YAAAA,QAAAA,KAAAA,EAAAA,eRgoDUwT,GAAWsH,QAAUrd,EAAMO,KAAK8c,QQ9nD1Crd,EAAAwe,aAAA,EACAzb,EAAA8I,cAAAA,GRgoDU/N,EAAW6T,WAEb3R,EQ9nDR3B,aAAAogB,WR+nDUlB,EQ9nDVhd,QRgoDQP,EAAMwe,iBQ9nDd,SAAAzb,GR+nDUA,EQ9nDVwa,mBRgoDQA,EQ9nDR3H,OAAA8H,SAAAe,EAAAC,EAAAA,GR+nDcrgB,QAAQiT,OAAOmN,KAAWvY,MAAMuY,EAAMjN,YAAcnT,QAAQiT,OAAOoN,KAAWxY,MAAMwY,EAAMlN,aQ7nDxG+L,EAAAA,KAAA9L,QAGA5U,EAAA8hB,cAAAC,EAAAA,GR4nDcrB,EAAiB9K,OAAUgM,EAAOC,GQ1nDhDrgB,EAAAC,OAAAA,KAAA0B,EAAA2D,EAAA4Z,IRgoDUA,EAAiB9L,QAAQoN,IAE3BtB,EQ9nDRxH,oBAAA4E,SAAAtc,GACA0X,EAAAA,mBAAAxV,CACA,KAAAP,GAAAA,GAAAO,EAAA8c,EAAAA,EAAA1K,KAAAnP,OAAAsb,EAAAnb,EAAAA,IACAtF,QAAAA,QAAAiT,EAAAnB,KAAAxM,GAAA4Z,EAAAwB,iBRioDQxB,EAAiBtO,OAAS,SAASkB,EAAMe,EAAOU,GAC9C,GAAImE,GQ9nDdjY,EAAA6c,YAAAtc,QAAAH,KAAAJ,EAAA6c,eR+pDU,IAhCA5E,EQ9nDVjY,QAAA2S,EAAAS,KAAAA,QR+nDelR,EAAMO,KAAK8c,SAcdvf,EAAWkhB,kBAAqBlhB,EAAWkhB,kBAAyBlhB,EAAWkhB,qBQ7nD3F9N,QAAAA,OAAAf,KACA4F,QAAAkJ,OAAAA,EAAA5gB,kBAAA8R,KAAAA,MAAAA,EAAAA,kBAAAA,GAAAA,cR+nDgBrS,EQ9nDhBkhB,kBAAA9N,GAAA,GAAAW,MAAA1B,IRioDcrS,EAAWkhB,kBAAkB9N,GAAS,KQ5nDpDe,IAAAnU,EACAA,EAAA6T,iBAAAA,QAAAA,KAAAA,GAGAoE,EAAAmJ,eAAA7gB,QAAAH,KAAAiS,KAzBAe,QAAAA,OAAAf,KACA4F,QAAAnH,OAAAA,EAAA1Q,WAAAiS,KAAAA,MAAAA,EAAAA,WAAAA,GAAAA,cR+nDgBrS,EQ9nDhB2S,WAAAS,GAAA,GAAAW,MAAA1B,IRioDcrS,EQ9nDd2S,WAAAS,GAAA,KAEAI,IAAAjT,EACA0X,EAAA1X,UAAAP,QAAAkhB,KAAAA,GRgoDcjJ,EAAWoJ,QAAU9gB,QAAQH,KAAKiS,IAiBtC4F,EQ7nDV/V,aAAAqe,ER8nDUvgB,EQ7nDVshB,cAAArJ,GR8nDUjY,EAAW6T,WACN3R,EAAMO,KAAK8c,QAAS,CQ5nDnC,GAAA+B,IAAA,CR8nDYpf,GQ7nDZA,UAAAqe,QAAAA,SAAAlG,GR8nDkBA,EAAKhI,KAAKhB,MAAMkQ,iBAAmBtJ,EAAWnH,UAAUyQ,gBAAkBlH,EAAKhI,KAAKjB,IAAImQ,iBAAmBtJ,EAAWoJ,QAAQE,iBAChIrf,EAAMO,KAAK8d,UAAYlG,EAAK5Z,MQ5nD5C1B,GAAA8Q,KRgoDiByR,IACHpf,EAAMO,KAAK8d,UAAY,IQ1nDrCxhB,EAAAmD,YAAAA,GR8nDYkE,EAAS,WQ5nDrBqZ,EAAA9L,MAAA,MRioDQ8L,EAAiB+B,YAAc,WQ5nDvC/B,MAAAA,GAAAA,MAAAgC,EAAAA,KAAAA,SR+nDQhC,EQ7nDRjf,OAAAqU,SAAA6M,GR8nDcC,KAAa,GAAQ/B,EAAQgC,QAC7BD,KAAa,GAAU/B,EAAQgC,QQ5nD7CnC,EAAAA,MAAAA,KAAAzK,EAAAA,EAAA3C,QR+nDQoN,EAAiBgC,gBAAkB,WQ5nD3ChC,IAAAA,GAAAA,GAAAA,EAAAwB,EAAAA,EAAAA,KAAAA,OAAA5Z,EAAAxB,EAAAwB,IACAA,QAAAkN,QAAAqL,EAAAiC,KAAAA,GAAAxa,IRgoDQoY,EQ7nDRG,YAAAkC,SAAAA,GACA,MAAAlhB,GAAAwS,WAAAf,IR+nDQoN,EQ7nDR7O,eAAAhQ,SAAAA,GR8nDUyG,EQ7nDV0a,SAAAzM,EAAA0M,WAAAA,EAAAA,OR+nDQvC,EQ7nDRnK,YAAA2M,SAAAA,EAAAA,GR8nDU,GAAIH,GAAQlC,EAAQkC,MQ5nD9BrC,EAAA9L,IAAA8L,EAAA9L,YAAAA,UR8nDc2B,EAAa,GAAIvB,MAAKA,KAAKmO,IAAItR,EAAShQ,GAAKmhB,MAAQD,EAAMC,MAAQ,GAAKthB,EAAOmQ,EAAShQ,GAAKuhB,OAASL,EAAMK,OAAS,GAAK1hB,EAAO,GQ5nD/Igf,SAAAA,OAAA2C,EAAAA,IACAL,KAAAM,EAAAC,iBACAH,MAAA1hB,EAAA8H,cACA8J,KAAAgP,EAAA5B,eAEAA,EAAA4C,UR+nDQ5C,EQ7nDR2C,aAAA,SAAA7e,GR8nDU,GAGIuN,GQhoDdA,EAAAA,EAAAwR,OAAAvO,IACAtT,EAAAA,SAAA8C,EAAA+e,OAAA,EAAA/e,EAAAmC,OAAA,GAAA,IR8nDc2b,EQ7nDdA,EAAAvQ,MR+nDU,QAAQuR,GACP,IQ7nDXvR,IACA,EAAAuQ,GR8nDcvQ,EAAY,GAAIiD,MAAKsN,EAAQjB,cAAeiB,EAAQhB,WAAYgB,EAAQf,UAAY7f,EAAQ,GQ5nD1G,KAAAA,IR8nDgB4gB,EAAUvQ,KQ3nD1BA,EAAAuQ,EACAvQ,EAAAA,GAAAiD,MAAAA,EAAAsN,cAAAjB,EAAAiB,WAAAhB,EAAAgB,UAAAf,GRgoDY,MAED,KQ9nDXe,IR+nDY,GAAIkB,GAAMlB,EAAQpB,QQ7nD9B,IAAAxf,GR+nDcqQ,EAAY,GAAIiD,MAAKsN,EAAQjB,cAAeiB,EAAQhB,WAAYgB,EAAQf,UAAoB,EAAR7f,GAAmB,GAAN8hB,EAAW,IQ9nD1HlB,EAAA,GAAAtN,MAAAsN,EAAAjB,cAAAiB,EAAAhB,WAAAgB,EAAAf,UAAA,GAAAiC,KAEAzR,EAAA,GAAAiD,MAAAsN,EAAAjB,cAAAiB,EAAAhB,WAAAgB,EAAAf,UAAA,EAAAiC,EAAA,GRgoDclB,EQ/nDd5gB,GAAAA,MAAA4gB,EAAAjB,cAAAiB,EAAAhB,WAAAgB,EAAAf,UAAA,EAAA7f,GAAA,EAAA8hB,IRioDY,MAED,KQ/nDXzR,IACA,IAAAuQ,ERgoDcvQ,EAAY,GAAIiD,MAAKsN,EAAQjB,cAAeiB,EAAQhB,WAAY,GQ9nD9E,EAAA5f,GRgoDcqQ,EAAY,GAAIiD,MAAKsN,EAAQjB,cAAeiB,EAAQhB,WAAa5f,EAAO,GQ/nDtF4gB,EAAA,GAAAtN,MAAAsN,EAAAjB,cAAAiB,EAAAhB,WAAA,KRkoDcvP,EAAY,GAAIiD,MAAKsN,EAAQjB,cAAeiB,EAAQhB,WAAa,EAAG,GQ/nDlF9f,EAAAiT,GAAAA,MAAA1C,EAAAA,cAAA0C,EAAA6N,WAAA5gB,EAAA,EAAA,IRuoDU,GQhoDVT,QAAAA,OAAAmU,IAAA8D,QAAAA,OAAAA,GAAAA,CACAjY,EAAA6T,WAAAA,GAAAA,GAAAA,MAAAA,GACA3R,EAAAqe,WAAAA,GAAAhd,GAAAA,MAAAA,ERioDY,IAAI0U,GAAajY,EAAW6c,YAActc,QAAQH,KAAKJ,EAAW6c,eAClE5E,GAAWnH,UAAYvQ,QAAQH,KAAK0Q,GQ/nDhD2O,EAAAA,QAAAlK,QAAAnV,KAAAihB,GACApc,EAAAC,aAAA,EACAD,EAAA8I,cAAAkK,GACAjY,EAAAwV,UACAtT,EAAAoD,KAAAib,UAAAhd,IRmoDQkc,EAAiBlK,aAAe,SAAStQ,GACvCA,EQhoDVuQ,gBAAAC,GRioDUxQ,EAAI8I,iBAAgB,EACpB,IAAIyH,GAAWjV,QAAQpB,QAAQ8F,EAAIlC,OQ/nD7CuC,KACA+B,WAAAoN,EAAAgL,GAAAA,SAAAA,gBRioDcjK,EAAWA,EAASrJ,UQ9nDlChN,EAAA4M,eAAAA,URyoDQ,IQhoDR5M,GAAA0I,EAAA6D,IRioDQ+T,GQhoDR/T,KAAA,WRioDU,MQhoDVvM,IAAAJ,EAAA8S,WRioDY1S,EAAQ0I,KAAK,OAAQ,YQ/nDjCiK,GAAAA,IAAAA,qBAAAA,eAEA0E,IACAiJ,EAAAA,KAAA3T,OAAAA,QACA3M,EAAAmP,KAAAA,WAAAkB,QACArQ,EAAAyG,GAAAA,QAAAiM,QAEA2E,MAEA,IAAAC,GAAAgJ,EAAApc,OACAoc,GAAApc,QAAA,WAEAlE,GAAA0L,EAAA2E,WACAiH,EAAAA,IAAAA,QAAAA,GRioDUD,IAEF,IAAIC,GQ/nDZgJ,EAAApc,IRgoDQoc,GAAiBpc,KAAO,WQ9nDhCqT,EAAA+I,KAAAA,cACAA,IACArZ,EAAAqZ,WACAA,EAAA/Y,UACAgQ,EAAA5I,SAAAA,GAAAA,EAAAA,aAAAA,YAAAA,EAAAA,eRgoDa,GAAG,IAER,IAAI4I,GAAQ+I,EAAiBhb,IQvnDrC,OAPA+a,GAAAA,KAAA7f,SAAAA,GACA6f,EAAAA,WRgoDUC,EAAiB/Y,SAASd,IAAIN,EAAU,aAAe,YAAama,EAAiBlK,cQ7nD/FvH,EAAAF,KAGA2R,ER80CM,GQnmDNnR,GAAAkU,6BAAA/C,KAAAA,EAAAA,UAAAA,WACAA,EAAAA,eAAA+C,GAAAzC,UAAAA,CAuRA9d,OAtRAtC,GAAAiR,OAAA4R,EAAA5R,KAAAA,EAAAA,oBAqRA+F,EAAAhX,SAAAA,EACA6f,MR+nDKxR,UQ7nDL9L,qBAAAA,UAAAA,SAAAA,KAAAA,iBAAAA,cAAAA,mBAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GR8nDI,GAAIoM,GAAW,6BAA6B5E,KAAKkN,EAAQC,UAAUC,UACnE,QACE3I,SQ7nDN5N,MR8nDMoW,QAAS,UACT1U,KQ7nDNwM,SAAAA,EAAAtP,EAAA0L,EAAA7K,GRurDQ,QQ5nDRqS,GAAA4F,GR6nDU,GAAI5F,EQlnDd,ORonDYA,GQ7nDZA,QAAAmB,OAAAyE,GR6nDmBA,EQ3nDnB5F,WAAAA,EAAAA,SR6nDmBqF,EAAWS,MAAMF,EAAY,KAAMlZ,EAAQ0f,iBQ3nD9DgE,SAAAA,EAAAA,SACAliB,GAAAiT,MAAAkP,IAAAlP,GR8nDmB,GAAIO,MAAKkE,GAIpB,QQ5nDRjY,GAAAgX,EAAAA,GACAhX,IAAAA,QAAAoX,OAAAA,KAAAF,QAAAA,OAAAA,GACAlX,OAAAA,CAEA,IAAAgX,GAAA5O,MAAAua,EAAAtY,SAAA2U,UAAA0D,EAAAhP,WAAAiP,EAAAtY,SAAA2U,QACAjI,EAAA3O,MAAAua,EAAAtY,SAAA4U,UAAA2D,EAAAlP,WAAAiP,EAAAtY,SAAA4U,QACAjf,EAAAA,GAAAkhB,CR6nDUlhB,GQ5nDVA,aAAAkhB,OAAAA,GR6nDUlhB,EQ5nDVoX,aAAA,MAAAF,GR6nDUlX,EQ5nDVA,aAAA2S,MAAA+P,ER6nDU,IQ5nDV1iB,GAAAA,EAAAwhB,aRsoDU,OATIxK,KACEuI,GQ3nDhBvf,EAAAkhB,kBAAA,GAAAwB,ER6nDc1iB,EAAWkhB,kBAAkB,GAAK0B,IQ1nDhDrD,EAAAoD,WAAAA,GAAAnB,EACAxhB,EAAAuX,WAAA,GAAAqL,KR+nDiB,EAgGT,QQtnDRC,KRunDU,IQtnDVjhB,EAAAib,cAAA7c,EAAA6c,YAAAwE,WAAAtiB,MAAAyf,EAAAA,YAAAA,UAAAA,WRunDY,MAAO,EAET,IAAI5c,GAAO8O,EAAW1Q,EAAW6c,YAAY/L,UAAW/R,EAAQyf,WAMhE,OQ3nDVjP,GAAAsN,YAAA0C,SAAAvf,EAAA6c,YAAAsE,mBAAA/Y,MAAApI,EAAA6c,YAAAsE,iBAAAzN,WACA9R,GAAA+gB,OAAAA,EAAAA,EAAA7W,YAAAA,iBAAAA,EAAAA,YACA9L,EAAA6c,YAAA0C,UAAAvf,EAAA6c,YAAAwE,SAAAjZ,MAAApI,EAAA6c,YAAAwE,QAAA3N,aACAiP,GAAAA,MAAAjS,EAAA1Q,EAAA6c,YAAAwE,QAAAtiB,EAAAyf,aRwnDiB5c,EQj0DjBrB,GAAAA,IACA2B,MAAA3B,ER+nDQA,SAAQC,SAAU,WAAY,cAAe,aAAc,eAAgB,YAAa,YAAa,QAAS,UAAW,OAAQ,YAAa,YAAa,WAAY,YAAa,aAAc,WAAY,kBAAmB,YAAa,eAAgB,YAAa,YAAa,YAAa,OAAQ,UAAW,WAAY,YAAa,qBAAsB,KAAM,cAAe,cAAe,WAAa,SAASI,GAC3ZL,QAAQyL,UAAUnB,EAAKjK,MAAO7B,EAAQ6B,GAAOiK,EAAKjK,KAExD,IQ7nDR6N,GAAA7N,eR8nDQL,SQ7nDRA,SAAAyL,OAAAnB,YAAA,YAAA,YAAA,WAAA,SAAAjK,GACA7B,QAAA6B,UAAAsB,EAAAwM,KAAAC,EAAAA,KAAAA,EAAAA,MR8nDY5P,EAAQ6B,IAAO,KQ1nD3B7B,QAAAA,SAAA4jB,eAAAtY,SAAAA,eAAAA,UAAAA,SAAAA,GACA,GAAAiE,GAAAA,KAAAvP,EAAAyQ,OAAAA,GAAAzQ,cAAAyf,EAAAA,MAAA,EACArM,SAAApT,UAAAoT,EAAAA,MACAzB,EAAAA,GAAAxO,EAAAwM,MAAA2D,EAAA1B,MAGA,IAAA+G,GAAAC,EAAAA,EAAAA,EAAAA,ER8nDQ5Y,GQ7nDRA,EAAAyf,SACArM,GAAAA,EAAAA,YAAAA,EAAAA,WAAAA,aR8nDQ,IQ7nDR2Q,GAAA/jB,EAAAggB,KR8nDYrO,EAAa,SAAS2B,EAAM1B,GQ5nDxCpQ,MAAAC,GAAAkQ,WAAA2B,EAAA1B,EAAAwB,IAEAtH,EAAAmE,GR8nDU2B,OQ7nDVgS,EAAAA,WR8nDUxQ,KQ7nDVA,ER8nDU2Q,OQ7nDVH,EAAAA,cR+nDQpiB,SQ7nDRC,SAAAR,UAAA2S,WAAA,SAAA/R,GR8nDcL,QQ7nDdkiB,UAAAA,EAAAA,KR8nDY5X,EAAKmE,SAASpO,EAAK,SAASqO,GAC1B0T,EAAgBtY,SAASzJ,GAAO8W,EAAWqL,oBAAoBniB,EAAKqO,GAC/D7G,MAAMua,EAAgBtY,SAASzJ,KAClC+hB,EAAgBhP,QAAO,GQ3nDvC3E,EAAA2D,YACAgQ,EAAAnE,EAAAvP,WAAAA,GAAAA,EAAAA,WAAAA,QAKA0T,QAAAA,UAAA7K,EAAA0G,aR8nDU3T,EAAKmE,SQ7nDf2T,aAAAnB,SAAAA,GACAmB,EAAA7K,SAAA9X,WAAAkhB,IRgoDQhf,EAAMkN,OAAOvE,EAAKgN,QAAS,SAAS5I,EAAUF,GQ5nDtDE,GAAAA,EAAA+T,YAEAL,EAAAM,OAAAhL,KAAAA,MAAAA,GACA5F,EAAAA,cACAsQ,EAAAnP,OAAAyE,EAAAiJ,kBAAA,GAAAlhB,EAAAkhB,kBAAA,IR8nDYyB,EQ5nDZ5jB,OAAAwf,EAAA5L,WAAA,GAAA3S,EAAA2S,WAAA,MR8nDW,GAoCH3S,EQ5nDRuX,SAAAgI,QAAAA,SAAAA,GR6nDU,GQ5nDVA,GAAAhI,EAAAA,aR6nDU,KAAKA,EQ1nDf,MADAvX,GAAA0iB,aAAAA,QAAAA,GACAE,IR8nDU,IQ5nDVF,EAAAA,YR8nDY,MQ7nDZE,GAAAA,QAAAlL,EACAH,CR8nDU,IQ5nDVqL,GR6nDcA,CAcJ,IQzoDVF,GACAE,EAAAriB,EAAAH,MAAAsiB,EAAAA,iBAAAA,EAAAA,kBAAAA,IR6nDYE,EAAclL,EAAWS,MAAMZ,EAAU6J,eAAgBphB,EAAWkhB,kBAAkB,MQ1nDlGwB,EAAAniB,EAAAH,MAAAwiB,EAAAA,UAAAA,EAAAA,WAAAA,IR6nDYA,EAAclL,EAAWS,MAAMZ,EAAU8J,QAASrhB,EAAW2S,WAAW,KQ1nDpF3S,IAAAoX,IACAwL,EAAAriB,QAAAH,KAAAsiB,KAEAD,GAAAA,IACAC,EAAAQ,QAAAA,KAAAA,KAEA3D,GAAAA,MAAAA,EAAAA,aAAAA,GAAAA,MAAAA,EAAAA,WAEA,MR2nDYvf,GAAWoX,aAAa,QAAQ,IQ3nD5C+L,CAEAV,GAAAC,EAAAE,ER6nDU,IQ5nDVM,IACAA,UAAA7B,EAAA9J,UACA4L,QAAA5D,GR8nDc4D,EQ5nDd,GAGAA,EAAA,EAUA,IATAC,GR2nDYF,EAAIpS,UAAYyG,EAAUzG,UQznDtCoS,EAAAnkB,QAAAwf,EAAA8C,QACA6B,EAAAC,mBACAD,EAAAE,mBR4nDYD,EAAO,YQznDnBC,EAAAC,WAEA,WAAA9D,EAAAA,SR6nDY,MQ5nDZ8D,GAAAA,GAAA3L,EAAAK,EAAAA,qBAAAmJ,EAAAA,EAAAniB,UAAA4Q,GAAA5Q,EAAA0f,iBAAA1f,EAAAyf,YACA8E,EAAAA,GAAA5L,EAAAK,EAAAA,qBAAAmJ,EAAAA,EAAAniB,UAAA4Q,GAAA5Q,EAAA0f,iBAAA1f,EAAAyf,YACA0E,CR4nDU,IQ1nDVI,GR2nDcA,CAqBJ,OQ9oDVvkB,IACAmkB,EAAAC,EAAAzP,qBAAAA,EAAAA,kBAAAA,GAAAA,EAAAA,UAAAA,GACAwP,EAAAE,EAAA1P,qBAAAA,EAAAA,kBAAAA,GAAAA,EAAAA,UAAAA,KAEAwP,EAAAC,EAAAzP,qBAAA1T,EAAA2S,WAAA,GAAA5T,EAAA4Q,UAAA,GACAuT,EAAAE,EAAA1P,qBAAA1T,EAAA2S,WAAA,GAAA5T,EAAA4Q,UAAA,IAEA4T,WAAAL,EAAAC,UACAD,EAAAE,GAAAE,EAAAC,UR2nDYL,EAAIE,GQ1nDhBE,EAAA5P,WACA2P,SAAAF,EAAApP,UACAmP,EAAAE,GAAAC,EAAAtP,UAAAuP,IR2nDYJ,EAAIE,GAAQE,EAAM5P,UAAY,KQznD1CwP,QAAAA,EAAAA,UR2nDYA,EAAIC,GAAQE,EAAME,cQznD9BvjB,EAAAA,GAAAgY,EAAAA,gBAEAkL,EAAA7B,GAAAA,GAAAA,MAAAA,GACA6B,EAAA3iB,GAAAgR,GAAAA,MAAAA,IAEA2R,IR4nDQljB,EQ1nDRqhB,YAAA4B,KAAAA,SAAAhL,GR2nDU,GQ1nDVjY,GR2nDcqhB,CACJ,OQ1nDVrhB,SAAAA,YAAAwjB,IAAAC,OAAAA,EACAzjB,IACA2iB,EAAAP,WAAApiB,EAAAwjB,SR2nDY1S,EAAYmS,EAAiBhL,EAAWnH,WQznDpD9Q,EAAAkhB,EAAAA,EAAAA,SAEAlhB,EAAA6iB,YAAAA,EAAAA,qBAAAA,EAAAA,EAAAA,UAAAA,EAAAA,qBAAAA,EAAAA,EAAAA,YR0nDqB5K,EAAWwL,YQxnDhCzjB,EAAA6T,WAAAoE,EAAAwL,UACAtkB,EAAA0jB,WAAAA,EAAAA,WAAAA,EAAAA,cR0nDYF,EAAgBP,aAAapiB,EAAWwjB,aQpnDpDxjB,EAAAA,qBACA6iB,ORwnDQ7iB,EQtnDR4B,QAAA8O,WACAvR,EAAAa,IAAAA,MAeAgD,EAAAA,IAAA,WAAA,WACAqB,GAAAqf,EAAAA,UACAC,EAAAA,KACAhB,EAAA,YRynDO3f,SAAS,uBAAwB,WQpnDxC,QAAA4gB,GAAAC,EAAAC,GRunDM,IQtnDN,GAAAH,MRsnDaI,EAAIre,OAAS,GQpnD1B5F,EAAAmE,KAAA8f,EAAA5K,OAAA,EAAAuK,GRunDM,OQrnDNxhB,GRunDI,QQrnDJiQ,GAAAA,EAAApT,GRsnDM,OQrnDN2R,EAAAA,EAAAA,GAAAoT,ERunDIhkB,KAAKmE,MAAS,iBAAkB,cAAe,OAAQ,SAAS4O,EAAgB8E,EAAa3M,GAC3F,MQrnDN0M,UAAAA,GRsnDQ,GQrnDR/G,GAAA5R,EAAAyf,OACArM,EAAAA,EAAAA,SACA2Q,EAAA/jB,EAAAggB,KRsnDYrO,EAAa,SAAS2B,EAAM1B,GQpnDxC,MAAAqT,GAAAnR,WAAAoR,EAAAA,EAAA9R,IAEA+R,EAAAA,GAEAvT,OAAAG,EAAAqT,WACAhS,KAAAkP,EACAyB,OAAAlS,EAAAA,eAEAmR,EAAAjR,EAAAsP,cAAAA,GACA+B,EAAA9B,EAAAA,MAAAA,EAAAA,WAAAA,OAAAA,EAAAA,MAAAA,EAAAA,EAAAA,YACAhO,EAAAiO,EAAAA,YAAAA,+BAAAA,EAAAA,KAAAA,qCAAAA,SRqnDYxP,EAAYqT,EAAOxP,OAASwP,EAAOxP,MAAM,KAAO5V,EAAQ+R,UAAY4G,EAAWqL,oBAAoB,YAAahkB,EAAQ+R,WAAa,GAAIiD,OQnnDrJsN,EAAAA,EAAAA,OAAAA,EAAAA,MAAAA,KAAAA,EAAAA,QAAAA,EAAAA,oBAAAA,UAAAA,EAAAA,SAAAA,GAAAA,OACAU,GRqnDUjR,WQnnDVuB,KAAAgP,EAAAf,cRqnDY6B,MAAOrR,EAAUuP,WACjBhO,KAAMvB,EAAUwP,WQlnD5B3P,SACAtM,KAAAgd,EAAAjB,cACA0B,MAAAA,EAAAA,WACAK,KAAAA,EAAA7B,YAGA1P,GRqnDUD,OQpnDVoR,EAAA3B,URqnDU/b,MQpnDV8d,ERqnDUL,OACEK,MAAO,GAETrK,OQpnDViK,SAAA3B,EAAAA,EAAAA,GRqnDYxP,EQpnDZgQ,WACAvO,KAAAuO,EAAAN,cRqnDc6B,MAAOxB,EAAMN,WQnnD3B8D,KAAAxQ,EAAAA,WAEAyQ,EAAA/C,SACAU,KAAAsC,EAAAvkB,cACAoC,MAAAoB,EAAAA,WACApB,KAAA2S,EAAAA,WRsnDYsP,EQpnDZ9J,URsnDU+J,MQpnDV,WRqnDY,GQpnDZC,GAAAC,IRqnDYpiB,GQpnDZqiB,SRqnDYriB,EQpnDZ2d,SACA,YAAA0E,WAAAC,QAAAA,SAAAA,EAAAF,GACA,GAAAG,GAAAA,EAAAA,GACAlC,EAAAA,GAAAA,MAAAA,EAAAA,KAAAA,EAAAA,MAAAA,GACAiC,EAAA3e,EAAA6e,oBACAnC,EAAA7K,GAAAiN,OAAAA,EAAAL,MAAAvQ,EAAAA,EAAAqM,SAAAkE,EAAAA,UAAAjE,IACAoE,EAAAnQ,EAAAA,oBACAjC,EAAAkQ,EAAAA,qBAAAA,GAAAA,MAAAA,EAAAA,UAAAA,cACAqC,KAAArD,IAAA1B,EAAAA,GAAAA,OAAAA,EAAAA,KAAAA,EAAAA,IRunDc,KQpnDdgF,GADApQ,GADAD,KAEAqQ,EAAAR,EAAAS,GAAAT,EAAAS,IRqnDgBvC,EQpnDhBwC,EAAA1E,qBAAA8B,GAAAA,MAAAA,EAAAA,cAAAA,EAAAA,WAAAA,EAAAA,UAAAA,IRqnDgBsC,EQpnDhBlQ,MACAyQ,KAAAA,ERqnDkBJ,QAASrC,EAAIhB,iBAAmB1B,EAChCrL,MAAO9D,EAAW6R,EAAK8B,EAAK1T,QQnnD9CzO,SAAAkR,EAAA1C,OAAAA,EAAAuU,MAAAA,MAAAlmB,EAAA8f,eAAAA,EAAAA,gBAAAA,IAAAA,EAAAA,WAAAA,EAAAA,MAAAA,GAAAA,GACA3c,QAAAkR,EAAAA,UAAAqR,GRqnDkBM,MAAOxC,EAAIlC,aAAehG,EAAK8H,MQnnDjD+C,SAAA,IAAAA,GAAAhjB,EAAAO,KAAA8c,SAAA8E,EAAAxC,WAAAU,EAAAnP,GACA+R,cAAAjB,IAAAA,GAAAA,EAAAA,KAAAA,SAAAA,EAAAA,cAAAA,EAAAA,aAAAA,IAAAA,EAAAA,WAAAA,EAAAA,aAAAA,GAAAA,IRunDchiB,GAAMoB,MAAM8P,GAAS1C,EAAWuU,EAAiBlmB,EAAQ8f,kBQnnDvEuG,EAAAA,KAAAhS,GAAAiS,EAAAA,EAAAhT,EAAAA,SRsnDYnQ,EAAMgjB,YAAa,EQhnD/BJ,EAAAA,OAAAZ,EACAhiB,EAAAiiB,gBAAAA,KAAA3C,WAAAA,GAAAzN,ORknDYjU,KQjnDZ8hB,OAAA,GRmnDUwD,WQjnDVpG,SAAAmF,EAAA9R,GACA,MAAA4M,IAAAtK,EAAAyL,gBAAAiF,EAAAjF,eAAA/N,EAAAgO,aAAAgF,EAAAhF,YAAAhO,EAAAiO,YAAA+E,EAAA/E,WRmnDUwE,UQjnDV,SAAAzS,GRknDY,IAAK8R,EAAOxP,OAASwP,EAAO3C,cQhnDxC,OAAAnP,CAEAwP,IAAAA,GAAAsC,EAAA9R,MAAAe,GACAnB,EAAAI,EAAAqB,MAAAA,EACA,OAAAzB,SAAA8B,OAAAoE,IAAA6G,QAAAA,OAAA/M,IAAAlT,QAAAkgB,OAAAA,GAIA/c,EAAAO,WAAA8c,EAAA4E,WAAA/Q,EAAAA,WAAA+Q,EAAAxP,WAHA,GRqnDUkN,WAAY,SAASxP,EAAMe,GQ/mDrC,GAAArU,GAAAA,EAAAqgB,SRinDY,IQhnDZnN,EAAA8B,KAAAoE,MAAApZ,EAAAigB,UAAA/M,EAAA8B,KAAAoE,MAAApZ,EAAAkgB,SRinDc,OAAO,CAET,KQhnDZ/c,EAAA2D,KAAA0Z,SAAAxgB,EAAA8hB,QAAAA,GAAAnb,EAAAG,EAAA8O,MAAAvB,EAAA,IAAAnB,EAAAkS,EAAAxP,MAAAvB,EAAA,IRinDc,OQhnDdnB,CRknDY,IAA0D,KAAtDlT,EAAQqgB,mBAAmBlG,QAAQ7G,EAAK4N,UAC1C,OAAO,CQ9mDrB,IAAAlhB,EAAA8hB,mBRinDc,IAAK,GAAIhb,GAAI,EAAGA,EAAI9G,EAAQ8hB,mBAAmBnb,OAAQG,IACrD,GAAIoM,GAAQlT,EAAQ8hB,mBAAmBhb,GAAGwL,OAASY,GAAQlT,EAAQ8hB,mBAAmBhb,GAAGuL,IQ/mDzG,OAAA,CRonDY,QAAO,GSxxEnB7Q,QAIAZ,KAAAA,EACAC,SAAAgR,QT6xEErQ,QSrxEFzB,OAAAA,0BAAA,2BAAAkE,SAAA,WAAA,WTsxEI,GSrxEJxB,GAAAA,KAAA7B,UACAwD,UAAA,UACAC,YAAA,GACAxB,WAAA,EACA0B,QAAA,EACAgiB,UAAA,QACA9hB,YAAA,2BACAC,iBAAA,ETsxEMN,QAAS,QSnxEfrD,UAAAmE,EAEArC,MAAA,EToxEM0B,MSjxENvE,GTkxEMumB,QShxENC,GTixEM/hB,MS9wENzE,ET+wEM0E,WS9wEN8hB,ETgxEIzlB,MS7wEJmE,MAAAshB,WAAAA,SAAAA,GT8wEM,QAASC,GAAermB,EAASmL,GS1wEvC,GAAAvL,GAAAymB,QAAAA,UAAAA,EAAAA,GT4wEYD,EAAWphB,EAAShF,EAASJ,ESjwEzCoP,OALAH,GAAAsX,UAEAG,EAAAA,OAAAA,QAAA7O,EAAA6O,SAGAtX,EAEAlM,MAAAujB,OTuwEKxX,USnwELjP,aAAAA,UAAAA,OAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GTowEI,GAAI0mB,GSpwERvjB,EAAAA,uBAAAA,EAAAA,UTqwEI,QACEiM,SSrwEN3N,MTswEM0B,OSrwEN,ETswEMD,KAAM,SAAkBC,EAAO/C,EAAS0L,GSlwE9C,GAAA4D,GACAlO,GACA2B,MAAA3B,EAIAA,SAAAC,SAAA,WAAA,cAAA,aAAA,eAAA,kBAAAI,YAAAA,YAAAA,QAAAA,UAAAA,OAAAA,YAAAA,cAAAA,YAAAA,KAAAA,cAAAA,cAAAA,aAAAA,SAAAA,GACA+N,QAAA3C,UAAApL,EAAA6Z,MAAAC,EAAAA,GAAA9Z,EAAAiO,KTmwEQ,ISjwER9P,GAAAmD,eTkwEQ3B,SAAQC,SAAU,OAAQ,YAAa,aAAe,SAASI,GACzDL,QAAQyL,UAAUnB,EAAKjK,KAAS6N,EAAiB/E,KAAKmB,EAAKjK,MAAO7B,EAAQ6B,IAAO,KS7vE/FL,QAAAA,SAAAyL,eAAA4C,SAAA,eAAA,UAAA,SAAAhO,GACA,GAAA6N,GAAAA,KAAAA,EAAA/E,OAAAkF,GAAAA,cAAAhO,EAAAiO,MAAA,EACA9P,SAAAgE,UAAA8H,EAAA8D,MTgwEY5P,ES/vEZ6B,GAAAsB,EAAAwM,MAAA7D,EAAA8D,MTkwEQ,IAAIC,GAAazP,EAAQ0L,KAAK,cS5vEtCtK,SAAAC,UAAAoO,KACA/D,EAAAnB,KAAAkF,GACA/D,EAAAmE,QAAApO,ET+vEY7B,ES7vEZwB,OAAAyL,GTgwEQzL,QAAQC,SAAU,QAAS,WAAa,SAASI,GAC3CiK,EAAKjK,IACPiK,EAAKmE,SAASpO,EAAK,SAASqO,EAAUF,GACpC7M,EAAMtB,GAAOoK,EAAKC,YAAYgE,GAC1B1O,QAAQyL,UAAU+C,IS1vEpClE,EAAA,WACAuE,GAAAsW,EAAA7Y,wBAMAhC,EAAAtK,WT4vEU2B,ES3vEVujB,OAAAA,EAAAA,UAAA,SAAAxW,EAAAF,GACAxO,QAAAolB,SAAAA,GT4vEcplB,QAAQS,OAAOkB,EAAO+M,GSzvEpC/M,EAAAojB,QAAArW,EAIApE,QAAAsE,UAAAJ,IACA7M,EAAA,WACAyjB,GAAAplB,EAAAyL,sBT4vEa,GAEDnB,ESzvEZ8a,QT0vEUzjB,EAAMkN,OAAOvE,EAAKsE,OAAQ,SAASF,EAAUF,GACtC4W,GAAYplB,QAAQyL,UAAUiD,KAC/B1O,QAAQG,SAASuO,KAAWA,IAAaA,EAASI,MAAM,wBStvExExE,KAAA,EACA3I,EAAAkN,OAEAuW,EAAAplB,UT2vEYsK,ESvvEZ8a,WTwvEUzjB,EAAMkN,OAAOvE,EAAKnH,UAAW,SAASuL,GAC/B0W,GAAYplB,QAAQyL,UAAUiD,KAC/B1O,QAAQG,SAASuO,KAAWA,IAAaA,EAASI,MAAM,0BSpvExExE,KAAA,EACA3I,EAAAkN,YAAAvL,GAEA8hB,EAAArW,YAAAL,MAQA/M,EAAAqN,UACArN,EAAAyjB,OAAAA,EAAAA,SAAA7Z,SAAAA,GACA/M,GAAAwB,QAAAyL,UAAAiD,IACA0W,EAAArW,YAAAL,KTovEQ0W,EAAUJ,EAASpmB,EAASJ,GAC5BmD,EAAMqN,IAAI,WAAY,WUj5E9B/P,GAAAmmB,EAAA7Z,UAEAnM,EAAAG,KACAF,EAAA,YVs5EEW,QAAQf,OAAO,gCAAiCwD,SAAS,cAAe,WU/4E1E,GAAAhD,GAAAA,KAAAF,UAKAA,UAAA8lB,UV64EMC,UU54ENC,aV64EMC,YU14ENC,EV24EMC,aAAc,GUx4EpBnmB,YAAAomB,kCV24EQlmB,EUz4ERmmB,KAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GV04EMrmB,KUz4ENsmB,oBAAAA,SAAAA,EAAAA,GV04EQ,GUz4ERpN,GAAAqN,EAAAA,EAAAA,EAAAA,KAAAA,KAAAA,EAAAA,EV04EQ,OAAOL,MAAKM,IAAIR,GAAc,EAAG,IU/3EzChmB,KAAAymB,SAAA,SAAAC,EAAAA,EAAAV,GAEAU,OAIAL,OAAAM,EACAL,KAAAvgB,EAEAmT,OAAA8M,IV+3EMhmB,KAAKymB,SAAW,SAASC,EAAaV,EAAYC,GAChDS,EU33ER,EAAAA,EAAA,EAAAV,EAAA,GAAAU,EAAAV,EAAAA,EAAAU,CV43EQ,IUz3ER3gB,GADA4gB,IV43EQ,IUz3ER5gB,GAAAigB,EV03EU,IUz3EVW,EAAAA,EAAA3mB,GAAAwU,EAAAzO,IV03EY4gB,EAAMnS,KAAKxU,KAAKomB,SAASrgB,EAAGA,EAAGA,IAAM2gB,QUv3EjDC,CV03EU,GAAIrf,IUx3Edof,EAAAV,GAAAA,CVy3EU,IUx3EVI,GAAAO,EAAA,CACAA,IAAAA,EAAAnS,EAAA4R,EAAAJ,GAAAhmB,EAAAgmB,IACAW,EAAA5gB,KAAAuB,KAAAvB,SAAAA,EAAAA,EAAAA,IAAA2gB,GV03EYC,GUx3EZA,KAAAnS,KAAAxU,SAAAomB,EAAApf,EAAAA,OAAA0f,IVy3EYC,EAAMnS,KAAKxU,KAAKomB,SAASJ,EAAYA,GAAY,QUt3E7D,IAAAU,EAAAV,EAAA1e,EAKAqf,IAHAA,EAAAnS,KAAAxU,KAAAomB,SAAA,EAAA,GAAA,IAEAO,EAAAC,KAAAV,KAAAW,SAAAvf,EAAAA,EAAA,EAAA,OAAA,IACAqf,EAAAnS,EAAA4R,GAAAA,EAAAM,IAAAA,CACA,GAAA3gB,GAAA6gB,EAAA7gB,CACA4gB,GAAAnS,KAAAxU,KAAAomB,SAAAM,EAAAA,EAAAA,IAAAA,QAEAC,CACAA,EAAA5gB,KAAA/F,KAAA+F,SAAAA,EAAA,GAAA,GVs3EY,IUr3EZ4gB,GAAAnS,KAAAxU,KAAAomB,EAAAM,EAEAC,KVo3EYA,EAAMnS,KAAKxU,KAAKomB,SAASM,EAAcE,EAAO,EAAG,OAAO,IUp3EpED,EAAAnS,EAAAxU,GAAAomB,EAAAA,IACAO,EAAAnS,KAAAxU,KAAAomB,SAAAJ,EAAAA,EAAAA,EAAAjgB,GAAA,GAGA,KVo3EY4gB,EAAMnS,KAAKxU,KAAKomB,SAASM,EAAaA,GAAa,IUp3E/DC,EAAAA,EAAAA,GAAAA,EAAAA,IVs3EcA,EAAMnS,KAAKxU,KAAKomB,SAASM,EAAc3gB,EAAG2gB,EAAc3gB,GAAG,GUn3EzE5B,GAAAqQ,KAAAxU,KAAAomB,SAAAM,EAAAE,EAAA,EAAA,OAAA,IACAE,EAAAA,KAAAA,KAAAA,SAAAA,EAAAA,GAAAA,KAGA,MAAAA,IAIA9mB,MAAAH,KAAAA,WACA,GAAAinB,KAGA1kB,OAFAiM,GAAAxO,SAAAA,EACAgX,EAAA3W,WAAAA,EACA4mB,KVs3EK5Y,UUp3ELhO,gBAAA,UAAA,OAAA4mB,SAAAA,cAAA5mB,SAAAA,EAAAA,EAAAA,EAAAA,GVq3EI,GUp3EJlB,GAAA8nB,EAAAznB,QVq3EI,QACEgP,SAAU,IUn3EhBlM,SAAA,WAAAyX,gBVq3EMxX,OUp3ENyX,EVq3EM9X,SUp3ENglB,EVq3EM7mB,YUn3EN2Z,SAAA,WAAA,SAAAiN,EAAA5mB,YVo3EMlB,YUn3EN,SAAAK,EAAA0L,GVo3EQ,MAAOA,GAAKvL,UAAYK,EAASb,aAEnCmD,KUh3EN1B,SAAA2B,EAAA/C,EAAA0a,EAAAK,GVi3EQ,GUh3ERP,GAAA3N,EAAApL,GACA7B,EAAAmD,EAAA2X,EVi3EQ,IAAKF,EAAL,CAGA,GUh3ER5a,GAAAwB,QAAAK,KAAA6Z,EVi3EQla,SUh3ERA,SAAAyL,YAAA2C,cAAA,gBAAA,SAAA/N,GACA7B,QAAA6B,UAAAsB,EAAAwM,MVi3EY3P,EAAQ6B,GAAOsB,EAAMwM,MAAMmL,EAAMjZ,OAGrCL,QU/2ERyO,SAAA,YAAA,SAAAC,GVg3EU,GU/2EV/M,GAAA4kB,KAAAA,EAAA7X,OAAAA,GAAAA,cAAAA,EAAAA,MAAAA,EACA/M,SAAA4jB,UAAAe,EAAAA,MACAlN,EAAAA,GAAA9F,EAAAA,MAAAA,EAAAA,OAIA3R,EAAAnD,YAEA8a,EAAA9a,SAAAgnB,aAAA,SAAA9W,EAAAF,GACAhQ,EAAAgnB,WAAAA,EV82EY7jB,EAAM4jB,WAAae,EAAiBjB,oBAAoB7mB,EAAQknB,aAAc/jB,EAAM4kB,YUx2EhGnN,EAAA9F,YV42EQ3R,EUz2ERA,WAAA2kB,EAAAA,UV02EY9nB,EAAQgnB,YAAc,IAAM,IAC9BhnB,EAAQgnB,YAAchnB,EAAQgnB,YAAc,GAE9CpM,EUn2ER9F,QAAA,WVo2EU3R,EUn2EVgD,MAAAA,EAAAA,KAAAA,SAAAA,EAAAA,WAAAA,KAAAA,GAAAA,EAAAA,WAAAA,EAAAA,WAAAA,EAAAA,KVo2EchD,EAAM6kB,KAAO,GAAK7kB,EAAM6kB,MAAQ7kB,EAAM4jB,aUl2EpD5jB,EAAAA,MAAA6kB,EAAAA,SAAAA,EAAA7kB,KAAA4jB,EAAAA,WAAA/mB,EAAAgnB,eVs2EQ7jB,EAAM8kB,WAAa,SAASD,EAAM9hB,GUj2E1C0U,GACAA,EAAAA,iBAIA5a,EAAAA,OAAAkoB,GAAAA,EAAAA,GAAAA,GAAAA,EAAAA,aVi2EgBhiB,GAAOA,EAAIlC,QACbkC,EAAIlC,OAAO+K,OU71EzB5L,EAAAglB,cAAAH,GACApN,EAAAoN,UVg2EgBxmB,QAAQyL,UAAUjN,EAAQkoB,WAAa1mB,QAAQmE,WAAW3F,EAAQkoB,WU71ElFE,EAAAA,aVk2EQjlB,EU71ERA,WAAAA,WV81EU,MAAsB,KAAfA,EAAM6kB,MAEf7kB,EU51ERA,OAAA8kB,WV61EU,MAAO9kB,GAAM6kB,OAAS7kB,EAAM4jB,YAE9B5jB,EAAMklB,eAAiB,SAASniB,GAC9B/C,EAAM8kB,WAAW9kB,EAAM6kB,KAAO,EAAG9hB,IWjiF3CtF,EAAAA,WAAAA,SAAAA,GACAC,EAAAA,WAAAsC,EAAA6kB,KAAA,EAAA9hB,UXwiFE1E,QWniFF0C,OAAA,wBAAA,sBAAA,sCAAAD,SAAA,SAAA,WXoiFI,GWniFJlE,GAAAgB,KAAAH,UACAL,UAAA,UACAkC,kBAAA,UACAmK,YAAA,GACAxM,YAAA,QACAkoB,YAAA,QACAjkB,UAAA,MACAxB,YAAA,uBACAyB,SAAA,GACAqgB,iBAAA,EACA4D,WAAA,EXoiFMnoB,QAAS,KWliFfW,UAAAmE,EACAb,UAAA5C,EACAoB,MAAA6jB,EACApiB,MAAAkkB,EACA7D,KAAA8D,KACAF,OAAAG,KXqiFI3nB,MWniFJmE,MAAAyjB,UAAAA,aAAAA,cAAAA,WAAAA,WAAAA,OAAAA,aAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GX8iFM,QAASC,GAAard,GAkIpB,QWliFRsd,KACA1lB,EAAAA,MAAA2C,EAAA9F,YAAAyF,QAAAojB,GACArnB,QAAAyL,UAAAjN,EAAA4F,SAAApE,QAAAmE,WAAA3F,EAAA4F,SXmiFY5F,EAAQ4F,OAAOijB,GAyBnB,QAAShjB,KWjiFjBrD,EAAAA,UACAgmB,IAEArlB,EAAAnD,MAAAa,EAAAA,YAAA,QAAAgoB,GACAL,QAAAA,UAAA7Z,EAAA3O,SAAAH,QAAA8F,WAAA3F,EAAAa,SXmiFYb,EAAQgG,OAAO6iB,GWhiF3BA,EAAA,UAAAliB,QAAA,GACA6hB,EAAAtd,YAAAlL,EAAAH,YAAA,SXoiFcG,EWliFda,WACAgoB,EAAAvkB,YAAAA,EAAAA,YAAAA,SAAAA,EAAAA,WAmBA,QAAAwkB,KACA9oB,EAAAsoB,WACAS,EAAAliB,GAAAA,QAAAmiB,GACAC,EAAApiB,GAAAA,QAAAmiB,GACAC,EAAApiB,GAAAA,QAAAqiB,IAGA,QAAAniB,KACA/G,EAAAqE,WACA0kB,EAAAziB,IAAA,QAAAuiB,GXmiFYI,EAAgBpiB,IAAI,QAASmiB,GAC7BC,EAAgBpiB,IAAI,QAASqiB,IAGjC,QWliFRH,KXmiFc/oB,EAAQqE,UACV0kB,EAAaziB,GAAG,QAASuiB,EAAO5hB,UAGpC,QWliFRjH,KACA6oB,EAAA7b,UXmiFY+b,EWliFZliB,IAAA,QAAAgiB,EAAA5hB,UXqiFQ,QAAS+hB,GAAoB9iB,GWjiFrCA,EAAAgjB,SAAAA,EAAAA,gBACA/iB,WAAAA,EAAAA,SXmiFY0iB,EAAO7b,QWhiFnB6b,EAAAA,QXqiFQ,QAASK,GAAoBhjB,GWjiFrCA,EAAAijB,iBXoiFQ,QWliFRA,KXmiFcN,EAAO3d,UAA6B,OAAjB6d,IWjiFjCD,IACAC,KXoiFcI,IACFA,EAAW/d,WWjiFvB+d,EAAAC,MAEAC,IACAb,EAAAc,SACAP,EAAAQ,EAAAF,SAAApf,MXqiFQ,QWjiFRuf,KXkiFU,GWjiFVH,GAAAI,EAAAA,cAAA9gB,MXkiFU0gB,GWjiFVG,UAAAC,0BXkiFUjB,EAAYc,OAAOD,EWhiF7B,IAAAK,GAAAA,EAAAhhB,YAAAK,EAAAygB,WAEAhB,GAAAkB,GAAAA,YAAAlB,EXiiFU,IAAIgB,GAAkBG,EAAOC,UW/hFvC,KAAAJ,EAAAK,CACArB,GAAAA,GAAA9f,EAAAC,gBAAAd,uBXiiFY2hB,GAAkBC,EAAoB9f,MAAQsd,KAAK6C,IAAIL,EAAoBthB,MAE7E,GAAIuhB,GAAoBhhB,EAASG,KAAKE,YAAcygB,CW/hF9DE,IAAAvmB,EAAAA,IAAAA,gBAAAA,EAAAA,MXkiFQ,QAAS0mB,KW/hFjBrB,EAAAhmB,IAAAA,gBAAApC,GA/PA,GAAAJ,MACA0oB,EAAAA,EAAAlf,SAAAxJ,QAAAuoB,UAAA3nB,EAAA2K,GACAwe,EAAAA,EAAAA,SAAArB,EAAA1nB,QAAAhB,GXoiFYmD,EAAQ0lB,EAAOpd,OAASzL,EAAQmD,OAASnD,EAAQmD,MAAMuI,QAAUC,EAAWD,MWliFxFmd,GAAA7oB,SAAAqM,EAAArM,YACAyB,EAAAmL,UAAA,QXqiFY5M,EAAQuoB,SWliFpBplB,EAAAqG,SAAAxJ,EAAAuoB,OAAA,IACAplB,EAAAulB,EAAA,IXqiFQG,EAAOhd,IAAM7L,EAAQqM,IAAMrM,EAAQI,SAAWJ,EAAQI,QAAQ0L,KAAK,OAAS,GAC5ErK,GAAU,QAAS,WAAa,SAASI,GWliFjDmoB,EAAAnoB,KAAAsB,EAAAtB,GAAAoK,EAAAC,YAAAlM,EAAA6B,OXqiFQsB,EWniFR0lB,MAAAvkB,WXoiFUnB,EAAMiJ,aAAa,WACjByc,EAAOnjB,UAGXvC,EWniFR0lB,MAAAriB,WXoiFUrD,EAAMiJ,aAAa,WACjByc,EAAOvkB,UWhiFnBnB,EAAA4lB,QAAAA,WACA5lB,EAAAgmB,aAAAA,WACAF,EAAAA,YXsiFQJ,EWniFRA,SAAAlc,EAAAA,UAAAA,CXoiFQ,IAAIF,GWliFZoc,EACAM,EACAhmB,EAAAiJ,QAAAhM,QAAA,eAAAJ,EAAAH,YAAA,eX+vFQ,OA3NAsF,GWniFR0jB,KAAAvkB,SAAAA,GXoiFUmI,EAAc3L,EACd+nB,EAAOlc,SWjiFjBkc,EAAA9b,KAAAA,WACAkd,EAAAA,MACA9mB,EAAA8lB,aAAA,WACAA,EAAAA,UXuiFQJ,EAAO9b,QAAU,WWliFzB8b,IACAA,IACAI,EAAA7b,SACA6b,EAAA9b,MXqiFUhK,EWniFViK,YXqiFQyb,EAAOvkB,KWliFf,WXmiFU,IWliFVukB,EAAA7oB,SXkiFU,CACA,GWliFVoN,GACAD,CXgkFU,IA7BI3L,QWliFdsL,UAAA9M,EAAA4M,YXmiFYQ,EWliFZA,EAAAR,UXmiFYO,EWliFZA,EAAAnN,UAAAI,GAAAA,UAAAA,QAAAA,QAAAA,EAAAA,UAAAA,GAAAA,WAAAA,MXoiFgBJ,EAAQ4M,WWjiFxB5M,EAAAsoB,EAAAtoB,EAAA4M,WACAwc,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,QAAAA,QAAAA,EAAAA,GAAAA,WAAAA,OAEAL,EAAAA,KACAkB,EAAAA,EAAAA,SAGAlB,EAAAA,UACAK,IAEAc,GXmiFYD,IAEFd,EWliFVe,EAAAH,OAAAA,OXmiFUhB,EAAeF,EAAOlhB,SAAW8E,EAAYvJ,KAAKimB,EAAY,SAAS3b,EAAerK,MWjiFhGslB,EAAAA,WXmiFYM,EAAarf,KWjiFzBvG,UAAA2C,EAAA,GAAAL,IXoiFYwjB,EAAgBvf,KWjiF5BlI,UAAAyL,EAAAzL,GAAA0L,IXoiFYub,MWhiFZnb,EAAAA,MAAAtN,EAAAyF,YAAA,eAAAojB,GAAAsB,iBXkiFU,CW/hFVpB,QAAAA,UAAAtb,EAAAzN,eAAAoqB,QAAAA,WAAAA,EAAAA,eXmiFYpqB,EAAQkN,aAAa2b,GAEvBE,EWliFV3oB,KXmiFYkN,QAAS,UWjiFrBG,SAAA5M,EAAAA,WACAb,EAAAA,aXmiFY+oB,EWliFZE,SAAAxb,EAAAzN,aAEA+oB,EAAAA,MAAAtb,EAAAzN,EAAAa,OXmiFYW,QAAQpB,QAAQoC,EAAY,gBAAiBumB,EAAa,KAAKtb,SAASkb,EAAW3oB,EAAQ2kB,OWhiFvG5W,EAAAtH,YXmiFgBzG,EAAQsoB,UWjiFxB9mB,EAAA6oB,SAAArqB,EAAAsqB,mBXoiFYvB,EWliFZtb,SAAAzN,EAAAa,YXoiFcb,EAAQsoB,UWjiFtBO,EAAA3d,MAAAA,EAAAA,EAAA,MAEA5C,QAAAygB,QAAAA,OAAA,EACArC,EAAAA,MAAAA,EAAAtZ,EAAAD,EAAAa,GXoiFYD,EAAStH,MAAMsiB,EAAc3b,EAAQD,GAAOhN,KAAK6N,GWhiF7D6a,EAAA7oB,SAAAa,EAAAqK,UAAA,EXmiFUwC,EWliFV8a,EXmiFU,IAAIlgB,GAAKygB,EAAa,EWjiFhCwB,GAAAA,WACAxjB,EAAAA,UAEAyhB,EAAAxa,SAAAA,EAAAA,YAAAA,SACA7K,EAAAnD,WACAwoB,EAAAvb,SAAAjN,EAAA4F,YAAApE,SAAAmE,EAAA3F,WXoiFUuqB,IACAxjB,OAQF8hB,EAAOnjB,KAAO,WWjiFtBlE,EAAAmM,WACAI,EAAAA,MAAAG,EAAA6a,YAAAljB,eAAAA,GAAAA,mBXqiFcrE,QAAQyL,UAAUjN,EAAQmO,eAAiB3M,QAAQmE,WAAW3F,EAAQmO,eWjiFpFnO,EAAAA,aAAA6oB,GAEA9a,QAAAG,QAAA+a,OAAAA,EXmiFYlb,EAASG,MAAM6a,EAAcljB,GWhiFzC6H,EAAAvK,MAAAA,GAAAA,KAAAA,GAEA+D,EAAAA,WXmiFYuhB,IWjiFZ1a,EAAAlI,MAAAA,IXoiFUgjB,EWliFVgB,SAAAA,EAAAA,UAAAA,EXmiFUnc,EAAWvK,GWjiFrBA,IACA+D,OAiBA2hB,EAAA7b,OAAA,WACA+b,EAAAA,SXmiFYF,EAAOnjB,OWhiFnBmjB,EAAA2B,QXqiFQ3B,EAAO7b,MAAQ,WACb+b,EAAa,GAAG/b,SAElB6b,EWliFR7oB,SAAAsoB,SAAApiB,GACA,KAAA6iB,EAAAA,OAAAF,EAAAG,WACAC,EAAAA,OACAA,EAAAA,oBXumFeJ,EAET,QAASnb,GAAWvK,GW/hF1B8L,EAAAA,SAAA9L,EAAA+L,OAAA/L,EAAA+L,MAAA7D,SAAAlI,EAAAgM,UAEAC,QAAAA,GAAAC,EAAAjP,GACA+C,MAAA3B,SAAApB,SAAAA,GAAAsI,GAAA4G,iBAAAD,IXixEM,GWniFNob,GAAAjpB,QAAAC,QACAipB,EAAA7S,EAAA6O,uBAAA7O,EAAA8S,WXoiFUnC,EAAchnB,QAAQpB,QAAQyX,EAAQnP,SAASG,MWliFzD4f,EAAAG,EACAF,EAAAG,KACAkB,EAAAze,KACAqd,GACA8B,GAAAtnB,kBACAunB,GAAA,kBX4yFM,OWhiFN1qB,OXkiFKiP,UWhiFL7O,WAAAA,UAAAA,OAAAA,SAAAA,SAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GXiiFI,OACEgP,SAAU,MACVjM,OWhiFN3B,EXiiFM0B,KWhiFN,SAAA+J,EAAApL,EAAA7B,EAAA6B,GXiiFQ,GAAI7B,IW/hFZmD,MAAAnD,EACAA,QAAAoqB,EXiiFU9lB,MAAM,EW9hFhB9C,SAAAC,SAAA,WAAA,cAAA,aAAA,eAAAI,kBAAAA,YAAAA,WAAAA,WAAAA,OAAAA,YAAAA,YAAAA,oBAAAA,KAAAA,cAAAA,cAAAA,cAAAA,aAAAA,OAAAA,UAAAA,SAAAA,GACAL,QAAAyL,UAAAnB,EAAAjK,MAAAA,EAAA6N,GAAAA,EAAA/E,MAEAnJ,EAAAC,aACAzB,EAAA4P,YAAA/N,EAAA+oB,WXkiFQ,IWhiFR5qB,GAAAmD,eXiiFQ3B,SAAQC,SAAU,WAAY,WAAY,OAAQ,aAAe,SAASI,GACpEL,QAAQyL,UAAUnB,EAAKjK,KAAS6N,EAAiB/E,KAAKmB,EAAKjK,MAAO7B,EAAQ6B,IAAO,KAEvFL,QWhiFRsK,SAAA,eAAA,SAAA,eAAA,UAAA,SAAAjK,GXiiFU,GWhiFViK,GAAAmE,KAAApO,EAAA6Z,OAAAxL,GAAAA,cAAAF,EAAAA,MAAAA,EACA7M,SAAAtB,UAAAqK,EAAAA,MXiiFYlM,EAAQ6B,GAAOsB,EAAMwM,MAAM7D,EAAK8D,OW7hF5CpO,QAAAsK,SAAA,QAAA,WAAA,SAAAjK,GACAsB,EAAAkN,IACAvE,EAAAtK,SAAAmC,EAAAA,SAAAuM,EAAAF,GACAxO,EAAAA,GAAAS,EAAAkB,YAAA+M,OXoiFYpE,EWhiFZ+e,SXiiFU1nB,EAAMkN,OAAOvE,EAAK+e,QAAS,SAAS3a,EAAUF,GW/hFxD8a,QAAAjC,SAAA7oB,GACAI,QAAA0L,OAAA1H,EAAA8L,GAEA4a,EAAAA,QAAA/d,IAEA+d,EXkiFQ,IAAIA,GAAQjC,EAAO7oB,EACnBI,GAAQkG,GAAGwF,EAAK1H,SAAW,QAAS0mB,EAAMtkB,QAC1CrD,EAAMqN,IAAI,WAAY,WY/3F9B7C,GAAAA,EAAA0c,UACA7oB,EAAA,KAIAklB,EAAAA,YZk4FMllB,QYr3FNmM,QAAA0c,MAAA,GAAA7oB,QAAAmM,QAAAod,IAAA,IZs3FIvpB,QYr3FJwpB,OAAAA,MAAAA,QAAA3e,SAAAA,UAAAA,WAAAA,SAAAA,EAAAA,GZs3FM,GAAIqa,GAAwB7O,EAAQ6O,uBAAyB7O,EAAQoT,6BAA+BpT,EAAQqT,yBYn3FlHF,EAAAzQ,EAAAA,sBAAAA,EAAAA,4BAAAA,EAAAA,yBAAAA,EAAAA,kCACA4Q,IAAA9jB,EACA+jB,EAAAD,EAAA,SAAA5Q,GZq3FQ,GYp3FRlT,GAAAA,EAAAgkB,EZq3FQ,OAAO,YACLL,EAAqB3e,KYh3F/B,SAAA+e,GZm3FQ,GAAIC,GAAQhkB,EAASkT,EAAI,OAAO,EAChC,OAAO,Yan5Ff9Z,EAAA6qB,OAAAD,IAQAtqB,Ob+4FMqqB,GAAIG,UAAYJ,Ea/4FtBjmB,Kbm5FE1D,Qa54FFf,OAAAT,0CAAAuL,SAAAA,gBAAAA,Wb64FI,Ga54FJigB,GAAAA,KAAAC,Ub64FMC,Oa14FNpb,+Kb44FIvP,Ma14FJmE,MAAAymB,SAAAA,KAAAA,SAAAA,EAAAA,Gb24FM,Qaz4FNC,GAAAA,EAAAA,Gb26FQ,Qaj4FRlqB,GAAAyB,EAAA7B,Gbk4FU,Maj4FV4d,GAAAnT,IAAA,SAAAuE,EAAA+D,Gbk4FY,Gal4FZ3S,GAAA2S,EAAAoB,IAIA+V,Obi4FYlqB,GAAOqqB,GAAarb,EACpBmF,EAAQoW,EAAU1oB,EAAO7B,GACzBI,EAAQoqB,EAAQ3oB,EAAO7B,Ial4FnCmU,MAAA+V,Ebq4Fc9pB,MAAOA,Eaj4FrBqqB,MAAAA,KAnDA,GAAAC,MAEAF,EAAAA,QAAAA,UAAAA,EAAAA,EACAN,GAAAvM,UAEAuM,IAAAA,GACAA,EACAK,EACAF,EACAC,EACAI,EACAF,CCxBAzlB,Odg6FQmlB,Gav4FRtQ,KAAA5K,Wbw4FUkb,EAAcrM,OAAS7O,EAAQxE,EAAKwE,MAAMtQ,EAAQ0rB,Qar4F5DF,EAAAvM,EAAAA,EAAA,IAAA3O,EAAAnN,IACAwoB,EAAAxpB,EAAA8c,IAAA9b,EAAAA,Gbu4FUyoB,Ear4FVpqB,EAAAqc,Gbs4FUmO,Ear4FV9M,EAAAA,EAAAA,IAAAA,Ibs4FU4M,EAAU5Q,EAAO5K,EAAM,GAAKA,EAAM,GAAKqb,GACvC1M,Ear4FVuM,EAAAC,EAAAA,Kbu4FQD,EAAcvM,SAAW,SAAS9b,EAAOlC,GACvC,MAAOmB,GAAGD,KAAK8c,EAAS9b,EAAOlC,IAAad,KAAK,SAAS+e,GAKxD,Max4FZsM,SAAAS,QAAAA,KACA9oB,MAEAqoB,EAAAK,QAAA1oB,EAAAA,OAAAA,EAAAA,EAAAA,Mbq4FmBqoB,EAAcC,WAGzBD,Eaj4FRlqB,aAAAA,SAAAA,Gbk4FU,Gaj4FV6B,Kbm4FU,OADAA,Gaj4FVzB,GAAAA,EACAJ,EAAAqqB,IC3DApR,EAAAA,OAOAlU,Edy8FM,MAAO0lB,OAGXvqB,Qch8FFpB,OAAAA,wCAAA8rB,QAAA,aAAA,Wd+hGI,Qc74FJC,GAAAC,Gd84FM,GAAIA,GAAahsB,EAAQisB,ccp4F/BpkB,EAAA7H,EAAAA,cAAAksB,CACA,IAAA5qB,EAAAtB,EAAA0J,aAAAA,MAAAA,GAAAA,eACA,MAAAwiB,IAAAjmB,EAAA8lB,EAAA,SAAA,WAAA5R,EAAA7Q,IAAAyiB,EAAA,aACAzqB,EAAAgI,EAAAyiB,Ydu4FM,Ocr4FNzqB,IAAAtB,EAAAuI,gBdgyFI,Gch8FJjH,Mdi8FQ2E,Ech8FRsjB,EAAAA,SAAA4C,SAAAnsB,EAAAka,Gdi8FM,Mch8FN5Y,GAAAioB,UAAA4C,EAAAnsB,SAAA0I,gBAAAA,EAAAA,cdujGI,OArHAyR,GAAG7Q,Ich8FPhI,SAAAtB,EAAA0I,EAAAA,Gdi8FM,GAAIpH,EAQJ,OANEA,Gcj8FRtB,EAAAosB,adi8FgBpsB,EAAQqsB,aAAa3jB,Gcx7FrC6gB,EAAA4C,iBACAG,EAAAtsB,iBAAAyH,GAAAA,GAEAzH,EAAAusB,MAAA7jB,GAEAb,KAAAykB,EAAAzkB,WAAA7H,IAAA0J,EAAAA,Gd27FIyQ,EAAGlS,Ocz7FPqkB,SAAAvkB,Gd07FM,GAAIukB,GAAUtsB,EAAQyH,wBAClBukB,EAAahsB,EAAQisB,ac/6F/B9R,QACAvS,MAAA4kB,EAAAA,OAAAA,EAAAA,YACA3kB,OAAA4kB,EAAAA,QAAAA,EAAAA,aACA3kB,IAAA4kB,EAAAA,KAAAA,EAAAA,aAAAA,EAAAA,gBAAAA,YAAAA,EAAAA,gBAAAA,WAAAA,GACA3kB,KAAA4kB,EAAAA,MAAAA,EAAAA,aAAAA,EAAAA,gBAAAA,aAAAA,EAAAA,gBAAAA,YAAAA,Kdm7FIxS,Ech7FJjR,UAAA0jB,SAAAA,EAAAA,EAAAA,GACA,GAAA/jB,GACAgkB,EACAxjB,EAGAR,EACA7I,Ed+6FU8sB,Ec56FVC,EACAL,EAAApjB,EAAAA,IAAAtJ,EAAA,YACA8sB,EAAA3S,QAAAna,QAAAA,GACA4sB,IAKAA,YAAAA,IACAJ,EAAAA,MAAArS,SAAAtR,Yd26FMkkB,Ecz6FNP,EAAAA,OAAAA,Gd06FME,Ecz6FNvS,EAAA7Q,IAAAtJ,EAAA,Od06FM8sB,Ecz6FNlhB,EAAAA,IAAAA,EAAA8gB,Qd06FME,Gcz6FNE,aAAAlhB,GAAA,UAAA/C,KAAA6jB,EAAAI,GAAA/S,QAAA,QAAA,Gd06FU6S,Gcv6FVJ,EAAAjnB,EAAAA,SAAA3F,GACAA,EAAAA,EAAAotB,Idy6FQP,EAAUD,EAAYzkB,Ocr6F9BsB,EAAAvB,WAAAA,IAAAilB,Edw6FQN,EAAU7gB,WAAWkhB,IAAe,Gcr6F5CzjB,QAAAtB,WAAAA,Kdw6FQnI,EAAUA,EAAQotB,KAAKhtB,EAAS0G,EAAGqmB,Icp6F3CC,OAAAptB,EAAAuJ,Mdu6FQE,Ect6FRvB,IAAAlI,EAAAkI,IAAAilB,EAAAjlB,IAAA6kB,GAEA,OAAA7kB,EAAAuB,Odu6FQA,Ect6FRtB,KAAAsB,EAAAtB,KAAAglB,EAAAhlB,KAAA0kB,Gdw6FU,SAAW7sB,GACbA,EAAQuJ,MAAM6jB,KAAKH,EAASxjB,Gc55FpCwjB,EAAAI,KAAAnlB,IAAAuB,EAAAvB,IAAA,KAAAC,KAAAsB,EAAAtB,KAAA,Qdo6FIoS,Ec/5FJtR,SAAA7I,SAAAA,Gdg6FM,Gcp5FNktB,GACAD,EAVAhlB,Gd85FQH,Ic55FR,EAGAolB,KAAAA,EA4BA,Odk4F0C,UAAhC/S,EAAG7Q,IAAItJ,EAAS,Ycr5F1BitB,EAAAA,EAAAnlB,yBdw5FQolB,EAAiBC,EAAoBntB,Gcn5F7CiI,EAAAkS,EAAAlS,OAAAjI,GACA4H,EAAA5H,EAAA6J,UACAhC,EAAA6B,EAAAA,OAAAA,IAEA3B,EAAAA,KAAAklB,EAAAA,IAAAA,EAAA3jB,kBAAA,Gdq5FQ2jB,EAAiBllB,MAAQoS,EAAG7Q,IAAI4jB,EAAgB,mBAAmB,Kc14F3EtlB,MAAAokB,EAAAhsB,YACA6H,OAAAkkB,EAAAA,aACAjkB,IAAA7B,EAAA8lB,IAAAA,EAAAjkB,IAAAqS,EAAA7Q,IAAA0iB,EAAAzjB,aAAAA,GACAR,KAAAgkB,EAAAA,KAAAA,EAAAA,KAAAA,EAAAziB,IAAAtJ,EAAAsJ,cAAAyiB,Kdy5FI5R,Ecr4FJtS,OAAAvG,SAAAA,EAAAA,Gds4FM,GAAIA,GAAQtB,EAAQ0J,YAMpB,Ocl4FN9B,GACAtG,GAAAA,EAAAtB,IAAAA,EAAA6J,aAAAA,GAAAA,EAAAA,IAAAA,EAAAA,gBAAAA,GAEAvI,GAAA6Y,EAAA7Q,IAAAtJ,EAAA,cAAA,GAAAma,EAAA7Q,IAAAtJ,EAAA,iBAAA,GAAAma,EAAA7Q,IAAAtJ,EAAA,kBAAA,GAAAma,EAAA7Q,IAAAtJ,EAAA,qBAAA,GAEAsB,Gd+3FI6Y,Ec73FJvS,MAAAtG,SAAAA,EAAAA,Gd83FM,GAAIA,GAAQtB,EAAQ6J,WelkG1B,ODuMAqiB,Gd63FQ5qB,GAAS6Y,EAAG7Q,IAAItJ,EAAS,cAAc,GAAQma,EAAG7Q,IAAItJ,EAAS,eAAe,GetkGtFsB,GAAA6Y,EAAAiT,IAAAA,EAAAC,eAAAA,GAAAA,EAAAA,IAAAA,EAAAA,gBAAAA,GAAAA,EAAAA,IAAAA,EAAAA,mBAAAA,GAAAA,EAAAA,IAAAA,EAAAA,oBAAAA,GAEA/rB,GAEA6Y,If0kGE/Y,QexkGFf,OAAAwK,sCAAAihB,QAAA,YAAA,WAAA,SAAA7kB,GfykGI,MexkGJA,UAAAikB,EAAArgB,EAAAA,GfykGM,GAAIA,GAAU,IACd,OexkGNA,YfykGQ,GexkGRA,GAAAlK,KACA2sB,EAAAD,UACAD,EAAA3pB,IAAA6pB,CAkBA,OfujGYziB,IACF5D,EexkGVikB,OAAArgB,Gf0kGQA,EexkGRpH,EAAA8pB,WfykGU1iB,EAAU,KevkGpBA,GfykGYuiB,EAAK3pB,MAAM8pB,EAASD,IejkGhCxB,GAAA,GACA0B,GACA3iB,EAAAA,MAAA0iB,EAAAD,GAEAziB,OfskGOihB,QenkGPjhB,YAAA,WAAA,SAAA5D,GfokGI,MenkGJ,UAAArH,EAAA6tB,EAAAA,GfokGM,GAAI5iB,GenkGVpH,IfqkGM,OADK7D,KAASA,MelkGpBiL,WfokGQ,GenkGRA,GAAAlK,KACA2sB,EAAA1tB,SfokGaiL,KACCjL,EAAQ6tB,WAAY,GACtBL,EenkGZM,MAAAH,EAAAD,GfqkGUziB,EAAU5D,EAAS,WACjB4D,EAAU,KACNjL,EAAQ+tB,YAAa,GgBtnGrCttB,EAAAoD,MAAA8pB,EAAAD,IAOA1K,GAAA,ShBunGExhB,QgBlnGFT,OAAA8U,wCAAA5R,SAAA,eAAA,kBAAA,SAAA+pB,GhBmnGI,QgBlnGJC,KhBmnGMltB,KAAKiiB,KAAO,KgBhnGlBkL,KAAAA,MAAAC,EAAAptB,KAAAktB,IAAAA,EhBmnGMltB,KAAKuU,MAAQ,EgBlnGnB4Y,KAAAA,QAAAC,EAAAptB,KAAA8U,QAAAnU,EhBqnGMX,KAAKktB,aAAe,EAwCtB,QgB3nGJG,MhB4nGI,QgB3nGJC,GAAAziB,GhB4nGM,OgB5nGNvC,MAAAvC,WAAAA,KAAAA,SAAAA,GhB8nGI,QAASwnB,GAAuBD,EAAO3sB,GgBznG3C,IAAAd,GAHA4a,GAAA6S,EAAA1nB,OhB8nGU4nB,EAAM7sB,EAAM8sB,WAAW5iB,cgB3nGjChL,EAAAG,EAAAH,EAAAG,EAAAH,IACAgR,GAAAA,EAAA9K,GAAA8E,gBAAA2iB,EACAxK,MAAAjd,EAKA,OAAA2nB,GhBwkGIP,EgBtnGJvY,UAAAjU,gBAAAA,SAAAA,GhBunGMX,KAAKktB,aAAevsB,GAEtBwsB,EgBxnGJ5Y,UAAA5T,WAAAA,SAAAA,GhBynGMX,KAAK8U,QAAUnU,GAEjBwsB,EgB1nGJntB,UAAAuU,WAAAA,SAAAA,GhB2nGMvU,KAAK4U,QAAUjU,GAEjBwsB,EgB5nGJ1K,UAAA9hB,SAAAA,SAAAA,GhB6nGMX,KAAKuU,MAAQ5T,GAEfwsB,EgB9nGJ9K,UAAA1hB,SAAAA,WhB+nGM,MAAOX,MAAKuU,OAEd4Y,EgBhoGJlL,UAAAthB,QAAAA,SAAAA,GhBioGMX,KAAKyiB,IAAM9hB,GAEbwsB,EgBjoGJlL,UAAA3B,SAAAA,SAAAA,GACAtgB,KAAAqiB,MAAA1hB,GhBmoGIwsB,EgBjoGJ5Y,UAAA5T,YAAAsQ,SAAAA,GACAjR,KAAA4U,KAAAA,GhBmoGIuY,EgBjoGJD,UAAAA,SAAAta,SAAAA,GAaA,MAZA5S,MAAAiiB,KAAAjiB,EAAAA,chBkoGMA,KAAKqiB,MAAQ1hB,EAAM4f,WgB/nGzB4M,KAAAA,IAAAC,EAAAA,UACAptB,KAAAuU,MAAAN,EAAAjU,WhBioGMA,KAAK4U,QAAUjU,EAAMgT,agB9nG3B3T,KAAA2tB,QAAAR,EAAAC,aAEAptB,KAAAktB,aAAAG,EAAAA,kBAGAO,MhB8nGIT,EAAUC,UAAUS,OAAS,WgB1nGjC,MAAAN,IAAAA,MAAAA,KAAAA,KAAAA,KAAAD,MAAA3sB,KAAAA,IAAAA,KAAAA,MAAAA,KAAAA,QAAAA,KAAAA,QAAAA,KAAAA,chB6nGI,IgB3nGJgtB,GAAAhtB,EAAA8sB,UAkBA5tB,EAAAgY,KAAAA,UhBynGMhH,OgBtnGNid,YhBunGM9K,QgBtnGN+K,EhBwnGI/tB,MAAKmE,MgBtnGTlF,UAAA+jB,aAAA,SAAAgL,EAAAC,GhBunGM,GgBtnGNC,GAAA,SAAA1jB,GhBkwGQ,QgBvlGR2jB,GAAAtd,GACA,GAAAud,GAAAA,EAAAC,EACA,OAAAC,GAAAC,GhBylGQ,QgBtlGR9tB,GAAAoQ,GhBulGU,GgBtlGV2d,GAAAC,EAAA5d,GACA6d,EAAAC,EAAAD,QAAAA,MAAAA,QhBulGcP,EgBtlGd,kBAEAC,EAAAC,EAAAzoB,MAAAG,GhBslGcuoB,EgBrlGd/pB,OAAA+pB,KAAAA,GhBslGcM,IAWJ,OAVAnuB,SAAQC,QAAQ0tB,EAAa,SAASM,GgBplGhDE,GAAAA,EAAAF,GhBslGcA,EAAOC,EAAuBD,OAE9B,KAAK,GAAI3oB,GAAI,EAAGA,EAAIuoB,EAAa1oB,OAAQG,IgBllGvD2oB,EAAAG,EAAAA,MAAAA,EAAAvI,IAAAA,KAAAA,KAAAA,EAAAA,IAaAsI,GAAAH,KAAAA,KhB2kGiBG,EAAetQ,KAAK,IAE7B,QgBxkGRgI,GAAAA,GhBykGU,MAAOA,GAAKvkB,QAAQ,MAAO,UAAUA,QAAQ,KAAM,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,OAAQ,SAEtO,QgBvkGRusB,GAAAC,GACA,MAAAO,SAAAC,KAAAA,GhBykGQ,QgBrkGRD,GAAAxI,GhBskGU,MAAOA,GAAKvkB,QAAQ,WAAY,MAElC,QAASitB,GAAoBD,GgBhkGrC,IAAA,GAFAT,GAAAW,OAAApe,KAAAA,GACAie,EAAAI,EACAC,EAAAA,EAAAA,EAAAA,EAAAL,OAAAA,IhBokGYA,EAAKA,EAAGvqB,MAAM,KAAOwB,EAAI,KAAKuY,KAAK,IAAMwP,EAAUQ,EAAavoB,IAAM,IgBhkGlF,OAAAuoB,IAAAA,QAAAA,IAAAc,EAAAb,KAAAT,MhBokGQ,QgBlkGRuB,GAAAA,GACA,GAAAC,GAAAA,EAAAA,EACA,OAAAC,GAAAA,GhBokGQ,QgBlkGRC,GAAAA,GhB0kGU,IgBvkGV,GAEAD,GACAE,EAEAD,EhBgkGcC,EgBrkGdnB,EAAAe,OAAAK,KAAAA,GACAJ,EAAAD,GAAAA,QAAA,cAAA,KAOAG,KhB+jGqE,QAAnDH,EAAcK,EAAYC,KAAKZ,KgB5jGjDlX,EAAAjM,EAAAA,GACA2jB,EAAA1X,EAAAA,GhB8jGY4X,EAAgBG,EAASL,GgB1jGrCC,EAAA9B,KAAAA,EhB6jGU,OAAO8B,GArMT,GgBjkGR3X,GACAgY,EAtDA7L,EAAAhB,QAAA9hB,UAAArB,EAAA2K,GACAslB,KACAC,GACAC,IAAA,WACAC,GAAAhxB,aACA0d,EAAA1d,EAAA+jB,OAAA,cAAA,mBACAkN,GAAAA,aACAC,EAAAA,EAAAnC,OAAAoC,cAAAC,mBACAC,GAAA,mBACApQ,EAAAjhB,EAAA+jB,OAAA,iBAAA,oBACAuN,GAAAA,oBACAC,EAAAA,EAAAxC,OAAAoC,eAAAK,iBACAC,EAAAA,QACAC,KAAA1xB,EAAA+jB,iBAAA4N,IAAAtS,KAAA,KACAuS,IAAAA,EAAAT,iBAAAC,SAAA/R,KAAA,KACAwS,GAAA,yBACAC,EAAA9xB,EAAA+jB,OAAA,yBAAA,2BhBunGUuN,KAAMvC,EAAQoC,iBAAiBY,MAAM1S,KAAK,KgBpnGpDkS,IAAAZ,EAAAA,iBAAAA,WAAAA,KAAAA,KACA7B,GAAAA,gBACAkD,EAAAA,EAAA7c,OAAAA,eAAAA,iBACA8c,KAAAvD,gCACAO,GAAAP,WACA3J,EAAA2J,EAAAxZ,OAAAA,wBAAAA,kBAEA4b,GACAC,IAAArC,EAAAzZ,gBACA+b,GAAAtC,EAAAzZ,WACAgc,EAAAA,EAAA7C,WACA8C,GAAAA,EAAA9C,WACAiD,EAAAA,EAAA3C,WACAzN,GAAAyN,EAAAwD,SACAxU,EAAAgR,EAAAzZ,ShBsnGU8b,GgBtnGVrC,EAAApZ,ShBunGU0b,EgBvnGVtC,EAAA3tB,ShBwnGUkwB,KAAM7C,EgBvnGhBkD,IAAAA,EhBynGUD,GgBznGV3C,EAAA3tB,QhB0nGUkgB,EAAGyN,EAAMwD,QgBznGnBX,EAAAA,SAAA7vB,GAAA,GAAA4T,GAAA6c,KAAAA,WAAA7D,EhB4nGY,OAAOvtB,MAAKkU,SAASvT,EAAM4O,MAAM,OAASgF,EAAQ,GAAKA,IAEzDgc,KgB7nGV,SAAAa,GhB8nGY,MAAOpxB,MAAKoxB,SAAS7D,EAAuBS,EAAQoC,iBAAiBY,MAAOrwB,KAE9E6vB,IgB/nGV,SAAAY,GhBgoGY,MAAOpxB,MAAKoxB,SAAS7D,EAAuBS,EAAQoC,iBAAiBK,WAAY9vB,KgB9nG7FmwB,GAAA,SAAAnwB,GAAA,MAAAX,MAAAqX,SAAAA,EAAA1W,EAAA,IACAowB,EAAA,SAAApwB,GAAA,MAAAX,MAAAW,SAAA,EAAAA,EAAAiF,IhBqoGUirB,KAAMlD,EAAMtW,YgBjoGtByZ,GAAAO,SAAAA,GACAxB,MAAAA,MAAAA,YAAAA,IAAAA,EAAAA,IAGAhY,EAAAA,SAAAyZ,GACAD,MAAAE,KAAAA,EAAAA,GAAAD,IAAAzZ,EAAAA,OAAAyZ,KAAAA,YAAAA,IAAAA,EAAAA,GAAAA,KAAAA,YAAAA,EAAAA,ICnHA,OjByvGQzZ,GgBhoGRwZ,KAAAznB,WhBioGUiO,EAAYyZ,QAAUtD,EAAQoC,iBAAiBnxB,EAAQ4R,SAAW5R,EAAQ4R,OgB9nGpFgH,EAAAA,EAAAA,EAAA2Z,SAEA3B,EAAAhf,EAAAmd,EAAAoC,UhBgoGQvY,EgB9nGR4Z,QAAA5gB,SAAA0gB,GACA,MAAAG,SAAAA,OAAA7gB,IAAAoe,MAAAA,EAAApe,WACA4L,EAAAA,KAAAgV,IhBgoGQ5Z,EgB7nGRtF,MAAAif,SAAAlpB,EAAAkpB,EAAA5d,EAAA/D,GACAgB,IAAA9K,EAAA0W,EAAA7W,iBAAAiL,IAAAA,GACApQ,QAAAixB,OAAA3rB,KAAA2rB,EAAAA,EAAAnf,EAAAkK,GAAA5E,EAAAyZ,QAAAzhB,GhB8nGU,IAAI4hB,GAAc5gB,EAAS0gB,EAAgB1gB,GAAUwgB,EgB3nG/D9b,EAAAsY,EAAAA,EAAAA,GAAAA,EAGAplB,EAAA8J,EAAAod,KAAApa,EhB2nGU,KgB1nGVkH,EAAA,OAAA,CAGA,KAAA,GhBwnGclK,GAAOif,IAAalpB,MAAMkpB,EAAS5d,YAAa,GAAIuZ,IAAYwE,SAASH,IAAY,GAAIrE,IAAYwE,SAAS,GAAI1d,MAAK,KAAM,EAAG,EAAG,IgBxnGjJsB,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,EAAAA,IhB0nGgBmc,EAAa3rB,IAAI2rB,EAAa3rB,GAAGsmB,KAAK9Z,EAAMkK,EAAQ1W,EAAI,GgBtnGxE,IAAAwM,GAAAA,EAAAA,QAEA,OAAA5R,UAAAA,EAAA8hB,IAAA,MAAAlN,EAAAiL,WACAT,EAEAxK,GhBynGQsC,EgBvnGRoL,oBAAA,SAAAniB,EAAAH,GhBwnGU,GgBvnGV4R,EhBwnGU,IgBvnGV9R,UhBunGcE,EgBvnGdC,CACA2R,GAAAA,GAAAzR,GAAAmT,KhBwnGY1B,GgBvnGZ,GAAA0B,MAAA8L,EAAAO,cAAAP,EAAAQ,WAAAR,EAAAS,WAAA,YAAA1f,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YAAAA,EAAA,EAAA,QhBynGYyR,GgBxnGZ9R,QAAAE,SAAAA,IAAAA,EAAAA,MAAAA,UhBwnGmB,GAAIsT,MAAKtT,EAAM6hB,OAAO,EAAG7hB,EAAMiF,OAAS,IgBrnG3D2M,EAAAA,GhBunGmB,GAAI0B,MAAKxL,SAAS9H,EAAO,KgBpnG5CixB,QAAAA,SAAAA,IAAAjxB,IAAAA,EAAAG,OACAqR,YAAAA,IAAAA,EAAAA,KAAAA,EAAAA,GAGA,GAAA8B,MAAAA,EhBsnGU,OgBpnGV9B,IhBsnGQ0F,EgBpnGR+Z,oBAAAjxB,SAAA0W,EAAAA,GhBqnGU,GAAIlF,EgB7lGd,OhB+lGYA,GgBrnGZrR,QAAAqR,GACA,GAAA8B,OAAAoD,YAAA,KAAA,EAAA,GACAQ,QAAAA,SAAAlX,IAAAsT,EAAA1E,MAAA,UhBqnGmB,GAAI0E,MAAKtT,EAAM6hB,OAAO,EAAG7hB,EAAMiF,OAAS,IAAIyR,YAAY,KAAM,EAAG,GgBlnGpFlF,EAAAA,GhBonGmB,GAAI8B,MAAKxL,SAAS9H,EAAO,KAAK0W,YAAY,KAAM,EAAG,GgBxmGtEwN,QAAAA,SAAAA,IAAAtS,IAAA5R,EAAA4R,OACA,YAAAA,IAAArC,EAAAA,KAAAA,EAAAA,GhB2mGmB2H,EAAYQ,MAAM1X,EAAO,GAAIsT,MAAK,KAAM,EAAG,EAAG,KgB9lGjE4D,EAAAI,qBAAA,SAAA1F,GACA,MAAAA,IAIAA,EAAA1C,SAAAA,EAAAA,WAAA,GAAA0C,EAAAtB,WAAA,EAAA,GACAsB,GAJA,MhBumGQsF,EAAYI,qBAAuB,SAAS1F,EAAM1C,EAAUgiB,GgBhmGpE,MAAAtf,IAYAuc,GAAAI,QAAAA,IACA3c,EAAAyc,GAAAA,MAAAA,EAAAA,WhBylGYzc,EAAK4B,WAAW5B,EAAKoB,cAAgBke,EAAO,GAAK,GAAKtf,EAAKqS,sBgBrlGvE4J,GhBilGmB,MiB5zGnBxuB,EAAA8xB,OACA9D,EAKAhuB,OAAA+xB,QjBg4GEtxB,QiB53GF0jB,OAAAA,2CAAA9R,QAAAA,kBAAAA,UAAAA,aAAAA,SAAAA,EAAAA;AjBs4GI,QiBv3GJ2f,GAAApiB,GjBw3GM,MAAO,wCAAwC+f,KAAK9e,GAAQ9B,MAAM,GAVpE/O,KiB53GJ8xB,iBAAA1B,WjB63GM,MAAOpC,GAAQ1iB,IAEjBtL,KiB33GJ+xB,kBAAA,SAAAlhB,EAAAwB,GjB43GM,MAAO2b,GAAQoC,iBAAiBvf,IAAWA,GAE7C7Q,KiBz3GJmkB,cAAA6N,SAAApiB,GjB03GM,MAAOoe,GAAQoC,iBAAiBC,UAKlCrwB,KiBr3GJ8S,YAAAkf,SAAApiB,GjBs3GM,MAAOoiB,GAAgBpiB,GAAY,IAErC5P,KiBn3GJkT,cAAA8e,SAAApiB,GjBo3GM,MAAOoiB,GAAgBpiB,GAAY,IAErC5P,KiBj3GJmT,cAAA6e,SAAApiB,GjBk3GM,MAAOoiB,GAAgBpiB,GAAY,IAErC5P,KiB/2GJgT,cAAAgf,SAAApiB,GjBg3GM,MAAOoiB,GAAgBpiB,GAAY,IAErC5P,KiB92GJoT,YAAA6a,SAAApd,GjB+2GM,QAASmhB,EAAgBpiB,GAAY,IEt6G3CnP,KAAAA,OAAA,SAAAmP,GAGA,QAAA7M,EAAA1B,GAAAR,IFw6GIb,KEz2GJ4Q,WAAApR,SAAA+S,EAAA1B,EAAA5R,EAAAA,GF02GM,MEz2GNkB,GAAAoS,EAAA1B,EAAAhB,OF42GEpP,QAAQf,OAAO,0BAA2BuyB,QAAQ,cAAelvB,GAwFjEtC,QGhgHF4C,OAAA,2BAAA,2BAAAH,SAAA,YAAA,WHigHI,GGhgHJ2I,GAAA7L,KAAAH,UACAyD,UAAA,UACAxB,YAAA,WACA4B,YAAA,WHigHMP,UAAW,cG9/GjBnD,YAAA,6BAEAqD,QAAA6uB,QACArmB,WAAAsmB,EAEA7uB,UAAA8uB,EH8/GMtwB,MG5/GNuwB,EH6/GM3uB,MG1/GNzE,EH4/GIe,MGz/GJqyB,MAAAA,UAAAhzB,aAAAJ,WAAAA,WAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GH4/GM,QGt/GNmzB,GAAAjtB,EAAA0Q,GH+hHQ,QAASyc,GAAYntB,GG79G7B+I,MAAAA,GAAAjL,SAAA5D,EAAA,GAEA8F,EAAAlC,SAAA5D,EAAA,IAAAgzB,EAAA1tB,OAFAuJ,OHq7GQ,GGt/GR/I,MACAA,EAAA8I,QAAAA,UAAAA,EAAAA,EHu/GQokB,GGp/GRE,OAAA9xB,EAAApB,OAAAgzB,EAAAzrB,MAAA+D,QAAA4D,EAAA5D,OHq/GQ0nB,EGp/GRE,EAAAlzB,EAAAJ,EHq/GQ,IGp/GRuzB,GAAAlf,EAAAA,QHq/GQ+e,GGp/GR3xB,WAAA6xB,SAAAptB,GHq/GU,GGp/GV,UAAAgtB,KAAAA,EAAAA,SHo/GU,CACAhtB,EAAIC,iBGj/GdD,EAAAA,iBAGAotB,IAAAA,GAAAjf,QAAArH,QAAAA,EAAAA,SAAAA,GAAAA,iBAAAA,sBHi/GU,IAAKsmB,EAAM3sB,OAAX,CG3+GV,GAAArC,EACA8uB,SAAA9uB,QAAAgvB,EAAA,SAAAhrB,EAAAxB,GACAxC,GAAAA,EAAAA,KAAAA,EAAAA,YAAAA,EAAAA,KAIAD,KAAA6B,EAAAlG,SAAAozB,EAAAA,EAAAzrB,IAAA,KAAAyrB,EAAAzrB,SAAA0M,EAAA+e,EAAAzc,OAAAA,EAAAA,IAAAA,QAAAA,YAAAA,KAAAA,EAAAA,GH2+GU2c,EG1+GVL,GAAA3sB,GAAA,GAAA0G,UH4+GQ,IG1+GR1I,GAAAivB,EAAAC,IH2+GQJ,GAAU9uB,KAAO,WGx+GzBA,IACA8uB,EAAA1tB,WACA0tB,EAAAA,UAAAA,EAAAzrB,UAAAyrB,EAAAzrB,SAAArB,GAAA,UAAA8sB,EAAAzc,YACAsc,EAAAjzB,GAAAqE,QAAAA,IACA4uB,GAAAA,GACAM,EAAAC,SAAA,aAAAD,EAAA5kB,SAAAA,QH2+GQ,IAAIjJ,GAAO0tB,EAAU1tB,IGv+G7B0tB,GAAArmB,KAAAqmB,WACAA,EAAArmB,WACAkmB,EAAA5uB,UAAAgvB,EAAAA,UAAAA,EAAAA,SAAAA,IAAAA,UAAAA,EAAAA,YACAtmB,EAAAA,IAAAA,QAAAA,GHy+GcwmB,EAASC,SAAS,aAAaD,EAAS5kB,YAAY,QGp+GlEjJ,KHu+GQ,IGr+GRqH,GAAA/I,EAAA5D,OAiBA+C,OHq9GQiwB,GAAUrmB,QAAU,WGn+G5BkmB,EAAAG,IAAAA,QAAAA,GHq+GUrmB,KGv9GVqmB,EH86GM,GGz/GNH,GAAAM,QAAAnzB,QAAAgN,EAAAA,SAAAA,MAIAgmB,EAAAzc,QAAAwX,UAAAjoB,iBAAAA,QAAAA,UAAAA,uBAAAA,QAAAA,UAAAA,oBAAAA,QAAAA,UAAAA,mBAAAA,QAAAA,UAAAA,gBHsiHM,OG19GNutB,OH49GKxkB,UG19GL,cAAAykB,UAAAA,OAAAC,YAAA,SAAA9b,EAAA5L,EAAAmnB,GH29GI,OACEhkB,SAAU,MACVjM,OG19GN,EH29GMnC,QG19GNyyB,SAAAlzB,EAAAmzB,GH29GQ,IG19GRD,EAAA1zB,WAAAA,CH49GU,IADA,GG19GV2zB,GAAAE,EAAAC,GAAAA,YH29GiBH,GAAwC,IAAzBA,EAAYC,UAChCD,EAAcA,EAAYA,WGr9GtC1zB,IAAAA,EAAAA,UAAAA,MAAAA,KAAAA,QAAAA,kBAAAA,IAAAmD,EAAAA,SAAAA,EAAAA,UHy9GYswB,EAAO1zB,YAAcD,EGx9GjC0B,EAAAC,WAAAoyB,YAAAH,IH49GQ,MGv9GRhkB,UAAAvM,EAAA/C,EAAA0L,GACAtK,GAAAA,IACA2B,MAAA3B,EAIAA,SAAAC,SAAA,WAAA,cAAA,aAAA,eAAA,YAAAI,YAAAA,QAAAA,UAAAA,WAAAA,OAAAA,YAAAA,KAAAA,aAAAA,SAAAA,GACA+N,QAAA3C,UAAApL,EAAA6Z,MAAAC,EAAAA,GAAA9Z,EAAAiO,KHu9GU,IGr9GV9P,GAAAmD,eHs9GU3B,SAAQC,SAAU,OAAQ,aAAe,SAASI,GAC5CL,QAAQyL,UAAUnB,EAAKjK,KAAS6N,EAAiB/E,KAAKmB,EAAKjK,MAAO7B,EAAQ6B,IAAO,KAEvFL,QGn9GV6O,SAAAvE,eAAA,SAAAoE,eAAAF,UAAAA,SAAAA,GHo9GY,GGn9GZ7M,GAAAojB,KAAArW,EAAAA,OAAAA,GAAAA,cAAAA,EAAAA,MAAAA,EACA1O,SAAAyL,UAAAnB,EAAA8D,MHo9Gc5P,EAAQ6B,GAAOsB,EAAMwM,MAAM7D,EAAK8D,OG58G9CzM,EAAAkN,YHg9GYlN,EG/8GZkN,OAAAyjB,EAAAA,WAAA7mB,SAAAiD,EAAAF,GACA7M,EAAA3B,QAAAG,IACA,EHi9GU,IAAImyB,GG/8GdV,EAAAhzB,EAAAJ,EHg9Gc8L,GG/8GdgoB,QHg9GY3wB,EAAMkN,OAAOvE,EAAKsE,OAAQ,SAASF,EAAUF,GACtC8jB,GAAatyB,QAAQyL,UAAUiD,KAChC1O,QAAQG,SAASuO,KAAWA,IAAaA,EAASI,MAAM,yBG58G1EE,KAAA,EACAsjB,EAAAA,OAEAA,EAAApuB,UHi9GUvC,EAAMqN,IAAI,WAAY,WAChBsjB,GAAUA,EAAS/mB,UkB9nHnCtM,EAAA,KACAG,EAAAG,alBqoHES,QkB/nHFoL,OAAA,6BAAA,oCAAA,uCAAA,2BAAA3I,SAAA,cAAA,WlBgoHI,GkB/nHJI,GAAAtD,KAAAH,UACAiC,UAAA,UACA4B,YAAA,aACAgM,UAAA,cACA+O,YAAA,iCACAC,QAAAA,QACA7O,WAAA,EACA8O,UAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAC,WAAAA,EACAC,SAAAA,OACAC,WAAAA,YACAC,SAAAA,KACAlP,gBAAA,KACAmP,UAAAhP,KACAiP,YAAAjP,MACA8iB,WAAA,OACA5T,iBAAA,YACAC,gBAAA,OACAC,cAAAA,EACA2T,WAAA,EACAC,UAAAhjB,EAAAA,GACAqP,UAAArP,EAAAA,GACAsP,UAAA,ElBgoHMJ,QAAS,EkB9nHfpf,UAAAmE,EACAmb,mBAAA,GACA2T,UAAAztB,EACA0tB,UAAArzB,EACA0f,SAAA4T,gBlBgoHM3T,UkB/nHN4T,iBlBioHIpzB,MkB/nHJmE,MAAAlF,UAAAm0B,YAAA7oB,aAAAA,OAAAA,iBAAAA,kBAAAA,WAAAA,WAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GlBmoHM,QkB/nHN6oB,GAAA1Q,EAAA2Q,EAAAA,GA0IAD,QAAAA,GAAA7rB,GACAA,EAAAoN,SAAAnG,EAAAkB,YAAAnI,EAAAgL,MlBioHQ,QkB/nHRlT,KlBgoHUA,EkB/nHV,GAAA4M,QA7IA,GAAA6E,GAAA4R,EAAA5R,EAAAA,QAAAA,UAAAA,EAAAA,IACA1O,EAAAnD,EAAA+zB,MACA5wB,EAAAwd,EAAAL,SACAnd,EAAAkxB,EAAAr0B,MACAmD,GAAAmxB,YAAAt0B,EAAAg0B,WAAAA,EAAAA,QACA7wB,IAAAA,GAAAnD,EAAAi0B,EACAE,GAAAtT,OAAAsT,EAAAhxB,KACAA,IAAAA,GAAA0Z,EAAAvJ,QlBgoHQnQ,GkB/nHRgxB,MAAA/hB,EAAAkB,UlBgoHQnQ,EAAMwd,UAAY3gB,EAAQsgB,SkB9nHlCnd,EAAAoxB,WAAAA,EAAAhU,UlBgoHQpd,EkB/nHRgxB,UAAAI,EAAA7yB,SlBgoHQyB,EAAMqxB,UAAYx0B,EAAQi0B,QkB9nHlC9wB,IAAAA,GAAAsxB,EAAAC,OAAAvxB,EAAAwxB,MlBgoHQxxB,GkB/nHRgxB,QAAAS,SAAAzxB,GlBgoHUgxB,EAAY/hB,OAAOkB,IAErBnQ,EkB/nHRnD,YAAA8Q,SAAApP,GlBgoHUyyB,EkB/nHVA,YAAAzyB,IlBioHQyB,EAAMsxB,YkB/nHd,WlBgoHUN,EkB/nHVA,SAAAhxB,EAAA6R,MAAA,GAAAmf,EAAAO,OAAA/tB,SlBioHQxD,EAAM0xB,UAAY,WkB9nH1BC,EAAAA,WACAX,EAAArjB,QAAAA,GACAqjB,EAAAS,OAAAA,GAAA5f,QlBioHYmf,EkB/nHZ/hB,OAAA,GAAA4C,OAAA,IlBkoHQ7R,EAAM2xB,OAAS,WkB9nHvBX,EAAApb,WACAob,EAAA1f,QAAAnB,GACA6gB,EAAAve,OAAAA,OlBioHYue,EAAY/hB,OAAO,MAAM,IkB5nHrC+hB,EAAAY,OAAAA,SAAAA,GACA/0B,QAAA8hB,OAAAA,KAAAC,MAAAA,EAAAA,aACAoS,EAAAve,MAAAzS,EACA3B,EAAAC,OAAAA,KAAA0B,EAAA2D,IlBioHUqtB,EAAYvf,QAAO,IAErBuf,EkB/nHR3yB,oBAAA,SAAAugB,GlBgoHU/hB,EkB/nHVwB,mBAAAP,ClBgoHU,KkB/nHVA,GAAAA,GAAAA,EAAA2S,EAAAA,EAAAA,KAAAjN,OAAA2M,EAAAA,EAAAA,IlBgoHY9R,QAAQC,QAAQ0B,EAAM2S,KAAKhP,GAAIqtB,EAAYjS,iBAG/CiS,EAAY/hB,OAAS,SAASkB,EAAMyB,GkB9nH5CvT,QAAAmzB,OAAAA,KACA1zB,QAAAmU,OAAAA,EAAA5T,aAAA8R,MAAAA,EAAAA,WAAAA,cACArS,EAAA6T,WAAAA,GAAAA,MAAAA,IlBkoHY7T,EkB/nHZkzB,WAAA,MlBioHehxB,EAAMwxB,OAAS5f,GAClB9T,EkB/nHZmU,cAAA5T,QAAAH,KAAAiS,IACA9R,EAAAS,UACA+gB,EAAA1P,YAAA+N,GACA+B,EAAA9P,WACAA,EAAAiO,MAAAA,OlBmoHY/f,QAAQS,OAAO4P,GACbmR,KAAM1P,EAAK+N,ckB9nHzB8S,MAAAS,EAAAA,WACAzxB,KAAAwxB,EAAAK,YAEAb,EAAAvf,QAAAA,EAAAA,MAAAA,GlBgoHYuf,EAAYvf,WAGhBuf,EkB/nHRvR,QAAA,SAAA/B,GACAA,EAAAA,MAAAuM,ElBgoHUvM,EAAUsT,EAAYO,OAAOvxB,EAAMwxB,OkB9nH7CR,EAAAzR,UlBioHQyR,EkB/nHR1yB,OAAA0B,SAAA2S,GlBgoHc8M,KAAa,GAAQ/B,EAAQgC,QAC7BD,KAAa,GAAU/B,EAAQgC,QkB9nH7CsR,EAAAA,MAAAle,KAAAA,IlBioHQke,EAAYzR,gBAAkB,WkB9nHtCyR,IAAAA,GAAAA,GAAAjS,EAAAA,EAAAA,EAAAA,KAAAvb,OAAA2B,EAAAA,EAAAA,IACAA,QAAAkN,QAAAqL,EAAAiC,KAAAA,GAAAxa,IlBkoHQ6rB,EkB/nHRpR,YAAAA,SAAAA,GACA,MAAAxM,GAAAA,WAAAvB,IlBioHQmf,EkB/nHR5d,eAAA0M,SAAAA,GlBgoHU3a,EkB/nHV8a,SAAA7M,EAAA0e,WAAAA,EAAAA,OlBioHQd,EAAYI,YAAc,SAAS7yB,GkB9nH3CyyB,GAAAA,GAAAvf,EAAAA,MlBgoHc2B,EAAa,GAAIvB,MAAKA,KAAKmO,IAAItR,EAASmR,MAAQD,EAAMC,MAAQ,GAAKthB,EAAOmQ,EAASuR,OAASL,EAAMK,OAAS,GAAK1hB,EAAO,GkB9nHrIyyB,SAAAA,OAAA3d,GACAtQ,KAAAC,EAAAA,iBACAD,MAAA8I,EAAAA,cACAsE,KAAA/M,EAAA2c,elBioHUiR,EkB/nHV1d,UlBioHQ0d,EAAY3d,aAAe,SAAStQ,GAGlC,GAFAA,EkB/nHVuQ,iBlBgoHUvQ,EAAI8I,kBACAzI,EAAS,CkB9nHvB4tB,GAAAA,GAAAxd,QAAAvW,QAAA8F,EAAAA,OACAA,YAAAuQ,EAAA,GAAApQ,SAAAsE,gBACAxE,EAAAA,EAAAA,UAEAsQ,EAAAG,eAAA,WlBkoHQud,EkB/nHRxd,WAAA,SAAAzQ,GlBgoHU,GkB/nHV/C,mBAAAwH,KAAAzE,EAAA0Q,WAAA1Q,EAAAgvB,WAAAhvB,EAAAivB,OlB+nHU,CAGA,GAFAjvB,EAAIC,iBACJD,EAAI8I,kBACgB,KAAhB9I,EAAI0Q,QAQN,YkBtoHZzT,EAAAwxB,MAGA3hB,EAAAA,OAAA7D,WlBgoHgBglB,EAAYS,QAAQzxB,EAAMwxB,MAAQ,KAHpCR,EAAYzuB,MAAK,GkBvnH/BtF,GAAAg1B,UAAApoB,GlBgoHUgG,EAAY7D,WAQd,IkB/nHR/O,GAAA0I,EAAA6D,IlBgoHQwnB,GkB/nHRroB,KAAA,WlBgoHU,MkB/nHV1L,IAAAJ,EAAA8S,WlBgoHY1S,EAAQ0I,KAAK,OAAQ,YkB9nHjCiK,GAAAA,IAAAA,qBAAAA,eAEA0E,IACA0c,EAAApnB,KAAAA,OAAA,QACA3M,EAAAmP,KAAAA,WAAAkB,QACArQ,EAAAyG,GAAAA,QAAAiM,QAEA2E,MAEA,IAAAC,GAAAyc,EAAA7vB,OACA6vB,GAAA7vB,QAAA,WACAiL,GAAAnP,EAAA0L,WACA4L,EAAAA,IAAAA,QAAAA,GlBioHUD,IAEF,IkB/nHRC,GAAA1X,EAAAqE,IlBgoHQ8vB,GkB/nHR/zB,KAAA,YlBgoHemG,GAAWnG,EAAQ0L,KAAK,aAAe1L,EAAQ0L,KAAK,cACzD4L,IACArQ,EAAS,WkB9nHnBsQ,EAAAwc,WACAA,EAAAzuB,SAAAY,GAAAyI,EAAAA,aAAAA,YAAAA,EAAAA,cACAolB,EAAAA,UACAA,EAAAxsB,GAAAA,UAAApB,EAAAoQ,cAEAvW,GAAAA,IlBioHQ,IkB/nHRuX,GAAA5I,EAAAA,IASA,OlBunHQolB,GAAYzuB,KAAO,SAASqJ,GkB9nHpColB,EAAAA,WlBgoHUA,EAAYxsB,SAASd,IAAIN,EAAU,aAAe,YAAa4tB,EAAY3d,ckB9nHrF0d,EAAAA,UACA9zB,EAAA8zB,IAAAA,UAAAA,EAAAA,YAEAjlB,EAAAF,KAEAolB,ElBm8GM,GkB/nHN5kB,GAAA4kB,6BAAA1oB,KAAAA,EAAAA,UAAAA,WACAlF,EAAAwtB,eAAA/zB,GAAA+zB,UAAA/zB,CA8LAkD,OA7LAtC,GAAA6iB,OAAA4R,EAAAA,KAAAlB,EAAAA,oBA4LAvc,EAAAhX,SAAAA,EACAszB,MlBioHKjlB,UkB/nHL9L,gBAAAA,UAAAA,SAAAA,KAAAA,iBAAAA,cAAAA,cAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GlBgoHI,GAAIoM,GAAW,6BAA6B5E,KAAKkN,EAAQC,UAAUC,UACnE,QACE3I,SkB/nHN5N,MlBgoHMoW,QAAS,UACT1U,KkB/nHNwM,SAAAA,EAAAtP,EAAA0L,EAAA7K,GlB0rHQ,QkB/nHRq0B,GAAAC,GlBgoHU,MkB/nHVC,IAAAC,EAAA9uB,OACA+uB,EADA,KlB2oHQ,QkB/nHRz0B,GAAA+W,GACA,GAAAC,QAAAhX,OAAAA,GAAA,ClBgoHU,GAAIkX,GAAa9O,MAAMqsB,EAAWpqB,SAAS2U,UAAY0V,EAAWhhB,WAAa+gB,EAAWpqB,SAAS2U,QkB9nH7Ghf,EAAAqX,MAAAC,EAAAjN,SAAAkN,UAAAA,EAAAA,WAAAA,EAAAA,SAAAA,QACAlF,EAAAA,GAAAA,CACArS,GAAAuX,aAAA,OAAAP,GlBgoHUhX,EkB/nHVA,aAAAoX,MAAAF,GlBgoHUlX,EkB/nHVoX,aAAA,MAAAL,GlBgoHcC,IAAShX,EAAW2S,WAAa+hB,IA+CvC,QAAS7R,KACP,OAAQ7iB,EAAW2S,YAAcvK,MAAMpI,EAAW2S,WAAWe,WAAa,GAAKhD,EAAW1Q,EAAW2S,WAAY5T,EAAQyf,YkB9vHnIje,GAAAA,IACA2B,MAAA3B,ElBioHQA,SAAQC,SAAU,WAAY,cAAe,aAAc,eAAgB,YAAa,YAAa,QAAS,UAAW,OAAQ,YAAa,YAAa,WAAY,aAAc,WAAY,kBAAmB,YAAa,eAAgB,YAAa,YAAa,YAAa,OAAQ,YAAa,UAAW,WAAY,YAAa,qBAAsB,KAAM,cAAe,cAAe,WAAY,YAAc,SAASI,GACxaL,QAAQyL,UAAUnB,EAAKjK,MAAO7B,EAAQ6B,GAAOiK,EAAKjK,KAExD,IkB/nHR6N,GAAA7N,elBgoHQL,SkB/nHRA,SAAAyL,OAAAnB,YAAA,YAAA,YAAA,WAAA,YAAA,SAAAjK,GACA7B,QAAA6B,UAAAsB,EAAAwM,KAAAC,EAAAA,KAAAA,EAAAA,MlBgoHY5P,EAAQ6B,IAAO,KkB5nH3B7B,QAAAA,SAAA01B,eAAApqB,SAAAA,eAAAA,UAAAA,SAAAA,GACA,GAAAiE,GAAAA,KAAAvP,EAAAyQ,OAAAA,GAAAzQ,cAAAyf,EAAAA,MAAA,EACArM,SAAApT,UAAAoT,EAAAA,MACAzB,EAAAA,GAAAxO,EAAAwM,MAAA2D,EAAA1B,MAGA,IAAA+G,GAAAC,EAAAA,EAAAA,EAAAA,ElBgoHQ5Y,GkB/nHRA,EAAAyf,SACArM,GAAAA,EAAAA,YAAAA,EAAAA,WAAAA,alBgoHQ,IkB/nHR2Q,GAAA/jB,EAAAggB,KlBgoHYrO,EAAa,SAAS2B,EAAM1B,GkB9nHxC,MAAAxB,GAAAuB,WAAA2B,EAAA1B,EAAAwB,IAEAuF,EAAA+c,GlBgoHU9jB,OkB/nHVpQ,EAAAG,WlBgoHUyR,KkB/nHVlD,ElBgoHU6T,OkB/nHV2R,EAAApxB,clBioHYwH,GkB/nHZ4pB,QlBgoHUvyB,EAAMkN,OAAOvE,EAAKsE,OAAQ,SAASF,EAAUF,GACtC0lB,GAAel0B,QAAQyL,UAAUiD,KAClC1O,QAAQG,SAASuO,KAAWA,IAAaA,EAASI,MAAM,2BkB9nHxE7O,KAAA,EACAD,EAAAyL,OAEAyoB,EAAApqB,UlBmoHQ9J,QAAQC,SAAU,UAAW,WAAa,SAASI,GAC7CL,QAAQyL,UAAUnB,EAAKjK,KkB9nHrCL,EAAAA,SAAAyL,EAAAnB,SAAA2T,GACA3T,EAAAR,SAAAzJ,GAAA8W,EAAAzI,oBAAAA,EAAAA,GACAwlB,MAAApqB,EAAAmU,SAAAvP,KAAAA,EAAAA,QAAAA,GlBgoHcwT,EAA0BziB,EAAW2S,gBkB3nHnDpS,QAAAyL,UAAAnB,EAAA2T,aACA3T,EAAAmE,SAAAslB,aAAAC,SAAAA,GACAE,EAAAF,SAAAA,WAAAtlB,IAGA/M,EAAA3B,OAAAyL,EAAAA,QAAA2oB,SAAAA,EAAA5lB,GACA7M,EAAAkN,OAAAulB,EAAAA,clBgoHW,GAKCp0B,QAAQyL,UAAUnB,EAAK8pB,gBACzBzyB,EAAMkN,OAAOvE,EAAK8pB,cAAe,SAASH,EAAgBH,GkB9nHpEG,EAAA/R,EAAAiS,GACAL,EAAA7gB,EAAA6gB,GACAnd,GACAH,EAAAA,oBAAA1M,KlB6oHQrK,EkB/nHR00B,SAAAA,QAAAA,SAAAA,GlBgoHU,GkB/nHV10B,ElBgoHU,KkB/nHVuX,EAEAkL,MlB8nHYziB,GAAWoX,aAAa,QAAQ,GkB9nH5CqL,IlBioHU,IkB/nHVpQ,GAAAqF,EAAAK,MAAAA,EAAA2c,EAAA31B,WlBgoHU,QkB/nHV21B,GAAAhkB,MAAA2B,EAAAoM,elBgoHYze,GAAWoX,aAAa,QAAQ,IAGlCqL,EkB/nHV/O,GACA6K,WlB+nHcxf,EkB/nHdA,UACAsT,EAAAA,EAAAqB,qBAAAghB,EAAA31B,EAAA4Q,UAAA,GACAe,EAAA6N,EAAAA,EAAAE,iBAAA1f,EAAAyf,clBioHUnM,EAAOqF,EAAWK,qBAAqB/X,EAAW2S,WAAY5T,EAAQ4Q,UAAU,GkB9nH1F0C,WAAAtT,EAAAgV,SlBgoHmB1B,EAAKqB,UkB9nHxB,SAAAsE,EAAAA,SACA3F,EAAAA,UAAAA,IACA4F,QAAA1X,EAAAgR,SACA2G,EAAAA,cAEA7F,GAAA4F,MAAAA,OlBioHQjY,EkB/nHR0X,YAAAS,KAAAF,SAAAA,GlBgoHU,GAAI5F,EAaJ,OAXEA,GkBhoHZA,QAAAd,YAAA0G,IAAA,OAAAA,EACAC,IACA3X,QAAA0X,OAAAA,GlBgoHmBA,EkB9nHnBP,WAAA/E,EAAAA,SACAkQ,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,iBlBgoH0C,SAArB9jB,EAAQwf,SkB9nH7B1K,GAAAA,MAAA,IAAAA,GlBioHmB,GAAIE,MAAKkE,GkB7nH5BjY,EAAAA,WAAA2S,EAAAvK,qBAAAuK,EAAAe,EAAAA,UlBgoHiBmP,MAET7iB,EkB/nHRy0B,QAAAA,WACA11B,EAAAA,IAAA8jB,MAKA7f,EAAAA,IAAA,WAAA,WACAqB,GAAAqf,EAAAA,UACAC,EAAAA,KACA8Q,EAAA/uB,YlBmoHO1C,SAAS,kBAAmB,WkB9nHnC,QAAA4gB,GAAAC,EAAAC,GlBioHM,IkBhoHN,GAAAH,MlBgoHaI,EAAIre,OAAS,GkB9nH1B5F,EAAAmE,KAAA8f,EAAA5K,OAAA,EAAAuK,GlBioHM,OkB/nHNxhB,GlBioHI,QkB/nHJiQ,GAAAA,EAAApT,GlBgoHM,OkB/nHN2R,EAAAA,EAAAA,GAAAoT,ElBioHIhkB,KAAKmE,MAAS,iBAAkB,cAAe,OAAQ,SAAS4O,EAAgB8E,EAAa3M,GAC3F,MkB/nHN0M,UAAAA,GlBgoHQ,GkB/nHR/G,GAAA5R,EAAAyf,OACArM,EAAAA,EAAAA,SACA2Q,EAAA/jB,EAAAggB,KlBgoHYrO,EAAa,SAAS2B,EAAM1B,GkB9nHxC,MAAAqT,GAAAnR,WAAAoR,EAAAA,EAAA9R,IAEA+R,EAAAA,GACAvT,OAAAG,EAAAqT,WACAhS,KAAAvB,EACAmR,OAAAjR,EAAAsP,eAEA/N,EAAAiO,EAAAA,cAAAA,GlBgoHYsU,EAAiB5Q,EAAYnV,MAAM9P,EAAQogB,WAAW0V,OAAO7Q,EAAYnV,MAAM,EAAG9P,EAAQogB,YkB9nHtGgU,EAAAA,EAAAA,YAAAA,+BAAAA,EAAAA,KAAAA,qCAAAA,SACAxiB,EAAA5R,EAAA2f,QAAAA,EAAAA,UAAAA,EAAAA,oBAAAA,YAAAA,EAAAA,WAAAA,GAAAA,OACAra,GACAyd,KAAAA,EAAAA,clBgoHUK,MkB/nHVA,EAAA9B,WlBgoHUhO,KAAMvB,EAAUwP,WkB7nH1B6S,IlBgoHUxiB,OkB/nHVpQ,EAAAS,UlBgoHUqD,MkB/nHV0d,ElBgoHUD,OACEK,MkB/nHZ9P,GlBioHUyF,OkB/nHVqM,SAAAxQ,EAAAA,IlBgoHiB7T,KkB/nHjB8hB,OAAAtB,GAAAA,EAAA1P,gBAAAyB,EAAAiO,MAAAjO,EAAAgO,aAAAzP,EAAAuR,OACAvR,QAAAA,OAAAyB,GACA8R,KAAA1C,EAAAA,MAAAA,clBgoHgBU,MAAOgC,EAAOxP,MAAM0L,WACpBhO,KAAM8R,EAAOxP,MAAM2L,YkB7nHnC6D,EAAAc,WACAT,EAAAA,YAAAS,EAAAA,MAAAP,IAAAA,EAAAA,aACA9T,EAAA0T,KAAAH,EAAApQ,MAAAkR,UACAd,EAAAI,oBlBkoHUH,MkB/nHVK,WACA,GAAAlC,GAAAA,GAAAA,MAAAA,EAAAA,KAAAA,EAAAA,MAAAA,GACAiC,EAAA3e,EAAA6e,oBACAnC,EAAA7K,GAAAiN,OAAAA,EAAAL,MAAAvQ,EAAAA,EAAAqM,SAAAkE,EAAAA,UAAAjE,IACAoE,EAAAnQ,EAAAA,oBACAjC,EAAAkQ,EAAAA,qBAAAA,GAAAA,MAAAA,EAAAA,UAAAA,cACAqC,KAAArD,IAAA1B,EAAAA,GAAAA,OAAAA,EAAAA,KAAAA,EAAAA,IlBkoHY,KkB/nHZkF,GADAtQ,GADAD,KAEAuQ,EAAAxC,EAAAlC,GAAAA,EAAAA,IlBgoHckC,EkB/nHdhO,EAAAsN,qBAAAU,GAAAA,MAAAA,EAAAA,cAAAA,EAAAA,WAAAA,EAAAA,UAAAA,IlBgoHckC,EAAKnQ,MACHjC,KAAMkQ,EkB9nHtBrgB,QAAAoB,EAAAoN,iBAAAuU,EACA/iB,MAAAgjB,EAAA3C,EAAAziB,KAAA6Q,QACAzO,SAAAijB,EAAAjB,OAAAA,KAAAA,WAAAA,GACAhiB,MAAA2S,EAAAxQ,aAAAA,EAAAA,MACAnC,SAAA4yB,KAAAA,WAAAjT,IAGAuD,GAAAA,MAAA1U,EAAA2B,EAAAA,EAAAA,kBACAnQ,EAAAgjB,YAAAvQ,ElBgoHYzS,EAAMijB,OAASjB,EkB9nH3BrC,EAAAA,KAAAxd,EAAAgO,EAAAA,KAAAA,OACAnQ,EAAA+P,gBAAAyB,KAAAA,WAAAA,GAAAA,OACA5T,KAAAmS,OAAA8B,GlBioHUqR,WkB/nHVrmB,SAAA8hB,GlBgoHY,MkB/nHZsD,GAAAte,OAAA9G,EAAAA,gBAAA8hB,EAAAnb,MAAAG,eAAAwM,EAAAgO,aAAA8D,EAAAxP,MAAA0L,YAAAhO,EAAAiO,YAAA6D,EAAAxP,MAAA2L,WlBioHUuB,WkB/nHV,SAAAxP,GlBgoHY,GAAIJ,GAAOI,EAAKqB,SAChB,IAAIzB,EAAO8B,KAAKoE,MAAMpZ,EAAQigB,UAAY/M,EAAO8B,KAAKoE,MAAMpZ,EAAQkgB,SAAU,OAAO,CACrF,IAA0D,KAAtDlgB,EAAQqgB,mBAAmBlG,QAAQ7G,EAAK4N,UAAkB,OAAO,CkB9nHjF,IAAAlhB,EAAA8hB,mBlBgoHc,IAAK,GAAIhb,GAAI,EAAGA,EAAI9G,EAAQ8hB,mBAAmBnb,OAAQG,IkB9nHrEsuB,GAAAA,GAAAp1B,EAAAkG,mBAAAA,GAAAA,OAAAA,GAAAA,EAAAA,mBAAAA,GAAAA,IACAkf,OAAAxP,CAIA,QAAAU,GlBioHU8e,UkB/nHVr0B,SAAA+hB,GlBgoHY,GAAKsC,EAAOxP,MAAZ,CkB5nHZhE,GACAtM,GADAsM,EAAAgO,EAAAA,MAAAA,SAEAmD,MAAAA,EAAAA,QAAAA,EAAAA,GAAAA,MAAAA,EAAAA,OAAAA,KAAAA,EAAAA,QAAAA,EAAAA,GAAAA,MAAAA,EAAAA,QAAAA,KAAAA,EAAAA,QAAAA,EAAAA,GAAAA,MAAAA,EAAAA,OAAAA,KAAAA,EAAAA,UAAAA,EAAAA,GAAAA,MAAAA,EAAAA,SACAC,KAAAF,WAAAxM,IAAA8O,EAAAhT,OAAAkE,GAAA,OlBkoHUgE,KkB/nHV,QlBgoHU1I,OkB/nHVpQ,EAAAS,YlBgoHUqD,MkB/nHV0d,ElBgoHUD,OACEC,KkB/nHZ1P,GlBioHUyF,OkB/nHVqM,SAAAxQ,EAAAA,GlBgoHiB7T,KkB/nHjB8hB,OAAAvB,EAAAA,gBAAA8B,EAAAJ,KlBsoHuB1P,EAAKgO,aAAezP,EAASuR,QkB9nHpDiC,QAAApjB,OAAA4P,GACAmkB,MAAAA,EAAAA,MAAAA,WACA5S,KAAAA,EAAAA,MAAAA,YAEAA,EAAAA,oBAXA5hB,QAAAS,OAAA4P,GACAuR,KAAAA,EAAAgC,MAAAxP,cACAtC,MAAA8R,EAAAxP,MAAA2L,WlBgoHgBjO,KAAM8R,EAAOxP,MAAM2L,YAErB6D,EAAOxQ,WASXyQ,MkB/nHV5P,WlBkoHY,IAAK,GkBhoHjBD,GADAE,KlBioHqB5O,EAAI,EAAO,GAAJA,EAAQA,IACtBsc,EAAQ,GAAIpO,MAAKnD,EAASmR,KAAMlc,EAAG,GkB9nHjD3D,EAAAoB,MACApB,KAAAgjB,EACAhjB,MAAA2S,EAAAkgB,EAAAj1B,KAAAuE,QACAvE,SAAAqkB,EAAAnP,YAAAmN,GlBgoHgB5N,SAAUzU,KAAK+hB,WAAWM,IAG9BjgB,GAAMoB,MAAQoN,EAAWyR,EAAOpjB,EAAQ+f,iBkB9nHpD+C,EAAAA,YAAAxP,EACAnQ,EAAA8yB,KAAAA,EAAAD,EAAA1iB,KAAA+N,OACAtgB,KAAA8hB,OAAAoT,GAEAb,WAAA,SAAAlvB,GACA,MAAAkf,GAAAxP,OAAAtC,EAAA+N,gBAAA+D,EAAAxP,MAAAyL,eAAA/N,EAAAgO,aAAA8D,EAAAxP,MAAA0L,YlBioHUwB,WAAY,SAASxP,GkB9nH/B,GAAA4iB,IAAAA,GAAA9Q,MAAAxP,EAAAA,cAAA0L,EAAAA,WAAAA,EAAAA,EACA,OAAAhL,GAAAtB,EAAAoQ,SAAAxP,EAAAA,UAAAA,EAAAA,SlBioHUwf,UkB/nHVr0B,SAAA+hB,GlBgoHY,GAAKsC,EAAOxP,MAAZ,CkB5nHZhE,GAAAA,GAAAiO,EAAAA,MAAAA,WACAva,EAAA,GAAA0P,MAAAoQ,EAAAxP,MACAmN,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EAAAA,GAAAA,KAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EAAAA,GAAAA,KAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EAAAA,GAAAA,KAAAA,EAAAA,SAAAA,EAAAA,SAAAA,EAAAA,GACAC,KAAAF,WAAAxM,IAAA8O,EAAAhT,OAAAkE,GAAA,OlBkoHUgE,KkB/nHV,OlBgoHU1I,OkB/nHVpQ,EAAAS,WlBgoHUqD,MkB/nHV0d,ElBgoHUD,OACEC,KkB/nHZ1P,IlBioHUyF,OkB/nHVqM,SAAAxQ,EAAAA,IlBgoHiB7T,KkB/nHjB8hB,OAAAxB,GAAAA,SAAAxP,EAAAA,cAAA,GAAA,MAAArI,SAAAqI,EAAAmR,KAAA,GAAA,KACAxhB,QAAAS,OAAA4P,GACAmR,KAAAoC,EAAAxP,MAAAyL,cACA+B,MAAAgC,EAAAxP,MAAA0L,WACAhO,KAAA8R,EAAAxP,MAAA2L,YAEA6D,EAAA1C,UlBgoHuBpP,EAAK+N,gBAAkBxP,EAASmR,OACzCxhB,QAAQS,OAAO4P,GkB9nH7BwT,KAAAD,EAAAxP,MAAAyL,cACA8U,MAAAA,EAAAtkB,MAAAA,WACAukB,KAAAA,EAAAA,MAAAA,YAEAhR,EAAAte,oBlBkoHUue,MkB/nHV/R,WlBmoHY,IAAK,GkBhoHjBkC,GAFAC,EAAA9D,EAAAqR,KAAAjiB,EAAA6Q,MAAAA,EAAAA,KAAAA,OACA8D,KlBioHqB5O,EAAI,EAAO,GAAJA,EAAQA,IACtBkc,EAAO,GAAIhO,MAAKmhB,EAAYrvB,EAAG,EAAG,GkB9nHhD3D,EAAAoB,MACApB,KAAAgjB,EACAhjB,MAAA2S,EAAAsgB,EAAAr1B,KAAAuE,QACAvE,SAAAqkB,EAAAnP,YAAA+M,GlBgoHgBxN,SAAUzU,KAAK+hB,WAAWE,IAG9B7f,GAAMoB,MAAQ6xB,EAAM,GAAG3gB,MAAQ,IAAM2gB,EAAMA,EAAMzvB,OAAS,GAAG8O,MkB9nHzEqN,EAAAA,YAAAxP,EACAnQ,EAAA8yB,KAAAA,EAAAG,EAAA9iB,KAAA+N,OACAtgB,KAAA8hB,OAAAoT,GAEAb,WAAA,SAAAlvB,GACA,MAAAkf,GAAAxP,OAAAtC,EAAA+N,gBAAA+D,EAAAxP,MAAAyL,elBioHUyB,WAAY,SAASxP,GkB9nH/B,GAAA+iB,IAAAA,GAAAjR,MAAAxP,EAAAyL,cAAAA,EAAAA,EAAAA,EACA,OAAA/K,GAAAtB,EAAAoQ,SAAAxP,EAAAA,UAAAA,EAAAA,SlBioHUwf,UkB/nHVr0B,SAAA+hB,GlBgoHY,GAAKsC,EAAOxP,MAAZ,CkB5nHZwe,GAAAA,GAAAjU,EAAAmW,MAAAnI,cACAtc,EAAAA,GAAAA,MAAAA,EAAAA,MlBgoHgC,MAAhB3L,EAAI0Q,QAAgBN,EAAQigB,QAAQF,EAAa,GAA6B,KAAhBnwB,EAAI0Q,QAAgBN,EAAQigB,QAAQF,EAAa,GAA6B,KAAhBnwB,EAAI0Q,QAAgBN,EAAQigB,QAAQF,EAAa,GAA6B,KAAhBnwB,EAAI0Q,SAAgBN,EAAQigB,QAAQF,EAAa,GAC1Ot1B,KAAK+hB,WAAWxM,IAAU8O,EAAOhT,OAAOkE,GAAS,MmB9sIlE9U,QAIAZ,MAAAA,EAAAA,QAAAA,MAAAA,UAAAA,MAAAA,KAAAA,EAAAA,EAAAA,SAAAA,EACAC,SAAAgR,QnBmtIErQ,QmB9sIFoL,OAAA,wBAAA,yBAAA3I,SAAA,SAAA,WnB+sII,GmB9sIJ7D,GAAAW,KAAAH,UACA0nB,UAAA,UACAjkB,YAAA,QACAC,YAAA,QAEAkyB,UAAA,KACAhyB,YAAA,uBACAiyB,WAAAA,EnB8sIMr2B,QAAS,KmB3sIfW,UAAAmE,EAEAb,UAAAqyB,EnB4sIMpyB,MmB1sINqyB,EnB2sIMH,UmBxsINx2B,EnBysIMwE,MmBvsINmyB,EnBwsIMF,amBrsINhrB,EnBusII1K,MAAKmE,MmBrsITuG,SAAAjH,WAAAA,SAAAA,EAAAA,GnBssIM,QAASkyB,GAAanrB,GmBlsI5B,GAAAjH,MACAtE,EAAAw2B,QAAAv0B,UAAArB,EAAA2K,EnBosIQorB,GmBnsIRryB,EAAAtE,GnBosIQ22B,EmBnsIRryB,OAAAA,cAAAA,EAAAA,YACA+C,EAAAA,OnBosIUsvB,EmBnsIVA,OAAAjxB,KAAAA,EAAAA,KnBqsIQ,IAAIpB,GAAOqyB,EAAOryB,ImBlrI1BnB,OnBmrIYnD,GAAQw2B,WmBjsIpBG,EAAAA,KAAAA,WnBmsIYryB,ImB/rIZ+C,EAAAqvB,WnBisIcC,EAAOjxB,QmB3rIrB,IAAA1F,EAAAw2B,YAIAG,EnB6rIM,MmBzrIN32B,OnB2rIKiP,UmB3rIL7O,WAAAA,UAAAA,OAAAA,SAAAA,SAAAA,EAAAA,EAAAA,GnB4rII,OACEgP,SAAU,MACVjM,OmB7rIN3B,EnB8rIM0B,KmB7rIN,SAAA+J,EAAApL,EAAA7B,EAAA6B,GnB8rIQ,GAAI7B,ImB1rIZmD,MAAAuM,EACAlO,QAAAC,EACA6C,MAAA9C,EAIAA,SAAAC,SAAA,WAAA,cAAA,aAAA,eAAA,YAAAI,WAAAA,OAAAA,YAAAA,YAAAA,WAAAA,eAAAA,SAAAA,GACA+N,QAAA3C,UAAApL,EAAA6Z,MAAAC,EAAAA,GAAA9Z,EAAAiO,KnB2rIQ,ImBzrIR9P,GAAAmD,enB0rIQ3B,SAAQC,SAAU,WAAY,OAAQ,YAAa,eAAiB,SAASI,GACvEL,QAAQyL,UAAUnB,EAAKjK,KAAS6N,EAAiB/E,KAAKmB,EAAKjK,MAAO7B,EAAQ6B,IAAO,KAEvFL,QmBtrIR+C,SAAA,eAAA,SAAA,eAAA,UAAA,SAAA1C,GnBurIU,GAAI+N,GAAQ,KAAO/N,EAAI6Z,OAAO,GAAGC,cAAgB9Z,EAAIiO,MAAM,EmBnrIrEtO,SAAAC,UAAAqK,EAAA8D,MACA5P,EAAA6B,GAAAsB,EAAAwM,MAAA7D,EAAA8D,OnBurIazM,EAAM4M,eAAe,WACxB5M,EAAMoB,MAAQ,ImBhrIxB/C,QAAAsK,SAAA,QAAA,UAAA,QAAA,SAAAjK,GACAsB,EAAAkN,IACAvE,EAAAtK,SAAAmC,EAAAA,SAAAuM,EAAAF,GACAxO,EAAAA,GAAAS,EAAAkB,YAAA+M,OnBsrIYpE,EmBlrIZ8qB,SnBmrIUzzB,EAAMkN,OAAOvE,EAAK8qB,QAAS,SAAS1mB,EAAUF,GmB/qIxD6mB,QAAAF,SAAA32B,GAGAI,QAAA0L,OAAA1H,EAAA8L,GAIA2mB,EAAAA,QAAA9pB,IAEA8pB,EnB8qIQ,IAAIA,GAAQF,EAAO32B,EACnBI,GAAQkG,GAAGwF,EAAK1H,SAAW,QAASyyB,EAAMrwB,QAC1CrD,EAAMqN,IAAI,WAAY,WoB5yI9B/P,GAAAo2B,EAAA9pB,UpBipKG4c,EAAQjhB,KAl2BDmuB,EAAQ,YAKhBr1B,QAAQf,OAAO,kBAAoB,uBAAwB,uBAAwB,wBAAyB,4BAA6B,iCAAkC,4BAA6B,yBAA0B,yBAA0B,0BAA2B,qBAAsB,4BAA6B,yBACzUkpB,OAAQjhB","file":"angular-strap.min.js","sourcesContent":["(function(window, document, undefined) {\n'use strict';\n\n// Source: tooltip/tooltip.js\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      templateUrl: 'tooltip/tooltip.tpl.html',\n      template: '',\n      titleTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true,\n      mouseDownPreventDefault: true,\n      mouseDownStopPropagation: true,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory (element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        var promise = $tooltip.$promise = $bsCompiler.compile(options);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        var nodeName = element[0].nodeName.toLowerCase();\n        if (options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if (options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function (isEnabled) {\n          scope.$$postDigest(function () {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout;\n        var hoverState;\n\n        // Fetch, compile then initialize tooltip\n        var compileData;\n        var tipElement;\n        var tipContainer;\n        var tipScope;\n        promise.then(function (data) {\n          compileData = data;\n          $tooltip.init();\n        });\n\n        $tooltip.init = function () {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if (options.container === 'self') {\n            tipContainer = element;\n          } else if (angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if (options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if (options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              if (options.trigger === 'focus') {\n                element[0].focus();\n              } else {\n                $tooltip.show();\n              }\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function () {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function () {\n            if (hoverState === 'in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function () {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($tooltip);\n          }\n          var parent;\n          var after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if (tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = compileData.link(tipScope, function (clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', right: 'auto', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if (options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if (options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if (options.customClass) tipElement.addClass(options.customClass);\n\n          // Append the element, without any animations.  If we append\n          // using $animate.enter, some of the animations cause the placement\n          // to be off due to the transforms.\n          if (after) {\n            after.after(tipElement);\n          } else {\n            parent.prepend(tipElement);\n          }\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n\n          // Now, apply placement\n          $tooltip.$applyPlacement();\n\n          // Once placed, animate it.\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(tipElement, parent, after).then(enterAnimateCallback);\n          }\n          safeDigest(scope);\n\n          $$rAF(function () {\n            // Once the tooltip is placed and the animation starts, make the tooltip visible\n            if (tipElement) tipElement.css({visibility: 'visible'});\n\n            // Bind events\n            if (options.keyboard) {\n              if (options.trigger !== 'focus') {\n                $tooltip.focus();\n              }\n              bindKeyboardEvents();\n            }\n          });\n\n          if (options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($tooltip);\n          }\n        }\n\n        $tooltip.leave = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function (blur) {\n\n          if (!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($tooltip);\n          }\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(tipElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(tipElement).then(leaveAnimateCallback);\n          }\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if (options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if (options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($tooltip);\n          }\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if (_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function (evt) {\n          if (evt) { evt.preventDefault(); }\n          if ($tooltip.$isShown) {\n            $tooltip.leave();\n          } else {\n            $tooltip.enter();\n          }\n        };\n\n        $tooltip.focus = function () {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function (isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        $tooltip.setViewport = function (viewport) {\n          options.viewport = viewport;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function () {\n          if (!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement;\n          var autoToken = /\\s?auto?\\s?/i;\n          var autoPlace = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition();\n          var tipWidth = tipElement.prop('offsetWidth');\n          var tipHeight = tipElement.prop('offsetHeight');\n\n          // Refresh viewport position\n          $tooltip.$viewport = options.viewport && findElement(options.viewport.selector || options.viewport);\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var viewportPosition = getPosition($tooltip.$viewport);\n\n            if (/bottom/.test(originalPlacement) && elementPosition.bottom + tipHeight > viewportPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (/top/.test(originalPlacement) && elementPosition.top - tipHeight < viewportPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            if (/left/.test(originalPlacement) && elementPosition.left - tipWidth < viewportPosition.left) {\n              placement = placement.replace('left', 'right');\n            } else if (/right/.test(originalPlacement) && elementPosition.right + tipWidth > viewportPosition.width) {\n              placement = placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacement(tipPosition, placement);\n        };\n\n        $tooltip.$onKeyUp = function (evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function (evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function (evt) {\n          if (options.mouseDownPreventDefault) { evt.preventDefault(); }\n          if (options.mouseDownStopPropagation) { evt.stopPropagation(); }\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          if ($tooltip.$isShown) {\n            element[0].blur();\n          } else {\n            element[0].focus();\n          }\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function (trigger) {\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.on(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover') {\n                element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          });\n        }\n\n        function unbindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.off(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover') {\n                element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents () {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents () {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation (event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition ($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n          var isBody = el.tagName === 'BODY';\n\n          var elRect = el.getBoundingClientRect();\n          var rect = {};\n\n          // IE8 has issues with angular.extend and using elRect directly.\n          // By coping the values of elRect into a new object, we can continue to use extend\n          /* eslint-disable guard-for-in */\n          for (var p in elRect) { // eslint-disable-line\n            // DO NOT use hasOwnProperty when inspecting the return of getBoundingClientRect.\n            rect[p] = elRect[p];\n          }\n          /* eslint-enable guard-for-in */\n\n          if (rect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            rect = angular.extend({}, rect, {width: elRect.right - elRect.left, height: elRect.bottom - elRect.top});\n          }\n          var elOffset = isBody ? {top: 0, left: 0} : dimensions.offset(el);\n          var scroll = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.prop('scrollTop') || 0};\n          var outerDims = isBody ? {width: document.documentElement.clientWidth, height: $window.innerHeight} : null;\n\n          return angular.extend({}, rect, scroll, outerDims, elOffset);\n        }\n\n        function getCalculatedOffset (placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n            case 'right':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left + position.width\n              };\n              break;\n            case 'bottom':\n              offset = {\n                top: position.top + position.height,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n            case 'left':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left - actualWidth\n              };\n              break;\n            default:\n              offset = {\n                top: position.top - actualHeight,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n          }\n\n          if (!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if (split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n              case 'left':\n                offset.left = position.left;\n                break;\n              case 'right':\n                offset.left = position.left + position.width - actualWidth;\n                break;\n              default:\n                break;\n            }\n          } else if (split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n              case 'top':\n                offset.top = position.top - actualHeight + position.height;\n                break;\n              case 'bottom':\n                offset.top = position.top;\n                break;\n              default:\n                break;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacement (offset, placement) {\n          var tip = tipElement[0];\n          var width = tip.offsetWidth;\n          var height = tip.offsetHeight;\n\n          // manually read margins because getBoundingClientRect includes difference\n          var marginTop = parseInt(dimensions.css(tip, 'margin-top'), 10);\n          var marginLeft = parseInt(dimensions.css(tip, 'margin-left'), 10);\n\n          // we must check for NaN for ie 8/9\n          if (isNaN(marginTop)) marginTop = 0;\n          if (isNaN(marginLeft)) marginLeft = 0;\n\n          offset.top = offset.top + marginTop;\n          offset.left = offset.left + marginLeft;\n\n          // dimensions setOffset doesn't round pixel values\n          // so we use setOffset directly with our own function\n          dimensions.setOffset(tip, angular.extend({\n            using: function (props) {\n              tipElement.css({\n                top: Math.round(props.top) + 'px',\n                left: Math.round(props.left) + 'px',\n                right: ''\n              });\n            }\n          }, offset), 0);\n\n          // check to see if placing tip in new offset caused the tip to resize itself\n          var actualWidth = tip.offsetWidth;\n          var actualHeight = tip.offsetHeight;\n\n          if (placement === 'top' && actualHeight !== height) {\n            offset.top = offset.top + height - actualHeight;\n          }\n\n          // If it's an exotic placement, exit now instead of\n          // applying a delta and changing the arrow\n          if (/top-left|top-right|bottom-left|bottom-right/.test(placement)) return;\n\n          var delta = getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n\n          if (delta.left) {\n            offset.left += delta.left;\n          } else {\n            offset.top += delta.top;\n          }\n\n          dimensions.setOffset(tip, offset);\n\n          if (/top|right|bottom|left/.test(placement)) {\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n\n            replaceArrow(arrowDelta, tip[arrowOffsetPosition], isVertical);\n          }\n        }\n\n        // @source https://github.com/twbs/bootstrap/blob/v3.3.5/js/tooltip.js#L380\n        function getViewportAdjustedDelta (placement, position, actualWidth, actualHeight) {\n          var delta = {top: 0, left: 0};\n          if (!$tooltip.$viewport) return delta;\n\n          var viewportPadding = options.viewport && options.viewport.padding || 0;\n          var viewportDimensions = getPosition($tooltip.$viewport);\n\n          if (/right|left/.test(placement)) {\n            var topEdgeOffset = position.top - viewportPadding - viewportDimensions.scroll;\n            var bottomEdgeOffset = position.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\n              delta.top = viewportDimensions.top - topEdgeOffset;\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n              delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n            }\n          } else {\n            var leftEdgeOffset = position.left - viewportPadding;\n            var rightEdgeOffset = position.left + viewportPadding + actualWidth;\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n              delta.left = viewportDimensions.left - leftEdgeOffset;\n            } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n              delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n            }\n          }\n\n          return delta;\n        }\n\n        function replaceArrow (delta, dimension, isHorizontal) {\n          var $arrow = findElement('.tooltip-arrow, .arrow', tipElement[0]);\n\n          $arrow.css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n                .css(isHorizontal ? 'top' : 'left', '');\n        }\n\n        function destroyTipElement () {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if ($tooltip.$isShown && tipElement !== null) {\n            if (options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if (options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if (tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if (tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function ($window, $location, $sce, $parse, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        var tooltip;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'titleTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function (newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }\n        });\n\n        attr.$observe('disabled', function (newValue) {\n          if (newValue && tooltip.$isShown) {\n            tooltip.hide();\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsTooltip) {\n          scope.$watch(attr.bsTooltip, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.title = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n            if (newValue === true) {\n              tooltip.show();\n            } else {\n              tooltip.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n            if (newValue === false) {\n              tooltip.setEnabled(false);\n            } else {\n              tooltip.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            tooltip.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: timepicker/timepicker.js\nangular.module('mgcrea.ngStrap.timepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$timepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    defaultDate: 'auto',\n    prefixClass: 'timepicker',\n    placement: 'bottom-left',\n    templateUrl: 'timepicker/timepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: true,\n    timeType: 'date',\n    timeFormat: 'shortTime',\n    timezone: null,\n    modelTimeFormat: null,\n    autoclose: false,\n    minTime: -Infinity,\n    maxTime: +Infinity,\n    length: 5,\n    hourStep: 1,\n    minuteStep: 5,\n    secondStep: 5,\n    roundDisplay: false,\n    iconUp: 'nox-sort-up',\n    iconDown: 'nox-sort-down',\n    arrowBehavior: 'pager'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) {\n      defaults.lang = $dateFormatter.getDefaultLocale();\n    }\n    function timepickerFactory(element, controller, config) {\n      var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $timepicker.$options;\n      var scope = $timepicker.$scope;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      function floorMinutes(time) {\n        var coeff = 1e3 * 60 * options.minuteStep;\n        return new Date(Math.floor(time.getTime() / coeff) * coeff);\n      }\n      var selectedIndex = 0;\n      var defaultDate = options.roundDisplay ? floorMinutes(new Date()) : new Date();\n      var startDate = controller.$dateValue || defaultDate;\n      var viewDate = {\n        hour: startDate.getHours(),\n        meridian: startDate.getHours() < 12,\n        minute: startDate.getMinutes(),\n        second: startDate.getSeconds(),\n        millisecond: startDate.getMilliseconds()\n      };\n      var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n      var hoursFormat = $dateFormatter.hoursFormat(format);\n      var timeSeparator = $dateFormatter.timeSeparator(format);\n      var minutesFormat = $dateFormatter.minutesFormat(format);\n      var secondsFormat = $dateFormatter.secondsFormat(format);\n      var showSeconds = $dateFormatter.showSeconds(format);\n      var showAM = $dateFormatter.showAM(format);\n      scope.$iconUp = options.iconUp;\n      scope.$iconDown = options.iconDown;\n      scope.$select = function(date, index) {\n        $timepicker.select(date, index);\n      };\n      scope.$moveIndex = function(value, index) {\n        $timepicker.$moveIndex(value, index);\n      };\n      scope.$switchMeridian = function(date) {\n        $timepicker.switchMeridian(date);\n      };\n      $timepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $timepicker.$date = date;\n          angular.extend(viewDate, {\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            millisecond: date.getMilliseconds()\n          });\n          $timepicker.$build();\n        } else if (!$timepicker.$isBuilt) {\n          $timepicker.$build();\n        }\n      };\n      $timepicker.select = function(date, index, keep) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          controller.$dateValue = options.defaultDate === 'today' ? new Date() : new Date(1970, 0, 1);\n        }\n        if (!angular.isDate(date)) date = new Date(date);\n        if (index === 0) controller.$dateValue.setHours(date.getHours()); else if (index === 1) controller.$dateValue.setMinutes(date.getMinutes()); else if (index === 2) controller.$dateValue.setSeconds(date.getSeconds());\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n        if (options.autoclose && !keep) {\n          $timeout(function() {\n            $timepicker.hide(true);\n          });\n        }\n      };\n      $timepicker.switchMeridian = function(date) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          return;\n        }\n        var hours = (date || controller.$dateValue).getHours();\n        controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n      };\n      $timepicker.$build = function() {\n        var i;\n        var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n        var hours = [];\n        var hour;\n        for (i = 0; i < options.length; i++) {\n          hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n          hours.push({\n            date: hour,\n            label: formatDate(hour, hoursFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n            disabled: $timepicker.$isDisabled(hour, 0)\n          });\n        }\n        var minutes = [];\n        var minute;\n        for (i = 0; i < options.length; i++) {\n          minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n          minutes.push({\n            date: minute,\n            label: formatDate(minute, minutesFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(minute, 1),\n            disabled: $timepicker.$isDisabled(minute, 1)\n          });\n        }\n        var seconds = [];\n        var second;\n        for (i = 0; i < options.length; i++) {\n          second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n          seconds.push({\n            date: second,\n            label: formatDate(second, secondsFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(second, 2),\n            disabled: $timepicker.$isDisabled(second, 2)\n          });\n        }\n        var rows = [];\n        for (i = 0; i < options.length; i++) {\n          if (showSeconds) {\n            rows.push([ hours[i], minutes[i], seconds[i] ]);\n          } else {\n            rows.push([ hours[i], minutes[i] ]);\n          }\n        }\n        scope.rows = rows;\n        scope.showSeconds = showSeconds;\n        scope.showAM = showAM;\n        scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n        scope.timeSeparator = timeSeparator;\n        $timepicker.$isBuilt = true;\n      };\n      $timepicker.$isSelected = function(date, index) {\n        if (!$timepicker.$date) return false; else if (index === 0) {\n          return date.getHours() === $timepicker.$date.getHours();\n        } else if (index === 1) {\n          return date.getMinutes() === $timepicker.$date.getMinutes();\n        } else if (index === 2) {\n          return date.getSeconds() === $timepicker.$date.getSeconds();\n        }\n      };\n      $timepicker.$isDisabled = function(date, index) {\n        var selectedTime;\n        if (index === 0) {\n          selectedTime = date.getTime() + viewDate.minute * 6e4 + viewDate.second * 1e3;\n        } else if (index === 1) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.second * 1e3;\n        } else if (index === 2) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.minute * 6e4;\n        }\n        return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n      };\n      scope.$arrowAction = function(value, index) {\n        if (options.arrowBehavior === 'picker') {\n          $timepicker.$setTimeByStep(value, index);\n        } else {\n          $timepicker.$moveIndex(value, index);\n        }\n      };\n      $timepicker.$setTimeByStep = function(value, index) {\n        var newDate = new Date($timepicker.$date || startDate);\n        var hours = newDate.getHours();\n        var minutes = newDate.getMinutes();\n        var seconds = newDate.getSeconds();\n        if (index === 0) {\n          newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n        } else if (index === 1) {\n          newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n        } else if (index === 2) {\n          newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n        }\n        $timepicker.select(newDate, index, true);\n      };\n      $timepicker.$moveIndex = function(value, index) {\n        var targetDate;\n        if (index === 0) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n          angular.extend(viewDate, {\n            hour: targetDate.getHours()\n          });\n        } else if (index === 1) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n          angular.extend(viewDate, {\n            minute: targetDate.getMinutes()\n          });\n        } else if (index === 2) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n          angular.extend(viewDate, {\n            second: targetDate.getSeconds()\n          });\n        }\n        $timepicker.$build();\n      };\n      $timepicker.$onMouseDown = function(evt) {\n        if (evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $timepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          $timepicker.hide(true);\n          return;\n        }\n        var newDate = new Date($timepicker.$date);\n        var hours = newDate.getHours();\n        var hoursLength = formatDate(newDate, hoursFormat).length;\n        var minutes = newDate.getMinutes();\n        var minutesLength = formatDate(newDate, minutesFormat).length;\n        var seconds = newDate.getSeconds();\n        var secondsLength = formatDate(newDate, secondsFormat).length;\n        var sepLength = 1;\n        var lateralMove = /(37|39)/.test(evt.keyCode);\n        var count = 2 + showSeconds * 1 + showAM * 1;\n        if (lateralMove) {\n          if (evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1; else if (evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n        }\n        var selectRange = [ 0, hoursLength ];\n        var incr = 0;\n        if (evt.keyCode === 38) incr = -1;\n        if (evt.keyCode === 40) incr = +1;\n        var isSeconds = selectedIndex === 2 && showSeconds;\n        var isMeridian = selectedIndex === 2 && !showSeconds || selectedIndex === 3 && showSeconds;\n        if (selectedIndex === 0) {\n          newDate.setHours(hours + incr * parseInt(options.hourStep, 10));\n          hoursLength = formatDate(newDate, hoursFormat).length;\n          selectRange = [ 0, hoursLength ];\n        } else if (selectedIndex === 1) {\n          newDate.setMinutes(minutes + incr * parseInt(options.minuteStep, 10));\n          minutesLength = formatDate(newDate, minutesFormat).length;\n          selectRange = [ hoursLength + sepLength, minutesLength ];\n        } else if (isSeconds) {\n          newDate.setSeconds(seconds + incr * parseInt(options.secondStep, 10));\n          secondsLength = formatDate(newDate, secondsFormat).length;\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength, secondsLength ];\n        } else if (isMeridian) {\n          if (!lateralMove) $timepicker.switchMeridian();\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength + (secondsLength + sepLength) * showSeconds, 2 ];\n        }\n        $timepicker.select(newDate, selectedIndex, true);\n        createSelection(selectRange[0], selectRange[1]);\n        parentScope.$digest();\n      };\n      function createSelection(start, length) {\n        var end = start + length;\n        if (element[0].createTextRange) {\n          var selRange = element[0].createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end);\n          selRange.select();\n        } else if (element[0].setSelectionRange) {\n          element[0].setSelectionRange(start, end);\n        } else if (angular.isUndefined(element[0].selectionStart)) {\n          element[0].selectionStart = start;\n          element[0].selectionEnd = end;\n        }\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $timepicker.init;\n      $timepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'time');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $timepicker.destroy;\n      $timepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $timepicker.show;\n      $timepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if ($timepicker.$element) $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if (options.keyboard) {\n            if (element) element.on('keydown', $timepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $timepicker.hide;\n      $timepicker.hide = function(blur) {\n        if (!$timepicker.$isShown) return;\n        if ($timepicker.$element) $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n        if (options.keyboard) {\n          if (element) element.off('keydown', $timepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $timepicker;\n    }\n    timepickerFactory.defaults = defaults;\n    return timepickerFactory;\n  } ];\n}).directive('bsTimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$timepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n  var defaults = $timepicker.defaults;\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'autoclose', 'timeType', 'timeFormat', 'timezone', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'secondStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'roundDisplay', 'id', 'prefixClass', 'prefixEvent', 'defaultDate' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'roundDisplay' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      if (isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n      var timepicker = $timepicker(element, controller, options);\n      options = timepicker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!timepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          if (newValue === true) {\n            timepicker.show();\n          } else {\n            timepicker.hide();\n          }\n        });\n      }\n      var dateParser = $dateParser({\n        format: options.timeFormat,\n        lang: lang\n      });\n      angular.forEach([ 'minTime', 'maxTime' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            if (!isNaN(timepicker.$options[key])) timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        }\n      });\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        timepicker.update(controller.$dateValue);\n      }, true);\n      function validateAgainstMinMaxTime(parsedTime) {\n        if (!angular.isDate(parsedTime)) return;\n        var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n        var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (!isValid) {\n          return;\n        }\n        controller.$dateValue = parsedTime;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedTime || isNaN(parsedTime.getTime())) {\n          controller.$setValidity('date', false);\n          return undefined;\n        }\n        validateAgainstMinMaxTime(parsedTime);\n        if (options.timeType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedTime, options.timezone, true);\n          return formatDate(date, options.modelTimeFormat || options.timeFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.timeType === 'number') {\n          return date.getTime();\n        } else if (options.timeType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.timeType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.timeType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n        } else if (options.timeType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getTimeFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getTimeFormattedString());\n      };\n      function getTimeFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (timepicker) timepicker.destroy();\n        options = null;\n        timepicker = null;\n      });\n    }\n  };\n} ]);\n\n// Source: tab/tab.js\nangular.module('mgcrea.ngStrap.tab', []).provider('$tab', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    template: 'tab/tab.tpl.html',\n    navClass: 'nav-tabs',\n    activeClass: 'active'\n  };\n  var controller = this.controller = function($scope, $element, $attrs) {\n    var self = this;\n    self.$options = angular.copy(defaults);\n    angular.forEach([ 'animation', 'navClass', 'activeClass' ], function(key) {\n      if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n    });\n    $scope.$navClass = self.$options.navClass;\n    $scope.$activeClass = self.$options.activeClass;\n    self.$panes = $scope.$panes = [];\n    self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n    self.$push = function(pane) {\n      if (angular.isUndefined(self.$panes.$active)) {\n        $scope.$setActive(pane.name || 0);\n      }\n      self.$panes.push(pane);\n    };\n    self.$remove = function(pane) {\n      var index = self.$panes.indexOf(pane);\n      var active = self.$panes.$active;\n      var activeIndex;\n      if (angular.isString(active)) {\n        activeIndex = self.$panes.map(function(pane) {\n          return pane.name;\n        }).indexOf(active);\n      } else {\n        activeIndex = self.$panes.$active;\n      }\n      self.$panes.splice(index, 1);\n      if (index < activeIndex) {\n        activeIndex--;\n      } else if (index === activeIndex && activeIndex === self.$panes.length) {\n        activeIndex--;\n      }\n      if (activeIndex >= 0 && activeIndex < self.$panes.length) {\n        self.$setActive(self.$panes[activeIndex].name || activeIndex);\n      } else {\n        self.$setActive();\n      }\n    };\n    self.$setActive = $scope.$setActive = function(value) {\n      self.$panes.$active = value;\n      self.$activePaneChangeListeners.forEach(function(fn) {\n        fn();\n      });\n    };\n    self.$isActive = $scope.$isActive = function($pane, $index) {\n      return self.$panes.$active === $pane.name || self.$panes.$active === $index;\n    };\n  };\n  this.$get = function() {\n    var $tab = {};\n    $tab.defaults = defaults;\n    $tab.controller = controller;\n    return $tab;\n  };\n}).directive('bsTabs', [ '$window', '$animate', '$tab', '$parse', function($window, $animate, $tab, $parse) {\n  var defaults = $tab.defaults;\n  return {\n    require: [ '?ngModel', 'bsTabs' ],\n    transclude: true,\n    scope: true,\n    controller: [ '$scope', '$element', '$attrs', $tab.controller ],\n    templateUrl: function(element, attr) {\n      return attr.template || defaults.template;\n    },\n    link: function postLink(scope, element, attrs, controllers) {\n      var ngModelCtrl = controllers[0];\n      var bsTabsCtrl = controllers[1];\n      if (ngModelCtrl) {\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n        });\n        ngModelCtrl.$formatters.push(function(modelValue) {\n          bsTabsCtrl.$setActive(modelValue);\n          return modelValue;\n        });\n      }\n      if (attrs.bsActivePane) {\n        var parsedBsActivePane = $parse(attrs.bsActivePane);\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n        });\n        scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n          bsTabsCtrl.$setActive(newValue);\n        }, true);\n      }\n    }\n  };\n} ]).directive('bsPane', [ '$window', '$animate', '$sce', function($window, $animate, $sce) {\n  return {\n    require: [ '^?ngModel', '^bsTabs' ],\n    scope: true,\n    link: function postLink(scope, element, attrs, controllers) {\n      var bsTabsCtrl = controllers[1];\n      element.addClass('tab-pane');\n      attrs.$observe('title', function(newValue, oldValue) {\n        scope.title = $sce.trustAsHtml(newValue);\n      });\n      scope.name = attrs.name;\n      scope.link = attrs.link ? attrs.link : false;\n      if (bsTabsCtrl.$options.animation) {\n        element.addClass(bsTabsCtrl.$options.animation);\n      }\n      attrs.$observe('disabled', function(newValue, oldValue) {\n        scope.disabled = scope.$eval(newValue);\n      });\n      bsTabsCtrl.$push(scope);\n      scope.$on('$destroy', function() {\n        bsTabsCtrl.$remove(scope);\n      });\n      function render() {\n        var index = bsTabsCtrl.$panes.indexOf(scope);\n        $animate[bsTabsCtrl.$isActive(scope, index) ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n      }\n      bsTabsCtrl.$activePaneChangeListeners.push(function() {\n        render();\n      });\n      render();\n    }\n  };\n} ]);\n\n// Source: sort/sort.js\nangular.module('mgcrea.ngStrap.sort', []).directive('bsSort', [function() {\n  return {\n    scope: true,\n    compile: function(element, attrs) {\n      var list = element[0].querySelectorAll('th');\n      for (var i = 0, len = list.length; i < len; i++) {\n        var item = list[i];\n        item = angular.element(item);\n        if (item.attr('data-sortable')) {\n          var dataName = item.attr('data-name');\n          item.append('<div class=\"sorter\"><i class=\"nox-sort-up sort-asc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'asc\\'}\"></i><i class=\"nox-sort-down sort-desc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'desc\\'}\"></i></div>');\n        }\n      }\n\n      return function postLink (scope, element, attrs) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['onSort'], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        var list = element[0].querySelectorAll('th');\n        for (var i = 0, len = list.length; i < len; i++) {\n          var item = list[i];\n          item = angular.element(item);\n          if (item.attr('data-sortable')) {\n            item.on('click', clickColumn)\n          }\n        }\n\n        function clickColumn(event) {\n          var target = angular.element(event.currentTarget);\n          var dataName = target.attr('data-name');\n          if (dataName === scope.orderBy) {\n            scope.sortBy = scope.sortBy === 'asc' ? 'desc' : 'asc';\n          }\n          else {\n            scope.orderBy = dataName;\n            scope.sortBy = 'desc';\n          }\n          scope.$apply();\n\n          if (angular.isDefined(options.onSort) && angular.isFunction(options.onSort)) {\n            options.onSort(scope.orderBy, scope.sortBy);\n          }\n        }\n\n      }\n\n    }\n  };\n} ]);\n\n// Source: select/select.js\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"select-arrow\"><i class=\"nox-sort-down\"></i></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          }\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function () {\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n            scope.$activeIndex = -1;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: rangedatepicker/rangedatepicker.js\n/**\n * Created by xiashan on 17/5/12.\n */\n\nangular.module('mgcrea.ngStrap.rangedatepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ])\n  .provider('$rangedatepicker', function () {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'rangedatepicker',\n      placement: 'bottom-left',\n      templateUrl: 'rangedatepicker/rangedatepicker.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      connector: ' / ',\n      dateType: 'date',\n      dateFormat: 'yyyy-MM-dd',\n      timezone: null,\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      compare: true\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'rangedatepickerViews', '$tooltip', '$timeout',\n      function ($window, $document, $rootScope, $sce, $dateFormatter, rangedatepickerViews, $tooltip, $timeout) {\n        var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n        var isTouch = 'createTouch' in $window.document && isNative;\n        if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n        function RangeDatepickerFactory (element, controller, config) {\n          var $rangedatepicker = $tooltip(element, angular.extend({}, defaults, config));\n          var options = $rangedatepicker.$options;\n          var scope = $rangedatepicker.$scope;\n          var pickerViews = rangedatepickerViews($rangedatepicker);\n          $rangedatepicker.$view = pickerViews.view;\n          var viewDate = pickerViews.viewDate;\n          scope.$iconLeft = options.iconLeft;\n          scope.$iconRight = options.iconRight;\n          scope.$compare = options.compare;\n          var $picker = $rangedatepicker.$view;\n\n          var today = new Date();\n          var t = $rangedatepicker.$today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n          var d = today.getDay();\n\n          scope.rangeList = [\n            {name: 'Today', value: '0d', date: {start: t, end: t}},\n            {name: 'Yesterday', value: '-2d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1)}},\n            {name: 'Last 7 Days', value: '-7d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6), end: t}},\n            {name: 'Last Week', value: '-1w', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6 - d), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - d)}},\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}}\n          ];\n\n          // 区间\n          scope.ctrl = {\n            rangeType: '',\n            compare: ''\n          };\n\n          scope.$select = function (date, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.select(date, index);\n          };\n          scope.$selectPane = function (value, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.$selectPane(value, index);\n          };\n          scope.$selectRange = function (type) {\n            if (type === scope.ctrl.rangeType || scope.ctrl.compare) {\n              return;\n            }\n            $rangedatepicker.$selectRange(type);\n            $rangedatepicker.hide(true);\n          };\n          scope.$toggleCompare = function () {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            modelValue.onlyCompare = true;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n          };\n          scope.$closePicker = function () {\n            $rangedatepicker.hide();\n          };\n          scope.$stopPropagation = function (evt) {\n            evt.stopPropagation();\n          };\n\n          $rangedatepicker.update = function (sDate, eDate, force) {\n            if (angular.isDate(sDate) && !isNaN(sDate.getTime()) && angular.isDate(eDate) && !isNaN(eDate.getTime())) {\n              if (!scope.ctrl.compare) {\n                $rangedatepicker.$date = [sDate, eDate];\n              } else {\n                $rangedatepicker.$compareDate = [sDate, eDate];\n              }\n              $picker.update.call($picker, sDate, eDate);\n            }\n            $rangedatepicker.$build(!force);\n          };\n          $rangedatepicker.updateDisabledDates = function (dateRanges) {\n            options.disabledDateRanges = dateRanges;\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], $rangedatepicker.$setDisabledEl);\n            }\n          };\n          $rangedatepicker.select = function (date, index, keep) {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            if (!scope.ctrl.compare) {\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$dateValue[index]) || isNaN(controller.$dateValue[index].getTime())) {\n                  controller.$dateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$dateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.startDate = angular.copy(date);\n              } else {\n                modelValue.endDate = angular.copy(date);\n              }\n            } else {\n              controller.$compareDateValue = !controller.$compareDateValue ? [] : controller.$compareDateValue;\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$compareDateValue[index]) || isNaN(controller.$compareDateValue[index].getTime())) {\n                  controller.$compareDateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$compareDateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.compareStartDate = angular.copy(date);\n              } else {\n                modelValue.compareEndDate = angular.copy(date);\n              }\n            }\n            modelValue.onlyCompare = false;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              scope.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === modelValue.startDate.toDateString() && item.date.end.toDateString() === modelValue.endDate.toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            if (options.autoclose && !keep) {\n              $timeout(function () {\n                $rangedatepicker.hide(true);\n              });\n            }\n          };\n          $rangedatepicker.$getCompare = function () {\n            return scope.ctrl && scope.ctrl.compare;\n          };\n          $rangedatepicker.$build = function (pristine) {\n            if (pristine === true && $picker.built) return;\n            if (pristine === false && !$picker.built) return;\n            $picker.build.call($picker, $rangedatepicker.$date);\n          };\n          $rangedatepicker.$updateSelected = function () {\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], updateSelected);\n            }\n          };\n          $rangedatepicker.$isSelected = function (date) {\n            return $picker.isSelected(date);\n          };\n          $rangedatepicker.$setDisabledEl = function (el) {\n            el.disabled = $picker.isDisabled(el.date);\n          };\n          $rangedatepicker.$selectPane = function (value, index) {\n            var steps = $picker.steps;\n            var key = (index === 0) ? 'startDate' : 'endDate';\n            var targetDate = new Date(Date.UTC(viewDate[key].year + (steps.year || 0) * value, viewDate[key].month + (steps.month || 0) * value, 1));\n            angular.extend(viewDate[key], {\n              year: targetDate.getUTCFullYear(),\n              month: targetDate.getUTCMonth(),\n              date: targetDate.getUTCDate()\n            });\n            $rangedatepicker.$build();\n          };\n          $rangedatepicker.$selectRange = function (type) {\n            var cate = type.substr(-1);\n            var value = parseInt(type.substr(0, type.length - 1), 10);\n            var endDate = $rangedatepicker.$today;\n            var startDate;\n            switch (cate) {\n              case 'd':\n                if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value + 1);\n                  if (value === -2) {\n                    endDate = startDate;\n                  }\n                } else {\n                  startDate = endDate;\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value);\n                }\n                break;\n              case 'w':\n                var day = endDate.getDay();\n                if (value <= 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (day * -1 + 1));\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + (day * -1));\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + 7 - day + 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (7 - day));\n                }\n                break;\n              case 'm':\n                if (value === 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n                } else if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + value, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), 0);\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                }\n                break;\n              default:\n                break;\n            }\n            if (angular.isDate(startDate) && angular.isDate(endDate)) {\n              controller.$dateValue[0] = new Date(startDate);\n              controller.$dateValue[1] = new Date(endDate);\n              var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n              modelValue.startDate = angular.copy(startDate);\n              modelValue.endDate = angular.copy(endDate);\n              modelValue.onlyCompare = false;\n              controller.$setViewValue(modelValue);\n              controller.$render();\n              scope.ctrl.rangeType = type;\n            }\n          };\n          $rangedatepicker.$onMouseDown = function (evt) {\n            evt.preventDefault(true);\n            evt.stopPropagation(true);\n            var targetEl = angular.element(evt.target);\n            if (isTouch) {\n              if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n                targetEl = targetEl.parent();\n              }\n              targetEl.triggerHandler('click');\n            }\n          };\n          function updateSelected (el) {\n            el.selected = $rangedatepicker.$isSelected(el.date);\n          }\n          function focusElement () {\n            element[0].focus();\n          }\n          var _init = $rangedatepicker.init;\n          $rangedatepicker.init = function () {\n            if (isNative && options.useNative) {\n              element.prop('type', 'date');\n              element.css('-webkit-appearance', 'textfield');\n              return;\n            } else if (isTouch) {\n              element.prop('type', 'text');\n              element.attr('readonly', 'true');\n              element.on('click', focusElement);\n            }\n            _init();\n          };\n          var _destroy = $rangedatepicker.destroy;\n          $rangedatepicker.destroy = function () {\n            if (isNative && options.useNative) {\n              element.off('click', focusElement);\n            }\n            _destroy();\n          };\n          var _show = $rangedatepicker.show;\n          $rangedatepicker.show = function () {\n            // if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n            if (element.attr('disabled')) return;\n            _show();\n            $timeout(function () {\n              if (!$rangedatepicker.$isShown) return;\n              $rangedatepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            }, 0, false);\n          };\n          var _hide = $rangedatepicker.hide;\n          $rangedatepicker.hide = function (blur) {\n            if (!$rangedatepicker.$isShown) return;\n            $rangedatepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            _hide(blur);\n          };\n          return $rangedatepicker;\n        }\n        RangeDatepickerFactory.defaults = defaults;\n        return RangeDatepickerFactory;\n      }];\n  })\n  .directive('bsRangedatepicker', ['$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$rangedatepicker',\n    function ($window, $parse, $q, $dateFormatter, $dateParser, $rangedatepicker) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      return {\n        restrict: 'EAC',\n        require: 'ngModel',\n        link: function postLink (scope, element, attr, controller) {\n          var options = {\n            scope: scope\n          };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'connector', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'compare'], function (key) {\n            if (angular.isDefined(attr[key])) options[key] = attr[key];\n          });\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container', 'autoclose', 'useNative', 'compare'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n              options[key] = false;\n            }\n          });\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n          var rangedatepicker = $rangedatepicker(element, controller, options);\n          options = rangedatepicker.$options;\n          if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n          var lang = options.lang;\n          var formatDate = function (date, format) {\n            return $dateFormatter.formatDate(date, format, lang);\n          };\n          var dateParser = $dateParser({\n            format: options.dateFormat,\n            lang: lang,\n            strict: options.strictFormat\n          });\n          angular.forEach(['minDate', 'maxDate'], function (key) {\n            if (angular.isDefined(attr[key])) {\n              attr.$observe(key, function (newValue) {\n                rangedatepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n                if (!isNaN(rangedatepicker.$options[key])) {\n                  rangedatepicker.$build(false);\n                }\n                if (controller.$dateValue) {\n                  validateAgainstMinMaxDate(controller.$dateValue[0], controller.$dateValue[1]);\n                }\n              });\n            }\n          });\n          if (angular.isDefined(attr.dateFormat)) {\n            attr.$observe('dateFormat', function (newValue) {\n              rangedatepicker.$options.dateFormat = newValue;\n            });\n          }\n          scope.$watch(attr.ngModel, function (newValue, oldValue) {\n            if (newValue && newValue.onlyCompare) {\n              rangedatepicker.update(null, null, true);\n            } else if (rangedatepicker.$getCompare()) {\n              rangedatepicker.update(controller.$compareDateValue[0], controller.$compareDateValue[1]);\n            } else {\n              rangedatepicker.update(controller.$dateValue[0], controller.$dateValue[1]);\n            }\n          }, true);\n\n          function getFormattedDate (modelValue) {\n            var date;\n            if (angular.isDate(modelValue)) {\n              date = modelValue;\n            } else if (options.dateType === 'string') {\n              date = dateParser.parse(modelValue, null, options.modelDateFormat);\n            } else if (options.dateType === 'unix') {\n              date = new Date(modelValue * 1e3);\n            } else {\n              date = new Date(modelValue);\n            }\n            return date;\n          }\n          function validateAgainstMinMaxDate (parsedDate1, parsedDate2) {\n            if (!angular.isDate(parsedDate1) || !angular.isDate(parsedDate2)) {\n              return false;\n            }\n            var isMinValid = isNaN(rangedatepicker.$options.minDate) || parsedDate1.getTime() >= rangedatepicker.$options.minDate;\n            var isMaxValid = isNaN(rangedatepicker.$options.maxDate) || parsedDate2.getTime() <= rangedatepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            var compare = rangedatepicker.$getCompare();\n            if (isValid) {\n              if (compare) {\n                controller.$compareDateValue[0] = parsedDate1;\n                controller.$compareDateValue[1] = parsedDate2;\n              } else {\n                controller.$dateValue[0] = parsedDate1;\n                controller.$dateValue[1] = parsedDate2;\n              }\n            }\n            return true;\n          }\n          controller.$parsers.unshift(function (viewValue) {\n            var compare = rangedatepicker.$getCompare();\n            if (!viewValue) {\n              controller.$setValidity('date', true);\n              return null;\n            }\n            if (viewValue.onlyCompare) {\n              viewValue.compare = compare;\n              return viewValue;\n            }\n            var parsedDate1;\n            var parsedDate2;\n            if (compare) {\n              parsedDate1 = dateParser.parse(viewValue.compareStartDate, controller.$compareDateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.compareEndDate, controller.$compareDateValue[1]);\n            } else {\n              parsedDate1 = dateParser.parse(viewValue.startDate, controller.$dateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.endDate, controller.$dateValue[1]);\n            }\n            if (parsedDate1 && !parsedDate2) {\n              parsedDate2 = angular.copy(parsedDate1);\n            }\n            if (!parsedDate1 && parsedDate2) {\n              parsedDate1 = angular.copy(parsedDate2);\n            }\n            if (!parsedDate1 || isNaN(parsedDate1.getTime()) || !parsedDate2 || isNaN(parsedDate2.getTime())) {\n              controller.$setValidity('date', false);\n              return false;\n            }\n            validateAgainstMinMaxDate(parsedDate1, parsedDate2);\n            var obj = {\n              dateRange: viewValue.dateRange,\n              compare: compare\n            };\n            var skey = '';\n            var ekey = '';\n            if (compare) {\n              obj.startDate = viewValue.startDate;\n              obj.endDate = viewValue.endDate;\n              skey = 'compareStartDate';\n              ekey = 'compareEndDate';\n            } else {\n              // obj.compareStartDate = viewValue.compareStartDate;\n              // obj.compareEndDate = viewValue.compareEndDate;\n              skey = 'startDate';\n              ekey = 'endDate';\n            }\n            if (options.dateType === 'string') {\n              obj[skey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate1, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              obj[ekey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate2, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              return obj;\n            }\n            var date1;\n            var date2;\n            if (compare) {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[1], options.timezone, true);\n            } else {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$dateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$dateValue[1], options.timezone, true);\n            }\n            if (options.dateType === 'number') {\n              obj[skey] = date1.getTime();\n              obj[ekey] = date2.getTime();\n            } else if (options.dateType === 'unix') {\n              obj[skey] = date1.getTime() / 1e3;\n              obj[ekey] = date2.getTime() / 1e3;\n            } else if (options.dateType === 'iso') {\n              obj[skey] = date1.toISOString();\n              obj[ekey] = date2.toISOString();\n            } else {\n              obj[skey] = new Date(date1);\n              obj[ekey] = new Date(date2);\n            }\n            return obj;\n          });\n          controller.$formatters.push(function (modelValue) {\n            var startDate;\n            var endDate;\n            if (angular.isUndefined(modelValue) || modelValue === null) {\n              return '';\n            } else if (modelValue.startDate && modelValue.endDate) {\n              startDate = getFormattedDate(modelValue.startDate);\n              endDate = getFormattedDate(modelValue.endDate);\n              controller.$dateValue = [dateParser.timezoneOffsetAdjust(startDate, options.timezone), dateParser.timezoneOffsetAdjust(endDate, options.timezone)];\n            } else if (modelValue.dateRange) {\n              controller.$dateRange = modelValue.dateRange;\n              controller.$dateValue = !controller.$dateValue ? [] : controller.$dateValue;\n              rangedatepicker.$selectRange(controller.$dateRange);\n            }\n            controller.$compareDateValue = [];\n\n            return getDateFormattedString();\n          });\n          controller.$render = function () {\n            element.val(getDateFormattedString());\n          };\n          function getDateFormattedString () {\n            // return (!controller.$dateValue || controller.$dateValue.length === 0 || !controller.$dateValue[0] || !controller.$dateValue[1] ||\n            // isNaN(controller.$dateValue[0].getTime()) || isNaN(controller.$dateValue[1].getTime()))\n            //   ? '' : formatDate(controller.$dateValue[0], options.dateFormat) + options.connector + formatDate(controller.$dateValue[1], options.dateFormat);\n            if (!controller.$modelValue || !controller.$modelValue.startDate || isNaN(controller.$modelValue.startDate.getTime())) {\n              return '';\n            }\n            var html = formatDate(controller.$modelValue.startDate, options.dateFormat);\n            if (controller.$modelValue.compare && controller.$modelValue.compareStartDate && !isNaN(controller.$modelValue.compareStartDate.getTime())) {\n              html += ' vs ' + formatDate(controller.$modelValue.compareStartDate, options.dateFormat);\n            } else if (!controller.$modelValue.compare && controller.$modelValue.endDate && !isNaN(controller.$modelValue.endDate.getTime())) {\n              html += ' / ' + formatDate(controller.$modelValue.endDate, options.dateFormat);\n            }\n            return html;\n          }\n          scope.$on('$destroy', function () {\n            if (rangedatepicker) rangedatepicker.destroy();\n            options = null;\n            rangedatepicker = null;\n          });\n        }\n      };\n    }])\n  .provider('rangedatepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      return function (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = (picker.$date && picker.$date[0]) || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var endDate = (picker.$date && picker.$date[1]) || (options.endDate ? dateParser.getDateForAttribute('endDate', options.endDate) : new Date());\n        var viewDate = {\n          startDate: {\n            year: startDate.getFullYear(),\n            month: startDate.getMonth(),\n            date: startDate.getDate()\n          },\n          endDate: {\n            year: endDate.getFullYear(),\n            month: endDate.getMonth(),\n            date: endDate.getDate()\n          }\n        };\n        var view = {\n          format: options.dayFormat,\n          split: 7,\n          steps: {\n            month: 1\n          },\n          update: function (sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function () {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var item = viewDate[value];\n              var firstDayOfMonth = new Date(item.year, item.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === today,\n                  label: formatDate(day, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], day),\n                  inRange: that.isInRange(day),\n                  muted: day.getMonth() !== item.month,\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(day, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], day)\n                });\n              }\n              scope.title[index] = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.rows[index] = split(days, that.split);\n            });\n            scope.showLabels = true;\n            scope.labels = weekDaysLabelsHtml;\n            scope.isTodayDisabled = this.isDisabled(new Date());\n            this.built = true;\n          },\n          isSelected: function (currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth() &&\n              date.getDate() === currentDate.getDate();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function (date, index) {\n            var time = date.getTime();\n            if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            if (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1]))) {\n              return true;\n            }\n            if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) {\n              return true;\n            }\n            if (options.disabledDateRanges) {\n              for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                  return true;\n                }\n              }\n            }\n            return false;\n          }\n        };\n        return {\n          view: view,\n          viewDate: viewDate\n        };\n      };\n    } ];\n  });\n\n// Source: popover/popover.js\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      // uncommenting the next two lines will break backwards compatability\n      // prefixClass: 'popover',\n      // prefixEvent: 'popover',\n      container: false,\n      target: false,\n      placement: 'right',\n      templateUrl: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function ($tooltip) {\n\n      function PopoverFactory (element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if (options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function ($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr) {\n\n        var popover;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent', 'bsEnabled'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n              if (angular.isDefined(oldValue)) {\n                requestAnimationFrame(function () {\n                  if (popover) popover.$applyPlacement();\n                });\n              }\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsPopover) {\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              requestAnimationFrame(function () {\n                if (popover) popover.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n            if (newValue === true) {\n              popover.show();\n            } else {\n              popover.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(popover),?/i);\n            if (newValue === false) {\n              popover.setEnabled(false);\n            } else {\n              popover.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            popover.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: pagination/pagination.js\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n\n// Source: modal/modal.js\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n\n// Source: helpers/raf.js\nif (angular.version.minor < 3 && angular.version.dot < 14) {\n  angular.module('ng')\n\n  .factory('$$rAF', function ($window, $timeout) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported ?\n      function (fn) {\n        var id = requestAnimationFrame(fn);\n        return function () {\n          cancelAnimationFrame(id);\n        };\n      } :\n      function (fn) {\n        var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n        return function () {\n          $timeout.cancel(timer);\n        };\n      };\n\n    raf.supported = rafSupported;\n\n    return raf;\n\n  });\n}\n\n// Source: helpers/parse-options.js\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function () {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function ($parse, $q) {\n\n      function ParseOptionsFactory (attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match;\n        var displayFn;\n        var valueName;\n        /* eslint-disable no-unused-vars */\n        var keyName;\n        var groupByFn;\n        /* eslint-enable no-unused-vars */\n        var valueFn;\n        var valuesFn;\n\n        $parseOptions.init = function () {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]);\n          valueName = match[4] || match[6];\n          keyName = match[5];\n          groupByFn = $parse(match[3] || '');\n          valueFn = $parse(match[2] ? match[1] : valueName);\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function (scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function (values) {\n            if (!angular.isArray(values)) {\n              values = [];\n            }\n            $parseOptions.$values = values.length ? parseValues(values, scope) : [];\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function (modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues (values, scope) {\n          return values.map(function (match, index) {\n            var locals = {};\n            var label;\n            var value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n\n// Source: helpers/dimensions.js\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function () {\n\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function (element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function (element, prop, extra) {\n      var value;\n      if (element.currentStyle) { // IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function (element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides set equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip\n     * @url http://api.jquery.com/offset/\n     * @param element\n     * @param options\n     * @param i\n     */\n    fn.setOffset = function (element, options, i) {\n      var curPosition;\n      var curLeft;\n      var curCSSTop;\n      var curTop;\n      var curOffset;\n      var curCSSLeft;\n      var calculatePosition;\n      var position = fn.css(element, 'position');\n      var curElem = angular.element(element);\n      var props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        element.style.position = 'relative';\n      }\n\n      curOffset = fn.offset(element);\n      curCSSTop = fn.css(element, 'top');\n      curCSSLeft = fn.css(element, 'left');\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = fn.position(element);\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (angular.isFunction(options)) {\n        options = options.call(element, i, curOffset);\n      }\n\n      if (options.top !== null) {\n        props.top = (options.top - curOffset.top) + curTop;\n      }\n      if (options.left !== null) {\n        props.left = (options.left - curOffset.left) + curLeft;\n      }\n\n      if ('using' in options) {\n        options.using.call(curElem, props);\n      } else {\n        curElem.css({\n          top: props.top + 'px',\n          left: props.left + 'px'\n        });\n      }\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function (element) {\n\n      var offsetParentRect = {top: 0, left: 0};\n      var offsetParentEl;\n      var offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentEl\n        offsetParentEl = offsetParentElement(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentEl, 'html')) {\n          offsetParentRect = fn.offset(offsetParentEl);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    function offsetParentElement (element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    }\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function (element, outer) {\n      var value = element.offsetHeight;\n      if (outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function (element, outer) {\n      var value = element.offsetWidth;\n      if (outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n\n// Source: helpers/debounce.js\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', function ($timeout) {\n  return function (func, wait, immediate) {\n    var timeout = null;\n    return function () {\n      var context = this;\n      var args = arguments;\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if (callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = null;\n    if (!options) options = {};\n    return function () {\n      var context = this;\n      var args = arguments;\n      if (!timeout) {\n        if (options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later () {\n          timeout = null;\n          if (options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n});\n\n// Source: helpers/date-parser.js\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function ($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate () {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function (value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function (value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function (value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function (value) { this.hours = value; };\n  ParseDate.prototype.getHours = function () { return this.hours; };\n  ParseDate.prototype.setDate = function (value) { this.day = value; };\n  ParseDate.prototype.setMonth = function (value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function (value) { this.year = value; };\n  ParseDate.prototype.fromDate = function (value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function () {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop () {\n  }\n\n  function isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive (array, value) {\n    var len = array.length;\n    var str = value.toString().toLowerCase();\n    for (var i = 0; i < len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function ($locale, dateFilter) {\n\n    var DateParserFactory = function (config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      /* eslint-disable key-spacing, quote-props */\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}'\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function (value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function (value) { return this.setMonth(1 * value - 1); },\n        'M'     : function (value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function (value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : function (value) { return (1 * value <= 50 && value.length === 2) ? this.setFullYear(2000 + 1 * value) : this.setFullYear(1 * value); }\n      };\n      /* eslint-enable key-spacing, quote-props */\n\n      var regex;\n      var setMap;\n\n      $dateParser.init = function () {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function (date) {\n        if (angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function (value, baseDate, format, timezone) {\n        // check for date format special names\n        if (format) format = $locale.DATETIME_FORMATS[format] || format;\n        if (angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format, timezone);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if (!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for (var i = 0; i < matches.length - 1; i++) {\n          if (formatSetMap[i]) formatSetMap[i].call(date, matches[i + 1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function (key, value) {\n        var date;\n\n        if (value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if (isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && value.length === 0) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function (key, value) {\n        var time;\n\n        if (value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if (isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.length === 0) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function (date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      /* Correct the date for timezone offset.\n      * @param  date  (Date) the date to adjust\n      * @param  timezone  (string) the timezone to adjust for\n      * @param  undo  (boolean) to add or subtract timezone offset\n      * @return  (Date) the corrected date\n      */\n      $dateParser.timezoneOffsetAdjust = function (date, timezone, undo) {\n        if (!date) {\n          return null;\n        }\n        // Right now, only 'UTC' is supported.\n        if (timezone && timezone === 'UTC') {\n          date = new Date(date.getTime());\n          date.setMinutes(date.getMinutes() + (undo ? -1 : 1) * date.getTimezoneOffset());\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function regExpForFormat (format) {\n        // `format` string can contain literal values.\n        // These need to be escaped by surrounding with\n        // single quotes (e.g. `\"h 'in the morning'\"`).\n        // In order to output a single quote, escape it - i.e.,\n        // two single quotes in a sequence (e.g. `\"h 'o''clock'\"`).\n\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseRegex(re);\n      }\n\n      function buildDateAbstractRegex (format) {\n        var escapedFormat = escapeReservedSymbols(format);\n        var escapedLiteralFormat = escapedFormat.replace(/''/g, '\\\\\\'');\n        var literalRegex = /('(?:\\\\'|.)*?')/;\n        var formatParts = escapedLiteralFormat.split(literalRegex);\n        var dateElements = Object.keys(regExpMap);\n        var dateRegexParts = [];\n\n        angular.forEach(formatParts, function (part) {\n          if (isFormatStringLiteral(part)) {\n            part = trimLiteralEscapeChars(part);\n          } else {\n            // Abstract replaces to avoid collisions\n            for (var i = 0; i < dateElements.length; i++) {\n              part = part.split(dateElements[i]).join('${' + i + '}');\n            }\n          }\n          dateRegexParts.push(part);\n        });\n\n        return dateRegexParts.join('');\n      }\n\n      function escapeReservedSymbols (text) {\n        return text.replace(/\\\\/g, '[\\\\\\\\]')\n                   .replace(/-/g, '[-]')\n                   .replace(/\\./g, '[.]')\n                   .replace(/\\*/g, '[*]')\n                   .replace(/\\+/g, '[+]')\n                   .replace(/\\?/g, '[?]')\n                   .replace(/\\$/g, '[$]')\n                   .replace(/\\^/g, '[^]')\n                   .replace(/\\//g, '[/]')\n                   .replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function isFormatStringLiteral (text) {\n        return /^'.*'$/.test(text);\n      }\n\n      function trimLiteralEscapeChars (text) {\n        return text.replace(/^'(.*)'$/, '$1');\n      }\n\n      function buildDateParseRegex (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var re = abstractRegex;\n\n        // Replace abstracted values\n        for (var i = 0; i < dateElements.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[dateElements[i]] + ')');\n        }\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      function setMapForFormat (format) {\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseValuesMap(re);\n      }\n\n      function buildDateParseValuesMap (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var valuesRegex = new RegExp('\\\\${(\\\\d+)}', 'g');\n        var valuesMatch;\n        var keyIndex;\n        var valueKey;\n        var valueFunction;\n        var valuesFunctionMap = [];\n\n        /* eslint-disable no-cond-assign */\n        while ((valuesMatch = valuesRegex.exec(abstractRegex)) !== null) {\n          keyIndex = valuesMatch[1];\n          valueKey = dateElements[keyIndex];\n          valueFunction = setFnMap[valueKey];\n\n          valuesFunctionMap.push(valueFunction);\n        }\n\n        return valuesFunctionMap;\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n\n// Source: helpers/date-formatter.js\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n\n// Source: helpers/compiler.js\n// NOTICE: This file was forked from the angular-material project (github.com/angular/material)\n// MIT Licensed - Copyright (c) 2014-2015 Google, Inc. http://angularjs.org\n\nangular.module('mgcrea.ngStrap.core', [])\n  .service('$bsCompiler', bsCompilerService);\n\nfunction bsCompilerService ($q, $http, $injector, $compile, $controller, $templateCache) {\n\n  /*\n   * @ngdoc service\n   * @name $bsCompiler\n   * @module material.core\n   * @description\n   * The $bsCompiler service is an abstraction of angular's compiler, that allows the developer\n   * to easily compile an element with a templateUrl, controller, and locals.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * $bsCompiler.compile({\n   *   templateUrl: 'modal.html',\n   *   controller: 'ModalCtrl',\n   *   locals: {\n   *     modal: myModalInstance;\n   *   }\n   * }).then(function(compileData) {\n   *   compileData.element; // modal.html's template in an element\n   *   compileData.link(myScope); //attach controller & scope to element\n   * });\n   * </hljs>\n   */\n\n   /*\n    * @ngdoc method\n    * @name $bsCompiler#compile\n    * @description A helper to compile an HTML template/templateUrl with a given controller,\n    * locals, and scope.\n    * @param {object} options An options object, with the following properties:\n    *\n    *    - `controller` - `{(string=|function()=}` Controller fn that should be associated with\n    *      newly created scope or the name of a registered controller if passed as a string.\n    *    - `controllerAs` - `{string=}` A controller alias name. If present the controller will be\n    *      published to scope under the `controllerAs` name.\n    *    - `template` - `{string=}` An html template as a string.\n    *    - `templateUrl` - `{string=}` A path to an html template.\n    *    - `transformTemplate` - `{function(template)=}` A function which transforms the template after\n    *      it is loaded. It will be given the template string as a parameter, and should\n    *      return a a new string representing the transformed template.\n    *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n    *      be injected into the controller. If any of these dependencies are promises, the compiler\n    *      will wait for them all to be resolved, or if one is rejected before the controller is\n    *      instantiated `compile()` will fail..\n    *      * `key` - `{string}`: a name of a dependency to be injected into the controller.\n    *      * `factory` - `{string|function}`: If `string` then it is an alias for a service.\n    *        Otherwise if function, then it is injected and the return value is treated as the\n    *        dependency. If the result is a promise, it is resolved before its value is\n    *        injected into the controller.\n    *\n    * @returns {object=} promise A promise, which will be resolved with a `compileData` object.\n    * `compileData` has the following properties:\n    *\n    *   - `element` - `{element}`: an uncompiled element matching the provided template.\n    *   - `link` - `{function(scope)}`: A link function, which, when called, will compile\n    *     the element and instantiate the provided controller (if given).\n    *   - `locals` - `{object}`: The locals which will be passed into the controller once `link` is\n    *     called. If `bindToController` is true, they will be coppied to the ctrl instead\n    *   - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n    */\n  this.compile = function (options) {\n\n    if (options.template && /\\.html$/.test(options.template)) {\n      console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.');\n      options.templateUrl = options.template;\n      options.template = '';\n    }\n\n    var templateUrl = options.templateUrl;\n    var template = options.template || '';\n    var controller = options.controller;\n    var controllerAs = options.controllerAs;\n    var resolve = angular.copy(options.resolve || {});\n    var locals = angular.copy(options.locals || {});\n    var transformTemplate = options.transformTemplate || angular.identity;\n    var bindToController = options.bindToController;\n\n    // Take resolve values and invoke them.\n    // Resolves can either be a string (value: 'MyRegisteredAngularConst'),\n    // or an invokable 'factory' of sorts: (value: function ValueGetter($dependency) {})\n    angular.forEach(resolve, function (value, key) {\n      if (angular.isString(value)) {\n        resolve[key] = $injector.get(value);\n      } else {\n        resolve[key] = $injector.invoke(value);\n      }\n    });\n    // Add the locals, which are just straight values to inject\n    // eg locals: { three: 3 }, will inject three into the controller\n    angular.extend(resolve, locals);\n\n    if (template) {\n      resolve.$template = $q.when(template);\n    } else if (templateUrl) {\n      resolve.$template = fetchTemplate(templateUrl);\n    } else {\n      throw new Error('Missing `template` / `templateUrl` option.');\n    }\n\n    if (options.titleTemplate) {\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.titleTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          findElement('[ng-bind=\"title\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    if (options.contentTemplate) {\n      // TODO(mgcrea): deprecate?\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.contentTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n          if (!options.templateUrl) contentEl.next().remove();\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    // Wait for all the resolves to finish if they are promises\n    return $q.all(resolve).then(function (locals) {\n\n      var template = transformTemplate(locals.$template);\n      if (options.html) {\n        template = template.replace(/ng-bind=\"/ig, 'ng-bind-html=\"');\n      }\n      // var element = options.element || angular.element('<div>').html(template.trim()).contents();\n      var element = angular.element('<div>').html(template.trim()).contents();\n      var linkFn = $compile(element);\n\n      // Return a linking function that can be used later when the element is ready\n      return {\n        locals: locals,\n        element: element,\n        link: function link (scope) {\n          locals.$scope = scope;\n\n          // Instantiate controller if it exists, because we have scope\n          if (controller) {\n            var invokeCtrl = $controller(controller, locals, true);\n            if (bindToController) {\n              angular.extend(invokeCtrl.instance, locals);\n            }\n            // Support angular@~1.2 invokeCtrl\n            var ctrl = angular.isObject(invokeCtrl) ? invokeCtrl : invokeCtrl();\n            // See angular-route source for this logic\n            element.data('$ngControllerController', ctrl);\n            element.children().data('$ngControllerController', ctrl);\n\n            if (controllerAs) {\n              scope[controllerAs] = ctrl;\n            }\n          }\n\n          return linkFn.apply(null, arguments);\n        }\n      };\n    });\n\n  };\n\n  function findElement (query, element) {\n    return angular.element((element || document).querySelectorAll(query));\n  }\n\n  var fetchPromises = {};\n  function fetchTemplate (template) {\n    if (fetchPromises[template]) return fetchPromises[template];\n    return (fetchPromises[template] = $http.get(template, {cache: $templateCache})\n      .then(function (res) {\n        return res.data;\n      }));\n  }\n\n}\n\n// Source: dropdown/dropdown.js\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) return;\n          if (options.keyboard && $dropdown.$element) $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          var options = {scope: scope};\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n\n// Source: datepicker/datepicker.js\nangular.module('mgcrea.ngStrap.datepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$datepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    prefixClass: 'datepicker',\n    placement: 'bottom-left',\n    templateUrl: 'datepicker/datepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: false,\n    dateType: 'date',\n    dateFormat: 'shortDate',\n    timezone: null,\n    modelDateFormat: null,\n    dayFormat: 'dd',\n    monthFormat: 'MMM',\n    yearFormat: 'yyyy',\n    monthTitleFormat: 'MMMM yyyy',\n    yearTitleFormat: 'yyyy',\n    strictFormat: false,\n    autoclose: false,\n    minDate: -Infinity,\n    maxDate: +Infinity,\n    startView: 0,\n    minView: 0,\n    startWeek: 0,\n    daysOfWeekDisabled: '',\n    hasToday: false,\n    hasClear: false,\n    iconLeft: 'nox-sort-left',\n    iconRight: 'nox-sort-right'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datepickerViews', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n    function DatepickerFactory(element, controller, config) {\n      var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $datepicker.$options;\n      var scope = $datepicker.$scope;\n      if (options.startView) options.startView -= options.minView;\n      var pickerViews = datepickerViews($datepicker);\n      $datepicker.$views = pickerViews.views;\n      var viewDate = pickerViews.viewDate;\n      scope.$mode = options.startView;\n      scope.$iconLeft = options.iconLeft;\n      scope.$iconRight = options.iconRight;\n      scope.$hasToday = options.hasToday;\n      scope.$hasClear = options.hasClear;\n      var $picker = $datepicker.$views[scope.$mode];\n      scope.$select = function(date) {\n        $datepicker.select(date);\n      };\n      scope.$selectPane = function(value) {\n        $datepicker.$selectPane(value);\n      };\n      scope.$toggleMode = function() {\n        $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n      };\n      scope.$setToday = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(new Date());\n        } else {\n          $datepicker.select(new Date(), true);\n        }\n      };\n      scope.$clear = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(null);\n        } else {\n          $datepicker.select(null, true);\n        }\n      };\n      $datepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $datepicker.$date = date;\n          $picker.update.call($picker, date);\n        }\n        $datepicker.$build(true);\n      };\n      $datepicker.updateDisabledDates = function(dateRanges) {\n        options.disabledDateRanges = dateRanges;\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n        }\n      };\n      $datepicker.select = function(date, keep) {\n        if (angular.isDate(date)) {\n          if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date(date);\n          }\n        } else {\n          controller.$dateValue = null;\n        }\n        if (!scope.$mode || keep) {\n          controller.$setViewValue(angular.copy(date));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              $datepicker.hide(true);\n            });\n          }\n        } else {\n          angular.extend(viewDate, {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            date: date.getDate()\n          });\n          $datepicker.setMode(scope.$mode - 1);\n          $datepicker.$build();\n        }\n      };\n      $datepicker.setMode = function(mode) {\n        scope.$mode = mode;\n        $picker = $datepicker.$views[scope.$mode];\n        $datepicker.$build();\n      };\n      $datepicker.$build = function(pristine) {\n        if (pristine === true && $picker.built) return;\n        if (pristine === false && !$picker.built) return;\n        $picker.build.call($picker);\n      };\n      $datepicker.$updateSelected = function() {\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], updateSelected);\n        }\n      };\n      $datepicker.$isSelected = function(date) {\n        return $picker.isSelected(date);\n      };\n      $datepicker.$setDisabledEl = function(el) {\n        el.disabled = $picker.isDisabled(el.date);\n      };\n      $datepicker.$selectPane = function(value) {\n        var steps = $picker.steps;\n        var targetDate = new Date(Date.UTC(viewDate.year + (steps.year || 0) * value, viewDate.month + (steps.month || 0) * value, 1));\n        angular.extend(viewDate, {\n          year: targetDate.getUTCFullYear(),\n          month: targetDate.getUTCMonth(),\n          date: targetDate.getUTCDate()\n        });\n        $datepicker.$build();\n      };\n      $datepicker.$onMouseDown = function(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $datepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          if (!scope.$mode) {\n            $datepicker.hide(true);\n          } else {\n            scope.$apply(function() {\n              $datepicker.setMode(scope.$mode - 1);\n            });\n          }\n          return;\n        }\n        $picker.onKeyDown(evt);\n        parentScope.$digest();\n      };\n      function updateSelected(el) {\n        el.selected = $datepicker.$isSelected(el.date);\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $datepicker.init;\n      $datepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'date');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $datepicker.destroy;\n      $datepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $datepicker.show;\n      $datepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.on('keydown', $datepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $datepicker.hide;\n      $datepicker.hide = function(blur) {\n        if (!$datepicker.$isShown) return;\n        $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n        if (options.keyboard) {\n          element.off('keydown', $datepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $datepicker;\n    }\n    DatepickerFactory.defaults = defaults;\n    return DatepickerFactory;\n  } ];\n}).directive('bsDatepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      var datepicker = $datepicker(element, controller, options);\n      options = datepicker.$options;\n      if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!datepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          if (newValue === true) {\n            datepicker.show();\n          } else {\n            datepicker.hide();\n          }\n        });\n      }\n      angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        }\n      });\n      if (angular.isDefined(attr.dateFormat)) {\n        attr.$observe('dateFormat', function(newValue) {\n          datepicker.$options.dateFormat = newValue;\n        });\n      }\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        datepicker.update(controller.$dateValue);\n      }, true);\n      function normalizeDateRanges(ranges) {\n        if (!ranges || !ranges.length) return null;\n        return ranges;\n      }\n      if (angular.isDefined(attr.disabledDates)) {\n        scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n          disabledRanges = normalizeDateRanges(disabledRanges);\n          previousValue = normalizeDateRanges(previousValue);\n          if (disabledRanges) {\n            datepicker.updateDisabledDates(disabledRanges);\n          }\n        });\n      }\n      function validateAgainstMinMaxDate(parsedDate) {\n        if (!angular.isDate(parsedDate)) return;\n        var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n        var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (isValid) controller.$dateValue = parsedDate;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedDate || isNaN(parsedDate.getTime())) {\n          controller.$setValidity('date', false);\n          return;\n        }\n        validateAgainstMinMaxDate(parsedDate);\n        if (options.dateType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n          return formatDate(date, options.modelDateFormat || options.dateFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.dateType === 'number') {\n          return date.getTime();\n        } else if (options.dateType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.dateType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.dateType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelDateFormat);\n        } else if (options.dateType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getDateFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getDateFormattedString());\n      };\n      function getDateFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (datepicker) datepicker.destroy();\n        options = null;\n        datepicker = null;\n      });\n    }\n  };\n} ]).provider('datepickerViews', function() {\n  function split(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  }\n  function mod(n, m) {\n    return (n % m + m) % m;\n  }\n  this.$get = [ '$dateFormatter', '$dateParser', '$sce', function($dateFormatter, $dateParser, $sce) {\n    return function(picker) {\n      var scope = picker.$scope;\n      var options = picker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n      var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n      var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n      var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n      var viewDate = {\n        year: startDate.getFullYear(),\n        month: startDate.getMonth(),\n        date: startDate.getDate()\n      };\n      var views = [ {\n        format: options.dayFormat,\n        split: 7,\n        steps: {\n          month: 1\n        },\n        update: function(date, force) {\n          if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n            viewDate.date = picker.$date.getDate();\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n          var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n          var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n          var firstDateOffset = firstDate.getTimezoneOffset();\n          var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n          if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n          var days = [];\n          var day;\n          for (var i = 0; i < 42; i++) {\n            day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n            days.push({\n              date: day,\n              isToday: day.toDateString() === today,\n              label: formatDate(day, this.format),\n              selected: picker.$date && this.isSelected(day),\n              muted: day.getMonth() !== viewDate.month,\n              disabled: this.isDisabled(day)\n            });\n          }\n          scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n          scope.showLabels = true;\n          scope.labels = weekDaysLabelsHtml;\n          scope.rows = split(days, this.split);\n          scope.isTodayDisabled = this.isDisabled(new Date());\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n        },\n        isDisabled: function(date) {\n          var time = date.getTime();\n          if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n          if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n          if (options.disabledDateRanges) {\n            for (var i = 0; i < options.disabledDateRanges.length; i++) {\n              if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                return true;\n              }\n            }\n          }\n          return false;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualTime = picker.$date.getTime();\n          var newDate;\n          if (evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5); else if (evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5); else if (evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5); else if (evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'month',\n        format: options.monthFormat,\n        split: 4,\n        steps: {\n          year: 1\n        },\n        update: function(date, force) {\n          if (!this.built || date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var months = [];\n          var month;\n          for (var i = 0; i < 12; i++) {\n            month = new Date(viewDate.year, i, 1);\n            months.push({\n              date: month,\n              label: formatDate(month, this.format),\n              selected: picker.$isSelected(month),\n              disabled: this.isDisabled(month)\n            });\n          }\n          scope.title = formatDate(month, options.yearTitleFormat);\n          scope.showLabels = false;\n          scope.rows = split(months, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualMonth = picker.$date.getMonth();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setMonth(actualMonth - 1); else if (evt.keyCode === 38) newDate.setMonth(actualMonth - 4); else if (evt.keyCode === 39) newDate.setMonth(actualMonth + 1); else if (evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'year',\n        format: options.yearFormat,\n        split: 4,\n        steps: {\n          year: 12\n        },\n        update: function(date, force) {\n          if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n          var years = [];\n          var year;\n          for (var i = 0; i < 12; i++) {\n            year = new Date(firstYear + i, 0, 1);\n            years.push({\n              date: year,\n              label: formatDate(year, this.format),\n              selected: picker.$isSelected(year),\n              disabled: this.isDisabled(year)\n            });\n          }\n          scope.title = years[0].label + '-' + years[years.length - 1].label;\n          scope.showLabels = false;\n          scope.rows = split(years, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualYear = picker.$date.getFullYear();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setYear(actualYear - 1); else if (evt.keyCode === 38) newDate.setYear(actualYear - 4); else if (evt.keyCode === 39) newDate.setYear(actualYear + 1); else if (evt.keyCode === 40) newDate.setYear(actualYear + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      } ];\n      return {\n        views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n        viewDate: viewDate\n      };\n    };\n  } ];\n});\n\n// Source: alert/alert.js\n// @BUG: following snippet won't compile correctly\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      templateUrl: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissible: true\n    };\n\n    this.$get = function ($modal, $timeout) {\n\n      function AlertFactory (config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissible]\n        $alert.$scope.dismissible = !!options.dismissible;\n        if (options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if (options.duration) {\n          $alert.show = function () {\n            show();\n            $timeout(function () {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function ($window, $sce, $alert) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsAlert) {\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: module.js\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.rangedatepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.pagination',\n  'mgcrea.ngStrap.sort'\n]);\n\n})(window, document);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      templateUrl: 'tooltip/tooltip.tpl.html',\n      template: '',\n      titleTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true,\n      mouseDownPreventDefault: true,\n      mouseDownStopPropagation: true,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory (element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        var promise = $tooltip.$promise = $bsCompiler.compile(options);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        var nodeName = element[0].nodeName.toLowerCase();\n        if (options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if (options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function (isEnabled) {\n          scope.$$postDigest(function () {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout;\n        var hoverState;\n\n        // Fetch, compile then initialize tooltip\n        var compileData;\n        var tipElement;\n        var tipContainer;\n        var tipScope;\n        promise.then(function (data) {\n          compileData = data;\n          $tooltip.init();\n        });\n\n        $tooltip.init = function () {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if (options.container === 'self') {\n            tipContainer = element;\n          } else if (angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if (options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if (options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              if (options.trigger === 'focus') {\n                element[0].focus();\n              } else {\n                $tooltip.show();\n              }\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function () {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function () {\n            if (hoverState === 'in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function () {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($tooltip);\n          }\n          var parent;\n          var after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if (tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = compileData.link(tipScope, function (clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', right: 'auto', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if (options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if (options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if (options.customClass) tipElement.addClass(options.customClass);\n\n          // Append the element, without any animations.  If we append\n          // using $animate.enter, some of the animations cause the placement\n          // to be off due to the transforms.\n          if (after) {\n            after.after(tipElement);\n          } else {\n            parent.prepend(tipElement);\n          }\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n\n          // Now, apply placement\n          $tooltip.$applyPlacement();\n\n          // Once placed, animate it.\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(tipElement, parent, after).then(enterAnimateCallback);\n          }\n          safeDigest(scope);\n\n          $$rAF(function () {\n            // Once the tooltip is placed and the animation starts, make the tooltip visible\n            if (tipElement) tipElement.css({visibility: 'visible'});\n\n            // Bind events\n            if (options.keyboard) {\n              if (options.trigger !== 'focus') {\n                $tooltip.focus();\n              }\n              bindKeyboardEvents();\n            }\n          });\n\n          if (options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($tooltip);\n          }\n        }\n\n        $tooltip.leave = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function (blur) {\n\n          if (!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($tooltip);\n          }\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(tipElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(tipElement).then(leaveAnimateCallback);\n          }\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if (options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if (options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($tooltip);\n          }\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if (_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function (evt) {\n          if (evt) { evt.preventDefault(); }\n          if ($tooltip.$isShown) {\n            $tooltip.leave();\n          } else {\n            $tooltip.enter();\n          }\n        };\n\n        $tooltip.focus = function () {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function (isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        $tooltip.setViewport = function (viewport) {\n          options.viewport = viewport;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function () {\n          if (!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement;\n          var autoToken = /\\s?auto?\\s?/i;\n          var autoPlace = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition();\n          var tipWidth = tipElement.prop('offsetWidth');\n          var tipHeight = tipElement.prop('offsetHeight');\n\n          // Refresh viewport position\n          $tooltip.$viewport = options.viewport && findElement(options.viewport.selector || options.viewport);\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var viewportPosition = getPosition($tooltip.$viewport);\n\n            if (/bottom/.test(originalPlacement) && elementPosition.bottom + tipHeight > viewportPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (/top/.test(originalPlacement) && elementPosition.top - tipHeight < viewportPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            if (/left/.test(originalPlacement) && elementPosition.left - tipWidth < viewportPosition.left) {\n              placement = placement.replace('left', 'right');\n            } else if (/right/.test(originalPlacement) && elementPosition.right + tipWidth > viewportPosition.width) {\n              placement = placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacement(tipPosition, placement);\n        };\n\n        $tooltip.$onKeyUp = function (evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function (evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function (evt) {\n          if (options.mouseDownPreventDefault) { evt.preventDefault(); }\n          if (options.mouseDownStopPropagation) { evt.stopPropagation(); }\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          if ($tooltip.$isShown) {\n            element[0].blur();\n          } else {\n            element[0].focus();\n          }\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function (trigger) {\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.on(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover') {\n                element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          });\n        }\n\n        function unbindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.off(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover') {\n                element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents () {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents () {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation (event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition ($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n          var isBody = el.tagName === 'BODY';\n\n          var elRect = el.getBoundingClientRect();\n          var rect = {};\n\n          // IE8 has issues with angular.extend and using elRect directly.\n          // By coping the values of elRect into a new object, we can continue to use extend\n          /* eslint-disable guard-for-in */\n          for (var p in elRect) { // eslint-disable-line\n            // DO NOT use hasOwnProperty when inspecting the return of getBoundingClientRect.\n            rect[p] = elRect[p];\n          }\n          /* eslint-enable guard-for-in */\n\n          if (rect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            rect = angular.extend({}, rect, {width: elRect.right - elRect.left, height: elRect.bottom - elRect.top});\n          }\n          var elOffset = isBody ? {top: 0, left: 0} : dimensions.offset(el);\n          var scroll = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.prop('scrollTop') || 0};\n          var outerDims = isBody ? {width: document.documentElement.clientWidth, height: $window.innerHeight} : null;\n\n          return angular.extend({}, rect, scroll, outerDims, elOffset);\n        }\n\n        function getCalculatedOffset (placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n            case 'right':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left + position.width\n              };\n              break;\n            case 'bottom':\n              offset = {\n                top: position.top + position.height,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n            case 'left':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left - actualWidth\n              };\n              break;\n            default:\n              offset = {\n                top: position.top - actualHeight,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n          }\n\n          if (!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if (split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n              case 'left':\n                offset.left = position.left;\n                break;\n              case 'right':\n                offset.left = position.left + position.width - actualWidth;\n                break;\n              default:\n                break;\n            }\n          } else if (split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n              case 'top':\n                offset.top = position.top - actualHeight + position.height;\n                break;\n              case 'bottom':\n                offset.top = position.top;\n                break;\n              default:\n                break;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacement (offset, placement) {\n          var tip = tipElement[0];\n          var width = tip.offsetWidth;\n          var height = tip.offsetHeight;\n\n          // manually read margins because getBoundingClientRect includes difference\n          var marginTop = parseInt(dimensions.css(tip, 'margin-top'), 10);\n          var marginLeft = parseInt(dimensions.css(tip, 'margin-left'), 10);\n\n          // we must check for NaN for ie 8/9\n          if (isNaN(marginTop)) marginTop = 0;\n          if (isNaN(marginLeft)) marginLeft = 0;\n\n          offset.top = offset.top + marginTop;\n          offset.left = offset.left + marginLeft;\n\n          // dimensions setOffset doesn't round pixel values\n          // so we use setOffset directly with our own function\n          dimensions.setOffset(tip, angular.extend({\n            using: function (props) {\n              tipElement.css({\n                top: Math.round(props.top) + 'px',\n                left: Math.round(props.left) + 'px',\n                right: ''\n              });\n            }\n          }, offset), 0);\n\n          // check to see if placing tip in new offset caused the tip to resize itself\n          var actualWidth = tip.offsetWidth;\n          var actualHeight = tip.offsetHeight;\n\n          if (placement === 'top' && actualHeight !== height) {\n            offset.top = offset.top + height - actualHeight;\n          }\n\n          // If it's an exotic placement, exit now instead of\n          // applying a delta and changing the arrow\n          if (/top-left|top-right|bottom-left|bottom-right/.test(placement)) return;\n\n          var delta = getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n\n          if (delta.left) {\n            offset.left += delta.left;\n          } else {\n            offset.top += delta.top;\n          }\n\n          dimensions.setOffset(tip, offset);\n\n          if (/top|right|bottom|left/.test(placement)) {\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n\n            replaceArrow(arrowDelta, tip[arrowOffsetPosition], isVertical);\n          }\n        }\n\n        // @source https://github.com/twbs/bootstrap/blob/v3.3.5/js/tooltip.js#L380\n        function getViewportAdjustedDelta (placement, position, actualWidth, actualHeight) {\n          var delta = {top: 0, left: 0};\n          if (!$tooltip.$viewport) return delta;\n\n          var viewportPadding = options.viewport && options.viewport.padding || 0;\n          var viewportDimensions = getPosition($tooltip.$viewport);\n\n          if (/right|left/.test(placement)) {\n            var topEdgeOffset = position.top - viewportPadding - viewportDimensions.scroll;\n            var bottomEdgeOffset = position.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\n              delta.top = viewportDimensions.top - topEdgeOffset;\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n              delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n            }\n          } else {\n            var leftEdgeOffset = position.left - viewportPadding;\n            var rightEdgeOffset = position.left + viewportPadding + actualWidth;\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n              delta.left = viewportDimensions.left - leftEdgeOffset;\n            } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n              delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n            }\n          }\n\n          return delta;\n        }\n\n        function replaceArrow (delta, dimension, isHorizontal) {\n          var $arrow = findElement('.tooltip-arrow, .arrow', tipElement[0]);\n\n          $arrow.css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n                .css(isHorizontal ? 'top' : 'left', '');\n        }\n\n        function destroyTipElement () {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if ($tooltip.$isShown && tipElement !== null) {\n            if (options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if (options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if (tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if (tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function ($window, $location, $sce, $parse, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        var tooltip;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'titleTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function (newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }\n        });\n\n        attr.$observe('disabled', function (newValue) {\n          if (newValue && tooltip.$isShown) {\n            tooltip.hide();\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsTooltip) {\n          scope.$watch(attr.bsTooltip, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.title = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n            if (newValue === true) {\n              tooltip.show();\n            } else {\n              tooltip.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n            if (newValue === false) {\n              tooltip.setEnabled(false);\n            } else {\n              tooltip.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            tooltip.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\n// NOTICE: This file was forked from the angular-material project (github.com/angular/material)\n// MIT Licensed - Copyright (c) 2014-2015 Google, Inc. http://angularjs.org\n\nangular.module('mgcrea.ngStrap.core', [])\n  .service('$bsCompiler', bsCompilerService);\n\nfunction bsCompilerService ($q, $http, $injector, $compile, $controller, $templateCache) {\n\n  /*\n   * @ngdoc service\n   * @name $bsCompiler\n   * @module material.core\n   * @description\n   * The $bsCompiler service is an abstraction of angular's compiler, that allows the developer\n   * to easily compile an element with a templateUrl, controller, and locals.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * $bsCompiler.compile({\n   *   templateUrl: 'modal.html',\n   *   controller: 'ModalCtrl',\n   *   locals: {\n   *     modal: myModalInstance;\n   *   }\n   * }).then(function(compileData) {\n   *   compileData.element; // modal.html's template in an element\n   *   compileData.link(myScope); //attach controller & scope to element\n   * });\n   * </hljs>\n   */\n\n   /*\n    * @ngdoc method\n    * @name $bsCompiler#compile\n    * @description A helper to compile an HTML template/templateUrl with a given controller,\n    * locals, and scope.\n    * @param {object} options An options object, with the following properties:\n    *\n    *    - `controller` - `{(string=|function()=}` Controller fn that should be associated with\n    *      newly created scope or the name of a registered controller if passed as a string.\n    *    - `controllerAs` - `{string=}` A controller alias name. If present the controller will be\n    *      published to scope under the `controllerAs` name.\n    *    - `template` - `{string=}` An html template as a string.\n    *    - `templateUrl` - `{string=}` A path to an html template.\n    *    - `transformTemplate` - `{function(template)=}` A function which transforms the template after\n    *      it is loaded. It will be given the template string as a parameter, and should\n    *      return a a new string representing the transformed template.\n    *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n    *      be injected into the controller. If any of these dependencies are promises, the compiler\n    *      will wait for them all to be resolved, or if one is rejected before the controller is\n    *      instantiated `compile()` will fail..\n    *      * `key` - `{string}`: a name of a dependency to be injected into the controller.\n    *      * `factory` - `{string|function}`: If `string` then it is an alias for a service.\n    *        Otherwise if function, then it is injected and the return value is treated as the\n    *        dependency. If the result is a promise, it is resolved before its value is\n    *        injected into the controller.\n    *\n    * @returns {object=} promise A promise, which will be resolved with a `compileData` object.\n    * `compileData` has the following properties:\n    *\n    *   - `element` - `{element}`: an uncompiled element matching the provided template.\n    *   - `link` - `{function(scope)}`: A link function, which, when called, will compile\n    *     the element and instantiate the provided controller (if given).\n    *   - `locals` - `{object}`: The locals which will be passed into the controller once `link` is\n    *     called. If `bindToController` is true, they will be coppied to the ctrl instead\n    *   - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n    */\n  this.compile = function (options) {\n\n    if (options.template && /\\.html$/.test(options.template)) {\n      console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.');\n      options.templateUrl = options.template;\n      options.template = '';\n    }\n\n    var templateUrl = options.templateUrl;\n    var template = options.template || '';\n    var controller = options.controller;\n    var controllerAs = options.controllerAs;\n    var resolve = angular.copy(options.resolve || {});\n    var locals = angular.copy(options.locals || {});\n    var transformTemplate = options.transformTemplate || angular.identity;\n    var bindToController = options.bindToController;\n\n    // Take resolve values and invoke them.\n    // Resolves can either be a string (value: 'MyRegisteredAngularConst'),\n    // or an invokable 'factory' of sorts: (value: function ValueGetter($dependency) {})\n    angular.forEach(resolve, function (value, key) {\n      if (angular.isString(value)) {\n        resolve[key] = $injector.get(value);\n      } else {\n        resolve[key] = $injector.invoke(value);\n      }\n    });\n    // Add the locals, which are just straight values to inject\n    // eg locals: { three: 3 }, will inject three into the controller\n    angular.extend(resolve, locals);\n\n    if (template) {\n      resolve.$template = $q.when(template);\n    } else if (templateUrl) {\n      resolve.$template = fetchTemplate(templateUrl);\n    } else {\n      throw new Error('Missing `template` / `templateUrl` option.');\n    }\n\n    if (options.titleTemplate) {\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.titleTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          findElement('[ng-bind=\"title\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    if (options.contentTemplate) {\n      // TODO(mgcrea): deprecate?\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.contentTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n          if (!options.templateUrl) contentEl.next().remove();\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    // Wait for all the resolves to finish if they are promises\n    return $q.all(resolve).then(function (locals) {\n\n      var template = transformTemplate(locals.$template);\n      if (options.html) {\n        template = template.replace(/ng-bind=\"/ig, 'ng-bind-html=\"');\n      }\n      // var element = options.element || angular.element('<div>').html(template.trim()).contents();\n      var element = angular.element('<div>').html(template.trim()).contents();\n      var linkFn = $compile(element);\n\n      // Return a linking function that can be used later when the element is ready\n      return {\n        locals: locals,\n        element: element,\n        link: function link (scope) {\n          locals.$scope = scope;\n\n          // Instantiate controller if it exists, because we have scope\n          if (controller) {\n            var invokeCtrl = $controller(controller, locals, true);\n            if (bindToController) {\n              angular.extend(invokeCtrl.instance, locals);\n            }\n            // Support angular@~1.2 invokeCtrl\n            var ctrl = angular.isObject(invokeCtrl) ? invokeCtrl : invokeCtrl();\n            // See angular-route source for this logic\n            element.data('$ngControllerController', ctrl);\n            element.children().data('$ngControllerController', ctrl);\n\n            if (controllerAs) {\n              scope[controllerAs] = ctrl;\n            }\n          }\n\n          return linkFn.apply(null, arguments);\n        }\n      };\n    });\n\n  };\n\n  function findElement (query, element) {\n    return angular.element((element || document).querySelectorAll(query));\n  }\n\n  var fetchPromises = {};\n  function fetchTemplate (template) {\n    if (fetchPromises[template]) return fetchPromises[template];\n    return (fetchPromises[template] = $http.get(template, {cache: $templateCache})\n      .then(function (res) {\n        return res.data;\n      }));\n  }\n\n}\n","'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) return;\n          if (options.keyboard && $dropdown.$element) $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          var options = {scope: scope};\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.timepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$timepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    defaultDate: 'auto',\n    prefixClass: 'timepicker',\n    placement: 'bottom-left',\n    templateUrl: 'timepicker/timepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: true,\n    timeType: 'date',\n    timeFormat: 'shortTime',\n    timezone: null,\n    modelTimeFormat: null,\n    autoclose: false,\n    minTime: -Infinity,\n    maxTime: +Infinity,\n    length: 5,\n    hourStep: 1,\n    minuteStep: 5,\n    secondStep: 5,\n    roundDisplay: false,\n    iconUp: 'nox-sort-up',\n    iconDown: 'nox-sort-down',\n    arrowBehavior: 'pager'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) {\n      defaults.lang = $dateFormatter.getDefaultLocale();\n    }\n    function timepickerFactory(element, controller, config) {\n      var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $timepicker.$options;\n      var scope = $timepicker.$scope;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      function floorMinutes(time) {\n        var coeff = 1e3 * 60 * options.minuteStep;\n        return new Date(Math.floor(time.getTime() / coeff) * coeff);\n      }\n      var selectedIndex = 0;\n      var defaultDate = options.roundDisplay ? floorMinutes(new Date()) : new Date();\n      var startDate = controller.$dateValue || defaultDate;\n      var viewDate = {\n        hour: startDate.getHours(),\n        meridian: startDate.getHours() < 12,\n        minute: startDate.getMinutes(),\n        second: startDate.getSeconds(),\n        millisecond: startDate.getMilliseconds()\n      };\n      var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n      var hoursFormat = $dateFormatter.hoursFormat(format);\n      var timeSeparator = $dateFormatter.timeSeparator(format);\n      var minutesFormat = $dateFormatter.minutesFormat(format);\n      var secondsFormat = $dateFormatter.secondsFormat(format);\n      var showSeconds = $dateFormatter.showSeconds(format);\n      var showAM = $dateFormatter.showAM(format);\n      scope.$iconUp = options.iconUp;\n      scope.$iconDown = options.iconDown;\n      scope.$select = function(date, index) {\n        $timepicker.select(date, index);\n      };\n      scope.$moveIndex = function(value, index) {\n        $timepicker.$moveIndex(value, index);\n      };\n      scope.$switchMeridian = function(date) {\n        $timepicker.switchMeridian(date);\n      };\n      $timepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $timepicker.$date = date;\n          angular.extend(viewDate, {\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            millisecond: date.getMilliseconds()\n          });\n          $timepicker.$build();\n        } else if (!$timepicker.$isBuilt) {\n          $timepicker.$build();\n        }\n      };\n      $timepicker.select = function(date, index, keep) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          controller.$dateValue = options.defaultDate === 'today' ? new Date() : new Date(1970, 0, 1);\n        }\n        if (!angular.isDate(date)) date = new Date(date);\n        if (index === 0) controller.$dateValue.setHours(date.getHours()); else if (index === 1) controller.$dateValue.setMinutes(date.getMinutes()); else if (index === 2) controller.$dateValue.setSeconds(date.getSeconds());\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n        if (options.autoclose && !keep) {\n          $timeout(function() {\n            $timepicker.hide(true);\n          });\n        }\n      };\n      $timepicker.switchMeridian = function(date) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          return;\n        }\n        var hours = (date || controller.$dateValue).getHours();\n        controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n      };\n      $timepicker.$build = function() {\n        var i;\n        var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n        var hours = [];\n        var hour;\n        for (i = 0; i < options.length; i++) {\n          hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n          hours.push({\n            date: hour,\n            label: formatDate(hour, hoursFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n            disabled: $timepicker.$isDisabled(hour, 0)\n          });\n        }\n        var minutes = [];\n        var minute;\n        for (i = 0; i < options.length; i++) {\n          minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n          minutes.push({\n            date: minute,\n            label: formatDate(minute, minutesFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(minute, 1),\n            disabled: $timepicker.$isDisabled(minute, 1)\n          });\n        }\n        var seconds = [];\n        var second;\n        for (i = 0; i < options.length; i++) {\n          second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n          seconds.push({\n            date: second,\n            label: formatDate(second, secondsFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(second, 2),\n            disabled: $timepicker.$isDisabled(second, 2)\n          });\n        }\n        var rows = [];\n        for (i = 0; i < options.length; i++) {\n          if (showSeconds) {\n            rows.push([ hours[i], minutes[i], seconds[i] ]);\n          } else {\n            rows.push([ hours[i], minutes[i] ]);\n          }\n        }\n        scope.rows = rows;\n        scope.showSeconds = showSeconds;\n        scope.showAM = showAM;\n        scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n        scope.timeSeparator = timeSeparator;\n        $timepicker.$isBuilt = true;\n      };\n      $timepicker.$isSelected = function(date, index) {\n        if (!$timepicker.$date) return false; else if (index === 0) {\n          return date.getHours() === $timepicker.$date.getHours();\n        } else if (index === 1) {\n          return date.getMinutes() === $timepicker.$date.getMinutes();\n        } else if (index === 2) {\n          return date.getSeconds() === $timepicker.$date.getSeconds();\n        }\n      };\n      $timepicker.$isDisabled = function(date, index) {\n        var selectedTime;\n        if (index === 0) {\n          selectedTime = date.getTime() + viewDate.minute * 6e4 + viewDate.second * 1e3;\n        } else if (index === 1) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.second * 1e3;\n        } else if (index === 2) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.minute * 6e4;\n        }\n        return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n      };\n      scope.$arrowAction = function(value, index) {\n        if (options.arrowBehavior === 'picker') {\n          $timepicker.$setTimeByStep(value, index);\n        } else {\n          $timepicker.$moveIndex(value, index);\n        }\n      };\n      $timepicker.$setTimeByStep = function(value, index) {\n        var newDate = new Date($timepicker.$date || startDate);\n        var hours = newDate.getHours();\n        var minutes = newDate.getMinutes();\n        var seconds = newDate.getSeconds();\n        if (index === 0) {\n          newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n        } else if (index === 1) {\n          newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n        } else if (index === 2) {\n          newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n        }\n        $timepicker.select(newDate, index, true);\n      };\n      $timepicker.$moveIndex = function(value, index) {\n        var targetDate;\n        if (index === 0) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n          angular.extend(viewDate, {\n            hour: targetDate.getHours()\n          });\n        } else if (index === 1) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n          angular.extend(viewDate, {\n            minute: targetDate.getMinutes()\n          });\n        } else if (index === 2) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n          angular.extend(viewDate, {\n            second: targetDate.getSeconds()\n          });\n        }\n        $timepicker.$build();\n      };\n      $timepicker.$onMouseDown = function(evt) {\n        if (evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $timepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          $timepicker.hide(true);\n          return;\n        }\n        var newDate = new Date($timepicker.$date);\n        var hours = newDate.getHours();\n        var hoursLength = formatDate(newDate, hoursFormat).length;\n        var minutes = newDate.getMinutes();\n        var minutesLength = formatDate(newDate, minutesFormat).length;\n        var seconds = newDate.getSeconds();\n        var secondsLength = formatDate(newDate, secondsFormat).length;\n        var sepLength = 1;\n        var lateralMove = /(37|39)/.test(evt.keyCode);\n        var count = 2 + showSeconds * 1 + showAM * 1;\n        if (lateralMove) {\n          if (evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1; else if (evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n        }\n        var selectRange = [ 0, hoursLength ];\n        var incr = 0;\n        if (evt.keyCode === 38) incr = -1;\n        if (evt.keyCode === 40) incr = +1;\n        var isSeconds = selectedIndex === 2 && showSeconds;\n        var isMeridian = selectedIndex === 2 && !showSeconds || selectedIndex === 3 && showSeconds;\n        if (selectedIndex === 0) {\n          newDate.setHours(hours + incr * parseInt(options.hourStep, 10));\n          hoursLength = formatDate(newDate, hoursFormat).length;\n          selectRange = [ 0, hoursLength ];\n        } else if (selectedIndex === 1) {\n          newDate.setMinutes(minutes + incr * parseInt(options.minuteStep, 10));\n          minutesLength = formatDate(newDate, minutesFormat).length;\n          selectRange = [ hoursLength + sepLength, minutesLength ];\n        } else if (isSeconds) {\n          newDate.setSeconds(seconds + incr * parseInt(options.secondStep, 10));\n          secondsLength = formatDate(newDate, secondsFormat).length;\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength, secondsLength ];\n        } else if (isMeridian) {\n          if (!lateralMove) $timepicker.switchMeridian();\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength + (secondsLength + sepLength) * showSeconds, 2 ];\n        }\n        $timepicker.select(newDate, selectedIndex, true);\n        createSelection(selectRange[0], selectRange[1]);\n        parentScope.$digest();\n      };\n      function createSelection(start, length) {\n        var end = start + length;\n        if (element[0].createTextRange) {\n          var selRange = element[0].createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end);\n          selRange.select();\n        } else if (element[0].setSelectionRange) {\n          element[0].setSelectionRange(start, end);\n        } else if (angular.isUndefined(element[0].selectionStart)) {\n          element[0].selectionStart = start;\n          element[0].selectionEnd = end;\n        }\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $timepicker.init;\n      $timepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'time');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $timepicker.destroy;\n      $timepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $timepicker.show;\n      $timepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if ($timepicker.$element) $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if (options.keyboard) {\n            if (element) element.on('keydown', $timepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $timepicker.hide;\n      $timepicker.hide = function(blur) {\n        if (!$timepicker.$isShown) return;\n        if ($timepicker.$element) $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n        if (options.keyboard) {\n          if (element) element.off('keydown', $timepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $timepicker;\n    }\n    timepickerFactory.defaults = defaults;\n    return timepickerFactory;\n  } ];\n}).directive('bsTimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$timepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n  var defaults = $timepicker.defaults;\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'autoclose', 'timeType', 'timeFormat', 'timezone', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'secondStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'roundDisplay', 'id', 'prefixClass', 'prefixEvent', 'defaultDate' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'roundDisplay' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      if (isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n      var timepicker = $timepicker(element, controller, options);\n      options = timepicker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!timepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          if (newValue === true) {\n            timepicker.show();\n          } else {\n            timepicker.hide();\n          }\n        });\n      }\n      var dateParser = $dateParser({\n        format: options.timeFormat,\n        lang: lang\n      });\n      angular.forEach([ 'minTime', 'maxTime' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            if (!isNaN(timepicker.$options[key])) timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        }\n      });\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        timepicker.update(controller.$dateValue);\n      }, true);\n      function validateAgainstMinMaxTime(parsedTime) {\n        if (!angular.isDate(parsedTime)) return;\n        var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n        var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (!isValid) {\n          return;\n        }\n        controller.$dateValue = parsedTime;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedTime || isNaN(parsedTime.getTime())) {\n          controller.$setValidity('date', false);\n          return undefined;\n        }\n        validateAgainstMinMaxTime(parsedTime);\n        if (options.timeType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedTime, options.timezone, true);\n          return formatDate(date, options.modelTimeFormat || options.timeFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.timeType === 'number') {\n          return date.getTime();\n        } else if (options.timeType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.timeType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.timeType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n        } else if (options.timeType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getTimeFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getTimeFormattedString());\n      };\n      function getTimeFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (timepicker) timepicker.destroy();\n        options = null;\n        timepicker = null;\n      });\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tab', []).provider('$tab', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    template: 'tab/tab.tpl.html',\n    navClass: 'nav-tabs',\n    activeClass: 'active'\n  };\n  var controller = this.controller = function($scope, $element, $attrs) {\n    var self = this;\n    self.$options = angular.copy(defaults);\n    angular.forEach([ 'animation', 'navClass', 'activeClass' ], function(key) {\n      if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n    });\n    $scope.$navClass = self.$options.navClass;\n    $scope.$activeClass = self.$options.activeClass;\n    self.$panes = $scope.$panes = [];\n    self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n    self.$push = function(pane) {\n      if (angular.isUndefined(self.$panes.$active)) {\n        $scope.$setActive(pane.name || 0);\n      }\n      self.$panes.push(pane);\n    };\n    self.$remove = function(pane) {\n      var index = self.$panes.indexOf(pane);\n      var active = self.$panes.$active;\n      var activeIndex;\n      if (angular.isString(active)) {\n        activeIndex = self.$panes.map(function(pane) {\n          return pane.name;\n        }).indexOf(active);\n      } else {\n        activeIndex = self.$panes.$active;\n      }\n      self.$panes.splice(index, 1);\n      if (index < activeIndex) {\n        activeIndex--;\n      } else if (index === activeIndex && activeIndex === self.$panes.length) {\n        activeIndex--;\n      }\n      if (activeIndex >= 0 && activeIndex < self.$panes.length) {\n        self.$setActive(self.$panes[activeIndex].name || activeIndex);\n      } else {\n        self.$setActive();\n      }\n    };\n    self.$setActive = $scope.$setActive = function(value) {\n      self.$panes.$active = value;\n      self.$activePaneChangeListeners.forEach(function(fn) {\n        fn();\n      });\n    };\n    self.$isActive = $scope.$isActive = function($pane, $index) {\n      return self.$panes.$active === $pane.name || self.$panes.$active === $index;\n    };\n  };\n  this.$get = function() {\n    var $tab = {};\n    $tab.defaults = defaults;\n    $tab.controller = controller;\n    return $tab;\n  };\n}).directive('bsTabs', [ '$window', '$animate', '$tab', '$parse', function($window, $animate, $tab, $parse) {\n  var defaults = $tab.defaults;\n  return {\n    require: [ '?ngModel', 'bsTabs' ],\n    transclude: true,\n    scope: true,\n    controller: [ '$scope', '$element', '$attrs', $tab.controller ],\n    templateUrl: function(element, attr) {\n      return attr.template || defaults.template;\n    },\n    link: function postLink(scope, element, attrs, controllers) {\n      var ngModelCtrl = controllers[0];\n      var bsTabsCtrl = controllers[1];\n      if (ngModelCtrl) {\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n        });\n        ngModelCtrl.$formatters.push(function(modelValue) {\n          bsTabsCtrl.$setActive(modelValue);\n          return modelValue;\n        });\n      }\n      if (attrs.bsActivePane) {\n        var parsedBsActivePane = $parse(attrs.bsActivePane);\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n        });\n        scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n          bsTabsCtrl.$setActive(newValue);\n        }, true);\n      }\n    }\n  };\n} ]).directive('bsPane', [ '$window', '$animate', '$sce', function($window, $animate, $sce) {\n  return {\n    require: [ '^?ngModel', '^bsTabs' ],\n    scope: true,\n    link: function postLink(scope, element, attrs, controllers) {\n      var bsTabsCtrl = controllers[1];\n      element.addClass('tab-pane');\n      attrs.$observe('title', function(newValue, oldValue) {\n        scope.title = $sce.trustAsHtml(newValue);\n      });\n      scope.name = attrs.name;\n      scope.link = attrs.link ? attrs.link : false;\n      if (bsTabsCtrl.$options.animation) {\n        element.addClass(bsTabsCtrl.$options.animation);\n      }\n      attrs.$observe('disabled', function(newValue, oldValue) {\n        scope.disabled = scope.$eval(newValue);\n      });\n      bsTabsCtrl.$push(scope);\n      scope.$on('$destroy', function() {\n        bsTabsCtrl.$remove(scope);\n      });\n      function render() {\n        var index = bsTabsCtrl.$panes.indexOf(scope);\n        $animate[bsTabsCtrl.$isActive(scope, index) ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n      }\n      bsTabsCtrl.$activePaneChangeListeners.push(function() {\n        render();\n      });\n      render();\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.sort', []).directive('bsSort', [function() {\n  return {\n    scope: true,\n    compile: function(element, attrs) {\n      var list = element[0].querySelectorAll('th');\n      for (var i = 0, len = list.length; i < len; i++) {\n        var item = list[i];\n        item = angular.element(item);\n        if (item.attr('data-sortable')) {\n          var dataName = item.attr('data-name');\n          item.append('<div class=\"sorter\"><i class=\"nox-sort-up sort-asc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'asc\\'}\"></i><i class=\"nox-sort-down sort-desc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'desc\\'}\"></i></div>');\n        }\n      }\n\n      return function postLink (scope, element, attrs) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['onSort'], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        var list = element[0].querySelectorAll('th');\n        for (var i = 0, len = list.length; i < len; i++) {\n          var item = list[i];\n          item = angular.element(item);\n          if (item.attr('data-sortable')) {\n            item.on('click', clickColumn)\n          }\n        }\n\n        function clickColumn(event) {\n          var target = angular.element(event.currentTarget);\n          var dataName = target.attr('data-name');\n          if (dataName === scope.orderBy) {\n            scope.sortBy = scope.sortBy === 'asc' ? 'desc' : 'asc';\n          }\n          else {\n            scope.orderBy = dataName;\n            scope.sortBy = 'desc';\n          }\n          scope.$apply();\n\n          if (angular.isDefined(options.onSort) && angular.isFunction(options.onSort)) {\n            options.onSort(scope.orderBy, scope.sortBy);\n          }\n        }\n\n      }\n\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"select-arrow\"><i class=\"nox-sort-down\"></i></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          }\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function () {\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n            scope.$activeIndex = -1;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n","/**\n * Created by xiashan on 17/5/12.\n */\n\n'use strict';\n\nangular.module('mgcrea.ngStrap.rangedatepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ])\n  .provider('$rangedatepicker', function () {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'rangedatepicker',\n      placement: 'bottom-left',\n      templateUrl: 'rangedatepicker/rangedatepicker.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      connector: ' / ',\n      dateType: 'date',\n      dateFormat: 'yyyy-MM-dd',\n      timezone: null,\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      compare: true\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'rangedatepickerViews', '$tooltip', '$timeout',\n      function ($window, $document, $rootScope, $sce, $dateFormatter, rangedatepickerViews, $tooltip, $timeout) {\n        var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n        var isTouch = 'createTouch' in $window.document && isNative;\n        if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n        function RangeDatepickerFactory (element, controller, config) {\n          var $rangedatepicker = $tooltip(element, angular.extend({}, defaults, config));\n          var options = $rangedatepicker.$options;\n          var scope = $rangedatepicker.$scope;\n          var pickerViews = rangedatepickerViews($rangedatepicker);\n          $rangedatepicker.$view = pickerViews.view;\n          var viewDate = pickerViews.viewDate;\n          scope.$iconLeft = options.iconLeft;\n          scope.$iconRight = options.iconRight;\n          scope.$compare = options.compare;\n          var $picker = $rangedatepicker.$view;\n\n          var today = new Date();\n          var t = $rangedatepicker.$today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n          var d = today.getDay();\n\n          scope.rangeList = [\n            {name: 'Today', value: '0d', date: {start: t, end: t}},\n            {name: 'Yesterday', value: '-2d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1)}},\n            {name: 'Last 7 Days', value: '-7d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6), end: t}},\n            {name: 'Last Week', value: '-1w', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6 - d), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - d)}},\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}}\n          ];\n\n          // 区间\n          scope.ctrl = {\n            rangeType: '',\n            compare: ''\n          };\n\n          scope.$select = function (date, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.select(date, index);\n          };\n          scope.$selectPane = function (value, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.$selectPane(value, index);\n          };\n          scope.$selectRange = function (type) {\n            if (type === scope.ctrl.rangeType || scope.ctrl.compare) {\n              return;\n            }\n            $rangedatepicker.$selectRange(type);\n            $rangedatepicker.hide(true);\n          };\n          scope.$toggleCompare = function () {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            modelValue.onlyCompare = true;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n          };\n          scope.$closePicker = function () {\n            $rangedatepicker.hide();\n          };\n          scope.$stopPropagation = function (evt) {\n            evt.stopPropagation();\n          };\n\n          $rangedatepicker.update = function (sDate, eDate, force) {\n            if (angular.isDate(sDate) && !isNaN(sDate.getTime()) && angular.isDate(eDate) && !isNaN(eDate.getTime())) {\n              if (!scope.ctrl.compare) {\n                $rangedatepicker.$date = [sDate, eDate];\n              } else {\n                $rangedatepicker.$compareDate = [sDate, eDate];\n              }\n              $picker.update.call($picker, sDate, eDate);\n            }\n            $rangedatepicker.$build(!force);\n          };\n          $rangedatepicker.updateDisabledDates = function (dateRanges) {\n            options.disabledDateRanges = dateRanges;\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], $rangedatepicker.$setDisabledEl);\n            }\n          };\n          $rangedatepicker.select = function (date, index, keep) {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            if (!scope.ctrl.compare) {\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$dateValue[index]) || isNaN(controller.$dateValue[index].getTime())) {\n                  controller.$dateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$dateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.startDate = angular.copy(date);\n              } else {\n                modelValue.endDate = angular.copy(date);\n              }\n            } else {\n              controller.$compareDateValue = !controller.$compareDateValue ? [] : controller.$compareDateValue;\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$compareDateValue[index]) || isNaN(controller.$compareDateValue[index].getTime())) {\n                  controller.$compareDateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$compareDateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.compareStartDate = angular.copy(date);\n              } else {\n                modelValue.compareEndDate = angular.copy(date);\n              }\n            }\n            modelValue.onlyCompare = false;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              scope.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === modelValue.startDate.toDateString() && item.date.end.toDateString() === modelValue.endDate.toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            if (options.autoclose && !keep) {\n              $timeout(function () {\n                $rangedatepicker.hide(true);\n              });\n            }\n          };\n          $rangedatepicker.$getCompare = function () {\n            return scope.ctrl && scope.ctrl.compare;\n          };\n          $rangedatepicker.$build = function (pristine) {\n            if (pristine === true && $picker.built) return;\n            if (pristine === false && !$picker.built) return;\n            $picker.build.call($picker, $rangedatepicker.$date);\n          };\n          $rangedatepicker.$updateSelected = function () {\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], updateSelected);\n            }\n          };\n          $rangedatepicker.$isSelected = function (date) {\n            return $picker.isSelected(date);\n          };\n          $rangedatepicker.$setDisabledEl = function (el) {\n            el.disabled = $picker.isDisabled(el.date);\n          };\n          $rangedatepicker.$selectPane = function (value, index) {\n            var steps = $picker.steps;\n            var key = (index === 0) ? 'startDate' : 'endDate';\n            var targetDate = new Date(Date.UTC(viewDate[key].year + (steps.year || 0) * value, viewDate[key].month + (steps.month || 0) * value, 1));\n            angular.extend(viewDate[key], {\n              year: targetDate.getUTCFullYear(),\n              month: targetDate.getUTCMonth(),\n              date: targetDate.getUTCDate()\n            });\n            $rangedatepicker.$build();\n          };\n          $rangedatepicker.$selectRange = function (type) {\n            var cate = type.substr(-1);\n            var value = parseInt(type.substr(0, type.length - 1), 10);\n            var endDate = $rangedatepicker.$today;\n            var startDate;\n            switch (cate) {\n              case 'd':\n                if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value + 1);\n                  if (value === -2) {\n                    endDate = startDate;\n                  }\n                } else {\n                  startDate = endDate;\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value);\n                }\n                break;\n              case 'w':\n                var day = endDate.getDay();\n                if (value <= 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (day * -1 + 1));\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + (day * -1));\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + 7 - day + 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (7 - day));\n                }\n                break;\n              case 'm':\n                if (value === 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n                } else if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + value, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), 0);\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                }\n                break;\n              default:\n                break;\n            }\n            if (angular.isDate(startDate) && angular.isDate(endDate)) {\n              controller.$dateValue[0] = new Date(startDate);\n              controller.$dateValue[1] = new Date(endDate);\n              var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n              modelValue.startDate = angular.copy(startDate);\n              modelValue.endDate = angular.copy(endDate);\n              modelValue.onlyCompare = false;\n              controller.$setViewValue(modelValue);\n              controller.$render();\n              scope.ctrl.rangeType = type;\n            }\n          };\n          $rangedatepicker.$onMouseDown = function (evt) {\n            evt.preventDefault(true);\n            evt.stopPropagation(true);\n            var targetEl = angular.element(evt.target);\n            if (isTouch) {\n              if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n                targetEl = targetEl.parent();\n              }\n              targetEl.triggerHandler('click');\n            }\n          };\n          function updateSelected (el) {\n            el.selected = $rangedatepicker.$isSelected(el.date);\n          }\n          function focusElement () {\n            element[0].focus();\n          }\n          var _init = $rangedatepicker.init;\n          $rangedatepicker.init = function () {\n            if (isNative && options.useNative) {\n              element.prop('type', 'date');\n              element.css('-webkit-appearance', 'textfield');\n              return;\n            } else if (isTouch) {\n              element.prop('type', 'text');\n              element.attr('readonly', 'true');\n              element.on('click', focusElement);\n            }\n            _init();\n          };\n          var _destroy = $rangedatepicker.destroy;\n          $rangedatepicker.destroy = function () {\n            if (isNative && options.useNative) {\n              element.off('click', focusElement);\n            }\n            _destroy();\n          };\n          var _show = $rangedatepicker.show;\n          $rangedatepicker.show = function () {\n            // if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n            if (element.attr('disabled')) return;\n            _show();\n            $timeout(function () {\n              if (!$rangedatepicker.$isShown) return;\n              $rangedatepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            }, 0, false);\n          };\n          var _hide = $rangedatepicker.hide;\n          $rangedatepicker.hide = function (blur) {\n            if (!$rangedatepicker.$isShown) return;\n            $rangedatepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            _hide(blur);\n          };\n          return $rangedatepicker;\n        }\n        RangeDatepickerFactory.defaults = defaults;\n        return RangeDatepickerFactory;\n      }];\n  })\n  .directive('bsRangedatepicker', ['$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$rangedatepicker',\n    function ($window, $parse, $q, $dateFormatter, $dateParser, $rangedatepicker) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      return {\n        restrict: 'EAC',\n        require: 'ngModel',\n        link: function postLink (scope, element, attr, controller) {\n          var options = {\n            scope: scope\n          };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'connector', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'compare'], function (key) {\n            if (angular.isDefined(attr[key])) options[key] = attr[key];\n          });\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container', 'autoclose', 'useNative', 'compare'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n              options[key] = false;\n            }\n          });\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n          var rangedatepicker = $rangedatepicker(element, controller, options);\n          options = rangedatepicker.$options;\n          if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n          var lang = options.lang;\n          var formatDate = function (date, format) {\n            return $dateFormatter.formatDate(date, format, lang);\n          };\n          var dateParser = $dateParser({\n            format: options.dateFormat,\n            lang: lang,\n            strict: options.strictFormat\n          });\n          angular.forEach(['minDate', 'maxDate'], function (key) {\n            if (angular.isDefined(attr[key])) {\n              attr.$observe(key, function (newValue) {\n                rangedatepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n                if (!isNaN(rangedatepicker.$options[key])) {\n                  rangedatepicker.$build(false);\n                }\n                if (controller.$dateValue) {\n                  validateAgainstMinMaxDate(controller.$dateValue[0], controller.$dateValue[1]);\n                }\n              });\n            }\n          });\n          if (angular.isDefined(attr.dateFormat)) {\n            attr.$observe('dateFormat', function (newValue) {\n              rangedatepicker.$options.dateFormat = newValue;\n            });\n          }\n          scope.$watch(attr.ngModel, function (newValue, oldValue) {\n            if (newValue && newValue.onlyCompare) {\n              rangedatepicker.update(null, null, true);\n            } else if (rangedatepicker.$getCompare()) {\n              rangedatepicker.update(controller.$compareDateValue[0], controller.$compareDateValue[1]);\n            } else {\n              rangedatepicker.update(controller.$dateValue[0], controller.$dateValue[1]);\n            }\n          }, true);\n\n          function getFormattedDate (modelValue) {\n            var date;\n            if (angular.isDate(modelValue)) {\n              date = modelValue;\n            } else if (options.dateType === 'string') {\n              date = dateParser.parse(modelValue, null, options.modelDateFormat);\n            } else if (options.dateType === 'unix') {\n              date = new Date(modelValue * 1e3);\n            } else {\n              date = new Date(modelValue);\n            }\n            return date;\n          }\n          function validateAgainstMinMaxDate (parsedDate1, parsedDate2) {\n            if (!angular.isDate(parsedDate1) || !angular.isDate(parsedDate2)) {\n              return false;\n            }\n            var isMinValid = isNaN(rangedatepicker.$options.minDate) || parsedDate1.getTime() >= rangedatepicker.$options.minDate;\n            var isMaxValid = isNaN(rangedatepicker.$options.maxDate) || parsedDate2.getTime() <= rangedatepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            var compare = rangedatepicker.$getCompare();\n            if (isValid) {\n              if (compare) {\n                controller.$compareDateValue[0] = parsedDate1;\n                controller.$compareDateValue[1] = parsedDate2;\n              } else {\n                controller.$dateValue[0] = parsedDate1;\n                controller.$dateValue[1] = parsedDate2;\n              }\n            }\n            return true;\n          }\n          controller.$parsers.unshift(function (viewValue) {\n            var compare = rangedatepicker.$getCompare();\n            if (!viewValue) {\n              controller.$setValidity('date', true);\n              return null;\n            }\n            if (viewValue.onlyCompare) {\n              viewValue.compare = compare;\n              return viewValue;\n            }\n            var parsedDate1;\n            var parsedDate2;\n            if (compare) {\n              parsedDate1 = dateParser.parse(viewValue.compareStartDate, controller.$compareDateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.compareEndDate, controller.$compareDateValue[1]);\n            } else {\n              parsedDate1 = dateParser.parse(viewValue.startDate, controller.$dateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.endDate, controller.$dateValue[1]);\n            }\n            if (parsedDate1 && !parsedDate2) {\n              parsedDate2 = angular.copy(parsedDate1);\n            }\n            if (!parsedDate1 && parsedDate2) {\n              parsedDate1 = angular.copy(parsedDate2);\n            }\n            if (!parsedDate1 || isNaN(parsedDate1.getTime()) || !parsedDate2 || isNaN(parsedDate2.getTime())) {\n              controller.$setValidity('date', false);\n              return false;\n            }\n            validateAgainstMinMaxDate(parsedDate1, parsedDate2);\n            var obj = {\n              dateRange: viewValue.dateRange,\n              compare: compare\n            };\n            var skey = '';\n            var ekey = '';\n            if (compare) {\n              obj.startDate = viewValue.startDate;\n              obj.endDate = viewValue.endDate;\n              skey = 'compareStartDate';\n              ekey = 'compareEndDate';\n            } else {\n              // obj.compareStartDate = viewValue.compareStartDate;\n              // obj.compareEndDate = viewValue.compareEndDate;\n              skey = 'startDate';\n              ekey = 'endDate';\n            }\n            if (options.dateType === 'string') {\n              obj[skey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate1, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              obj[ekey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate2, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              return obj;\n            }\n            var date1;\n            var date2;\n            if (compare) {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[1], options.timezone, true);\n            } else {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$dateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$dateValue[1], options.timezone, true);\n            }\n            if (options.dateType === 'number') {\n              obj[skey] = date1.getTime();\n              obj[ekey] = date2.getTime();\n            } else if (options.dateType === 'unix') {\n              obj[skey] = date1.getTime() / 1e3;\n              obj[ekey] = date2.getTime() / 1e3;\n            } else if (options.dateType === 'iso') {\n              obj[skey] = date1.toISOString();\n              obj[ekey] = date2.toISOString();\n            } else {\n              obj[skey] = new Date(date1);\n              obj[ekey] = new Date(date2);\n            }\n            return obj;\n          });\n          controller.$formatters.push(function (modelValue) {\n            var startDate;\n            var endDate;\n            if (angular.isUndefined(modelValue) || modelValue === null) {\n              return '';\n            } else if (modelValue.startDate && modelValue.endDate) {\n              startDate = getFormattedDate(modelValue.startDate);\n              endDate = getFormattedDate(modelValue.endDate);\n              controller.$dateValue = [dateParser.timezoneOffsetAdjust(startDate, options.timezone), dateParser.timezoneOffsetAdjust(endDate, options.timezone)];\n            } else if (modelValue.dateRange) {\n              controller.$dateRange = modelValue.dateRange;\n              controller.$dateValue = !controller.$dateValue ? [] : controller.$dateValue;\n              rangedatepicker.$selectRange(controller.$dateRange);\n            }\n            controller.$compareDateValue = [];\n\n            return getDateFormattedString();\n          });\n          controller.$render = function () {\n            element.val(getDateFormattedString());\n          };\n          function getDateFormattedString () {\n            // return (!controller.$dateValue || controller.$dateValue.length === 0 || !controller.$dateValue[0] || !controller.$dateValue[1] ||\n            // isNaN(controller.$dateValue[0].getTime()) || isNaN(controller.$dateValue[1].getTime()))\n            //   ? '' : formatDate(controller.$dateValue[0], options.dateFormat) + options.connector + formatDate(controller.$dateValue[1], options.dateFormat);\n            if (!controller.$modelValue || !controller.$modelValue.startDate || isNaN(controller.$modelValue.startDate.getTime())) {\n              return '';\n            }\n            var html = formatDate(controller.$modelValue.startDate, options.dateFormat);\n            if (controller.$modelValue.compare && controller.$modelValue.compareStartDate && !isNaN(controller.$modelValue.compareStartDate.getTime())) {\n              html += ' vs ' + formatDate(controller.$modelValue.compareStartDate, options.dateFormat);\n            } else if (!controller.$modelValue.compare && controller.$modelValue.endDate && !isNaN(controller.$modelValue.endDate.getTime())) {\n              html += ' / ' + formatDate(controller.$modelValue.endDate, options.dateFormat);\n            }\n            return html;\n          }\n          scope.$on('$destroy', function () {\n            if (rangedatepicker) rangedatepicker.destroy();\n            options = null;\n            rangedatepicker = null;\n          });\n        }\n      };\n    }])\n  .provider('rangedatepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      return function (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = (picker.$date && picker.$date[0]) || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var endDate = (picker.$date && picker.$date[1]) || (options.endDate ? dateParser.getDateForAttribute('endDate', options.endDate) : new Date());\n        var viewDate = {\n          startDate: {\n            year: startDate.getFullYear(),\n            month: startDate.getMonth(),\n            date: startDate.getDate()\n          },\n          endDate: {\n            year: endDate.getFullYear(),\n            month: endDate.getMonth(),\n            date: endDate.getDate()\n          }\n        };\n        var view = {\n          format: options.dayFormat,\n          split: 7,\n          steps: {\n            month: 1\n          },\n          update: function (sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function () {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var item = viewDate[value];\n              var firstDayOfMonth = new Date(item.year, item.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === today,\n                  label: formatDate(day, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], day),\n                  inRange: that.isInRange(day),\n                  muted: day.getMonth() !== item.month,\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(day, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], day)\n                });\n              }\n              scope.title[index] = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.rows[index] = split(days, that.split);\n            });\n            scope.showLabels = true;\n            scope.labels = weekDaysLabelsHtml;\n            scope.isTodayDisabled = this.isDisabled(new Date());\n            this.built = true;\n          },\n          isSelected: function (currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth() &&\n              date.getDate() === currentDate.getDate();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function (date, index) {\n            var time = date.getTime();\n            if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            if (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1]))) {\n              return true;\n            }\n            if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) {\n              return true;\n            }\n            if (options.disabledDateRanges) {\n              for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                  return true;\n                }\n              }\n            }\n            return false;\n          }\n        };\n        return {\n          view: view,\n          viewDate: viewDate\n        };\n      };\n    } ];\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      // uncommenting the next two lines will break backwards compatability\n      // prefixClass: 'popover',\n      // prefixEvent: 'popover',\n      container: false,\n      target: false,\n      placement: 'right',\n      templateUrl: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function ($tooltip) {\n\n      function PopoverFactory (element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if (options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function ($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr) {\n\n        var popover;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent', 'bsEnabled'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n              if (angular.isDefined(oldValue)) {\n                requestAnimationFrame(function () {\n                  if (popover) popover.$applyPlacement();\n                });\n              }\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsPopover) {\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              requestAnimationFrame(function () {\n                if (popover) popover.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n            if (newValue === true) {\n              popover.show();\n            } else {\n              popover.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(popover),?/i);\n            if (newValue === false) {\n              popover.setEnabled(false);\n            } else {\n              popover.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            popover.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n","'use strict';\n\nif (angular.version.minor < 3 && angular.version.dot < 14) {\n  angular.module('ng')\n\n  .factory('$$rAF', function ($window, $timeout) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported ?\n      function (fn) {\n        var id = requestAnimationFrame(fn);\n        return function () {\n          cancelAnimationFrame(id);\n        };\n      } :\n      function (fn) {\n        var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n        return function () {\n          $timeout.cancel(timer);\n        };\n      };\n\n    raf.supported = rafSupported;\n\n    return raf;\n\n  });\n}\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function () {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function ($parse, $q) {\n\n      function ParseOptionsFactory (attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match;\n        var displayFn;\n        var valueName;\n        /* eslint-disable no-unused-vars */\n        var keyName;\n        var groupByFn;\n        /* eslint-enable no-unused-vars */\n        var valueFn;\n        var valuesFn;\n\n        $parseOptions.init = function () {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]);\n          valueName = match[4] || match[6];\n          keyName = match[5];\n          groupByFn = $parse(match[3] || '');\n          valueFn = $parse(match[2] ? match[1] : valueName);\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function (scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function (values) {\n            if (!angular.isArray(values)) {\n              values = [];\n            }\n            $parseOptions.$values = values.length ? parseValues(values, scope) : [];\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function (modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues (values, scope) {\n          return values.map(function (match, index) {\n            var locals = {};\n            var label;\n            var value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function () {\n\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function (element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function (element, prop, extra) {\n      var value;\n      if (element.currentStyle) { // IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function (element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides set equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip\n     * @url http://api.jquery.com/offset/\n     * @param element\n     * @param options\n     * @param i\n     */\n    fn.setOffset = function (element, options, i) {\n      var curPosition;\n      var curLeft;\n      var curCSSTop;\n      var curTop;\n      var curOffset;\n      var curCSSLeft;\n      var calculatePosition;\n      var position = fn.css(element, 'position');\n      var curElem = angular.element(element);\n      var props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        element.style.position = 'relative';\n      }\n\n      curOffset = fn.offset(element);\n      curCSSTop = fn.css(element, 'top');\n      curCSSLeft = fn.css(element, 'left');\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = fn.position(element);\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (angular.isFunction(options)) {\n        options = options.call(element, i, curOffset);\n      }\n\n      if (options.top !== null) {\n        props.top = (options.top - curOffset.top) + curTop;\n      }\n      if (options.left !== null) {\n        props.left = (options.left - curOffset.left) + curLeft;\n      }\n\n      if ('using' in options) {\n        options.using.call(curElem, props);\n      } else {\n        curElem.css({\n          top: props.top + 'px',\n          left: props.left + 'px'\n        });\n      }\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function (element) {\n\n      var offsetParentRect = {top: 0, left: 0};\n      var offsetParentEl;\n      var offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentEl\n        offsetParentEl = offsetParentElement(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentEl, 'html')) {\n          offsetParentRect = fn.offset(offsetParentEl);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    function offsetParentElement (element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    }\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function (element, outer) {\n      var value = element.offsetHeight;\n      if (outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function (element, outer) {\n      var value = element.offsetWidth;\n      if (outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', function ($timeout) {\n  return function (func, wait, immediate) {\n    var timeout = null;\n    return function () {\n      var context = this;\n      var args = arguments;\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if (callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = null;\n    if (!options) options = {};\n    return function () {\n      var context = this;\n      var args = arguments;\n      if (!timeout) {\n        if (options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later () {\n          timeout = null;\n          if (options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function ($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate () {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function (value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function (value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function (value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function (value) { this.hours = value; };\n  ParseDate.prototype.getHours = function () { return this.hours; };\n  ParseDate.prototype.setDate = function (value) { this.day = value; };\n  ParseDate.prototype.setMonth = function (value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function (value) { this.year = value; };\n  ParseDate.prototype.fromDate = function (value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function () {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop () {\n  }\n\n  function isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive (array, value) {\n    var len = array.length;\n    var str = value.toString().toLowerCase();\n    for (var i = 0; i < len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function ($locale, dateFilter) {\n\n    var DateParserFactory = function (config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      /* eslint-disable key-spacing, quote-props */\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}'\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function (value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function (value) { return this.setMonth(1 * value - 1); },\n        'M'     : function (value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function (value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : function (value) { return (1 * value <= 50 && value.length === 2) ? this.setFullYear(2000 + 1 * value) : this.setFullYear(1 * value); }\n      };\n      /* eslint-enable key-spacing, quote-props */\n\n      var regex;\n      var setMap;\n\n      $dateParser.init = function () {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function (date) {\n        if (angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function (value, baseDate, format, timezone) {\n        // check for date format special names\n        if (format) format = $locale.DATETIME_FORMATS[format] || format;\n        if (angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format, timezone);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if (!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for (var i = 0; i < matches.length - 1; i++) {\n          if (formatSetMap[i]) formatSetMap[i].call(date, matches[i + 1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function (key, value) {\n        var date;\n\n        if (value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if (isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && value.length === 0) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function (key, value) {\n        var time;\n\n        if (value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if (isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.length === 0) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function (date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      /* Correct the date for timezone offset.\n      * @param  date  (Date) the date to adjust\n      * @param  timezone  (string) the timezone to adjust for\n      * @param  undo  (boolean) to add or subtract timezone offset\n      * @return  (Date) the corrected date\n      */\n      $dateParser.timezoneOffsetAdjust = function (date, timezone, undo) {\n        if (!date) {\n          return null;\n        }\n        // Right now, only 'UTC' is supported.\n        if (timezone && timezone === 'UTC') {\n          date = new Date(date.getTime());\n          date.setMinutes(date.getMinutes() + (undo ? -1 : 1) * date.getTimezoneOffset());\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function regExpForFormat (format) {\n        // `format` string can contain literal values.\n        // These need to be escaped by surrounding with\n        // single quotes (e.g. `\"h 'in the morning'\"`).\n        // In order to output a single quote, escape it - i.e.,\n        // two single quotes in a sequence (e.g. `\"h 'o''clock'\"`).\n\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseRegex(re);\n      }\n\n      function buildDateAbstractRegex (format) {\n        var escapedFormat = escapeReservedSymbols(format);\n        var escapedLiteralFormat = escapedFormat.replace(/''/g, '\\\\\\'');\n        var literalRegex = /('(?:\\\\'|.)*?')/;\n        var formatParts = escapedLiteralFormat.split(literalRegex);\n        var dateElements = Object.keys(regExpMap);\n        var dateRegexParts = [];\n\n        angular.forEach(formatParts, function (part) {\n          if (isFormatStringLiteral(part)) {\n            part = trimLiteralEscapeChars(part);\n          } else {\n            // Abstract replaces to avoid collisions\n            for (var i = 0; i < dateElements.length; i++) {\n              part = part.split(dateElements[i]).join('${' + i + '}');\n            }\n          }\n          dateRegexParts.push(part);\n        });\n\n        return dateRegexParts.join('');\n      }\n\n      function escapeReservedSymbols (text) {\n        return text.replace(/\\\\/g, '[\\\\\\\\]')\n                   .replace(/-/g, '[-]')\n                   .replace(/\\./g, '[.]')\n                   .replace(/\\*/g, '[*]')\n                   .replace(/\\+/g, '[+]')\n                   .replace(/\\?/g, '[?]')\n                   .replace(/\\$/g, '[$]')\n                   .replace(/\\^/g, '[^]')\n                   .replace(/\\//g, '[/]')\n                   .replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function isFormatStringLiteral (text) {\n        return /^'.*'$/.test(text);\n      }\n\n      function trimLiteralEscapeChars (text) {\n        return text.replace(/^'(.*)'$/, '$1');\n      }\n\n      function buildDateParseRegex (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var re = abstractRegex;\n\n        // Replace abstracted values\n        for (var i = 0; i < dateElements.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[dateElements[i]] + ')');\n        }\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      function setMapForFormat (format) {\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseValuesMap(re);\n      }\n\n      function buildDateParseValuesMap (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var valuesRegex = new RegExp('\\\\${(\\\\d+)}', 'g');\n        var valuesMatch;\n        var keyIndex;\n        var valueKey;\n        var valueFunction;\n        var valuesFunctionMap = [];\n\n        /* eslint-disable no-cond-assign */\n        while ((valuesMatch = valuesRegex.exec(abstractRegex)) !== null) {\n          keyIndex = valuesMatch[1];\n          valueKey = dateElements[keyIndex];\n          valueFunction = setFnMap[valueKey];\n\n          valuesFunctionMap.push(valueFunction);\n        }\n\n        return valuesFunctionMap;\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.datepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$datepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    prefixClass: 'datepicker',\n    placement: 'bottom-left',\n    templateUrl: 'datepicker/datepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: false,\n    dateType: 'date',\n    dateFormat: 'shortDate',\n    timezone: null,\n    modelDateFormat: null,\n    dayFormat: 'dd',\n    monthFormat: 'MMM',\n    yearFormat: 'yyyy',\n    monthTitleFormat: 'MMMM yyyy',\n    yearTitleFormat: 'yyyy',\n    strictFormat: false,\n    autoclose: false,\n    minDate: -Infinity,\n    maxDate: +Infinity,\n    startView: 0,\n    minView: 0,\n    startWeek: 0,\n    daysOfWeekDisabled: '',\n    hasToday: false,\n    hasClear: false,\n    iconLeft: 'nox-sort-left',\n    iconRight: 'nox-sort-right'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datepickerViews', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n    function DatepickerFactory(element, controller, config) {\n      var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $datepicker.$options;\n      var scope = $datepicker.$scope;\n      if (options.startView) options.startView -= options.minView;\n      var pickerViews = datepickerViews($datepicker);\n      $datepicker.$views = pickerViews.views;\n      var viewDate = pickerViews.viewDate;\n      scope.$mode = options.startView;\n      scope.$iconLeft = options.iconLeft;\n      scope.$iconRight = options.iconRight;\n      scope.$hasToday = options.hasToday;\n      scope.$hasClear = options.hasClear;\n      var $picker = $datepicker.$views[scope.$mode];\n      scope.$select = function(date) {\n        $datepicker.select(date);\n      };\n      scope.$selectPane = function(value) {\n        $datepicker.$selectPane(value);\n      };\n      scope.$toggleMode = function() {\n        $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n      };\n      scope.$setToday = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(new Date());\n        } else {\n          $datepicker.select(new Date(), true);\n        }\n      };\n      scope.$clear = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(null);\n        } else {\n          $datepicker.select(null, true);\n        }\n      };\n      $datepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $datepicker.$date = date;\n          $picker.update.call($picker, date);\n        }\n        $datepicker.$build(true);\n      };\n      $datepicker.updateDisabledDates = function(dateRanges) {\n        options.disabledDateRanges = dateRanges;\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n        }\n      };\n      $datepicker.select = function(date, keep) {\n        if (angular.isDate(date)) {\n          if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date(date);\n          }\n        } else {\n          controller.$dateValue = null;\n        }\n        if (!scope.$mode || keep) {\n          controller.$setViewValue(angular.copy(date));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              $datepicker.hide(true);\n            });\n          }\n        } else {\n          angular.extend(viewDate, {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            date: date.getDate()\n          });\n          $datepicker.setMode(scope.$mode - 1);\n          $datepicker.$build();\n        }\n      };\n      $datepicker.setMode = function(mode) {\n        scope.$mode = mode;\n        $picker = $datepicker.$views[scope.$mode];\n        $datepicker.$build();\n      };\n      $datepicker.$build = function(pristine) {\n        if (pristine === true && $picker.built) return;\n        if (pristine === false && !$picker.built) return;\n        $picker.build.call($picker);\n      };\n      $datepicker.$updateSelected = function() {\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], updateSelected);\n        }\n      };\n      $datepicker.$isSelected = function(date) {\n        return $picker.isSelected(date);\n      };\n      $datepicker.$setDisabledEl = function(el) {\n        el.disabled = $picker.isDisabled(el.date);\n      };\n      $datepicker.$selectPane = function(value) {\n        var steps = $picker.steps;\n        var targetDate = new Date(Date.UTC(viewDate.year + (steps.year || 0) * value, viewDate.month + (steps.month || 0) * value, 1));\n        angular.extend(viewDate, {\n          year: targetDate.getUTCFullYear(),\n          month: targetDate.getUTCMonth(),\n          date: targetDate.getUTCDate()\n        });\n        $datepicker.$build();\n      };\n      $datepicker.$onMouseDown = function(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $datepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          if (!scope.$mode) {\n            $datepicker.hide(true);\n          } else {\n            scope.$apply(function() {\n              $datepicker.setMode(scope.$mode - 1);\n            });\n          }\n          return;\n        }\n        $picker.onKeyDown(evt);\n        parentScope.$digest();\n      };\n      function updateSelected(el) {\n        el.selected = $datepicker.$isSelected(el.date);\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $datepicker.init;\n      $datepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'date');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $datepicker.destroy;\n      $datepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $datepicker.show;\n      $datepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.on('keydown', $datepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $datepicker.hide;\n      $datepicker.hide = function(blur) {\n        if (!$datepicker.$isShown) return;\n        $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n        if (options.keyboard) {\n          element.off('keydown', $datepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $datepicker;\n    }\n    DatepickerFactory.defaults = defaults;\n    return DatepickerFactory;\n  } ];\n}).directive('bsDatepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      var datepicker = $datepicker(element, controller, options);\n      options = datepicker.$options;\n      if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!datepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          if (newValue === true) {\n            datepicker.show();\n          } else {\n            datepicker.hide();\n          }\n        });\n      }\n      angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        }\n      });\n      if (angular.isDefined(attr.dateFormat)) {\n        attr.$observe('dateFormat', function(newValue) {\n          datepicker.$options.dateFormat = newValue;\n        });\n      }\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        datepicker.update(controller.$dateValue);\n      }, true);\n      function normalizeDateRanges(ranges) {\n        if (!ranges || !ranges.length) return null;\n        return ranges;\n      }\n      if (angular.isDefined(attr.disabledDates)) {\n        scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n          disabledRanges = normalizeDateRanges(disabledRanges);\n          previousValue = normalizeDateRanges(previousValue);\n          if (disabledRanges) {\n            datepicker.updateDisabledDates(disabledRanges);\n          }\n        });\n      }\n      function validateAgainstMinMaxDate(parsedDate) {\n        if (!angular.isDate(parsedDate)) return;\n        var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n        var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (isValid) controller.$dateValue = parsedDate;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedDate || isNaN(parsedDate.getTime())) {\n          controller.$setValidity('date', false);\n          return;\n        }\n        validateAgainstMinMaxDate(parsedDate);\n        if (options.dateType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n          return formatDate(date, options.modelDateFormat || options.dateFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.dateType === 'number') {\n          return date.getTime();\n        } else if (options.dateType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.dateType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.dateType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelDateFormat);\n        } else if (options.dateType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getDateFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getDateFormattedString());\n      };\n      function getDateFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (datepicker) datepicker.destroy();\n        options = null;\n        datepicker = null;\n      });\n    }\n  };\n} ]).provider('datepickerViews', function() {\n  function split(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  }\n  function mod(n, m) {\n    return (n % m + m) % m;\n  }\n  this.$get = [ '$dateFormatter', '$dateParser', '$sce', function($dateFormatter, $dateParser, $sce) {\n    return function(picker) {\n      var scope = picker.$scope;\n      var options = picker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n      var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n      var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n      var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n      var viewDate = {\n        year: startDate.getFullYear(),\n        month: startDate.getMonth(),\n        date: startDate.getDate()\n      };\n      var views = [ {\n        format: options.dayFormat,\n        split: 7,\n        steps: {\n          month: 1\n        },\n        update: function(date, force) {\n          if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n            viewDate.date = picker.$date.getDate();\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n          var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n          var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n          var firstDateOffset = firstDate.getTimezoneOffset();\n          var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n          if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n          var days = [];\n          var day;\n          for (var i = 0; i < 42; i++) {\n            day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n            days.push({\n              date: day,\n              isToday: day.toDateString() === today,\n              label: formatDate(day, this.format),\n              selected: picker.$date && this.isSelected(day),\n              muted: day.getMonth() !== viewDate.month,\n              disabled: this.isDisabled(day)\n            });\n          }\n          scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n          scope.showLabels = true;\n          scope.labels = weekDaysLabelsHtml;\n          scope.rows = split(days, this.split);\n          scope.isTodayDisabled = this.isDisabled(new Date());\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n        },\n        isDisabled: function(date) {\n          var time = date.getTime();\n          if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n          if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n          if (options.disabledDateRanges) {\n            for (var i = 0; i < options.disabledDateRanges.length; i++) {\n              if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                return true;\n              }\n            }\n          }\n          return false;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualTime = picker.$date.getTime();\n          var newDate;\n          if (evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5); else if (evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5); else if (evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5); else if (evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'month',\n        format: options.monthFormat,\n        split: 4,\n        steps: {\n          year: 1\n        },\n        update: function(date, force) {\n          if (!this.built || date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var months = [];\n          var month;\n          for (var i = 0; i < 12; i++) {\n            month = new Date(viewDate.year, i, 1);\n            months.push({\n              date: month,\n              label: formatDate(month, this.format),\n              selected: picker.$isSelected(month),\n              disabled: this.isDisabled(month)\n            });\n          }\n          scope.title = formatDate(month, options.yearTitleFormat);\n          scope.showLabels = false;\n          scope.rows = split(months, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualMonth = picker.$date.getMonth();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setMonth(actualMonth - 1); else if (evt.keyCode === 38) newDate.setMonth(actualMonth - 4); else if (evt.keyCode === 39) newDate.setMonth(actualMonth + 1); else if (evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'year',\n        format: options.yearFormat,\n        split: 4,\n        steps: {\n          year: 12\n        },\n        update: function(date, force) {\n          if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n          var years = [];\n          var year;\n          for (var i = 0; i < 12; i++) {\n            year = new Date(firstYear + i, 0, 1);\n            years.push({\n              date: year,\n              label: formatDate(year, this.format),\n              selected: picker.$isSelected(year),\n              disabled: this.isDisabled(year)\n            });\n          }\n          scope.title = years[0].label + '-' + years[years.length - 1].label;\n          scope.showLabels = false;\n          scope.rows = split(years, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualYear = picker.$date.getFullYear();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setYear(actualYear - 1); else if (evt.keyCode === 38) newDate.setYear(actualYear - 4); else if (evt.keyCode === 39) newDate.setYear(actualYear + 1); else if (evt.keyCode === 40) newDate.setYear(actualYear + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      } ];\n      return {\n        views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n        viewDate: viewDate\n      };\n    };\n  } ];\n});\n","'use strict';\n\n// @BUG: following snippet won't compile correctly\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      templateUrl: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissible: true\n    };\n\n    this.$get = function ($modal, $timeout) {\n\n      function AlertFactory (config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissible]\n        $alert.$scope.dismissible = !!options.dismissible;\n        if (options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if (options.duration) {\n          $alert.show = function () {\n            show();\n            $timeout(function () {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function ($window, $sce, $alert) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsAlert) {\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n","\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.rangedatepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.pagination',\n  'mgcrea.ngStrap.sort'\n]);\n"],"sourceRoot":"/source/"}