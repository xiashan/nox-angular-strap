{"version":3,"sources":["angular-strap.js","tooltip/tooltip.js","helpers/compiler.js","dropdown/dropdown.js","timepicker/timepicker.js","tab/tab.js","sort/sort.js","select/select.js","rangedatepicker/rangedatepicker.js","popover/popover.js","pagination/pagination.js","modal/modal.js","helpers/raf.js","helpers/parse-options.js","helpers/dimensions.js","helpers/debounce.js","helpers/date-parser.js","helpers/date-formatter.js","datetimepicker/datetimepicker.js","datepicker/datepicker.js","alert/alert.js","module.js"],"names":["prefixClass","undefined","templateUrl","options","cache","$templateCache","then","element","res","fetchTemplate","template","fetchPromises","module","$http","get","defaults","animation","data","this","compile","controller","console","controllerAs","resolve","copy","locals","bindToController","angular","forEach","value","isString","$injector","key","invoke","transformTemplate","identity","extend","$template","when","$q","all","templateEl","Error","findElement","contentTemplate","templates","contentEl","removeAttr","html","replace","next","remove","outerHTML","link","scope","trim","contents","linkFn","invokeCtrl","children","instance","ctrl","isObject","arguments","apply","bsCompilerService","$inject","target","provider","placement","titleTemplate","trigger","keyboard","show","title","type","delay","autoClose","bsEnabled","mouseDownPreventDefault","mouseDownStopPropagation","viewport","selector","padding","TooltipFactory","$get","promise","$tooltip","$bsCompiler","split","clearTimeout","hoverState","prefixEvent","hide","isFunction","onShow","leaveAnimateCallback","$emit","destroyTipElement","onHide","_tipToHide","evt","preventDefault","triggers","nodeName","on","isTouch","toggle","enter","unbindTriggerEvents","length","$onFocusElementMouseDown","off","i","bindKeyboardEvents","tipElement","$onKeyUp","unbindKeyboardEvents","_autoCloseEventsBinded","bindAutoCloseEvents","$timeout","$body","unbindAutoCloseEvents","stopEventPropagation","event","getPosition","$element","elRect","getBoundingClientRect","rect","p","width","height","top","left","dimensions","offset","el","scroll","outerDims","isBody","document","documentElement","scrollTop","body","prop","clientWidth","innerHeight","position","actualWidth","actualHeight","marginLeft","isNaN","setOffset","using","parseInt","props","css","right","marginTop","tip","offsetHeight","getViewportAdjustedDelta","delta","offsetWidth","isVertical","arrowDelta","replaceArrow","arrowOffsetPosition","viewportDimensions","$viewport","topEdgeOffset","bottomEdgeOffset","viewportPadding","test","leftEdgeOffset","rightEdgeOffset","dimension","isHorizontal","$arrow","timeout","$isShown","tipScope","$destroy","$$phase","$options","config","$promise","$scope","$new","$rootScope","toLowerCase","$id","attr","map","parseFloat","$sce","trustAsHtml","$setEnabled","$$postDigest","id","$hide","setEnabled","isEnabled","compileData","tipContainer","init","container","bindTriggerEvents","isElement","destroy","focus","isDefined","onBeforeShow","after","parent","lastChild","display","visibility","clonedElement","addClass","safeDigest","version","prepend","$$rAF","$applyPlacement","$animate","enterAnimateCallback","_blur","leave","onBeforeHide","autoPlace","autoToken","elementPosition","tipWidth","tipHeight","viewportPosition","originalPlacement","removeClass","tipPosition","getCalculatedOffset","applyPlacement","blur","stopPropagation","directive","$root","$digest","restrict","query","querySelectorAll","isNative","tooltip","transclusion","falseValueRegExp","$eval","bsKey","dataTarget","slice","hasOwnProperty","oldValue","$observe","newValue","bsTooltip","bsShow","$watch","match","setViewport","$on","useNative","timeType","timeFormat","timezone","modelTimeFormat","autoclose","minTime","maxTime","Infinity","hourStep","minuteStep","secondStep","roundDisplay","iconUp","iconDown","arrowBehavior","$timepicker","timepickerFactory","formatDate","format","viewDate","hour","startDate","getHours","meridian","coeff","selRange","select","end","start","setSelectionRange","isUndefined","collapse","selectionStart","moveStart","selectionEnd","moveEnd","focusElement","_init","parentScope","floorMinutes","time","floor","lang","selectedIndex","date","defaultDate","second","getSeconds","millisecond","getMilliseconds","$dateValue","hoursFormat","$dateFormatter","timeSeparator","minute","minutesFormat","secondsFormat","showSeconds","$iconUp","index","$moveIndex","$switchMeridian","switchMeridian","isDate","getMinutes","getTime","$build","$isBuilt","$render","keep","Date","setHours","setMinutes","setSeconds","$setViewValue","midIndex","hours","push","disabled","label","selected","minutes","$date","seconds","rows","$isDisabled","showAM","$isSelected","isAM","selectedTime","$arrowAction","$setTimeByStep","newDate","targetDate","$onMouseDown","targetEl","triggerHandler","$onKeyDown","keyCode","hoursLength","minutesLength","sepLength","lateralMove","count","selectRange","incr","isSeconds","isMeridian","secondsLength","createSelection","createTextRange","_destroy","_show","_hide","require","$window","navigator","userAgent","isMaxValid","isValid","parsedTime","isMinValid","setFullYear","$setValidity","$parsers","unshift","viewValue","getTimeFormattedString","timepicker","dateParser","$dateParser","validateAgainstMinMaxTime","ngModel","update","timezoneOffsetAdjust","$formatters","modelValue","NaN","parse","self","navClass","activeClass","$activeClass","$panes","$activePaneChangeListeners","$push","pane","$active","$attrs","$navClass","$remove","active","activeIndex","indexOf","splice","$setActive","name","fn","$pane","$tab","transclude","postLink","ngModelCtrl","bsTabsCtrl","attrs","bsActivePane","parsedBsActivePane","assign","$parse","controllers","render","$isActive","item","dataName","append","len","list","charAt","toUpperCase","totalItems","currentTarget","$apply","orderBy","sortBy","onSort","sortable","clickColumn","multiple","allNoneButtons","search","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","SelectFactory","$select","$activeIndex","$isMultiple","$showAllNoneButtons","$showSearch","$iconCheckmark","$noneText","$changeSearchText","$close","$searchTextChange","$activate","activate","$isVisible","$selectNone","$matches","matches","$updateActiveIndex","a","b","onSelect","isArray","$modelValue","$getIndex","minLength","$viewValue","equals","getAttribute","anchor","anchorCandidate","searchText","$selectScrollFix","$isIE","stopImmediatePropagation","ua","activeElement","tagName","e","dataMultiple","dataSearch","inputEl","addEventListener","watchedOptions","parsedOptions","valuesFn","values","$match","filter","join","$isEmpty","collection","output","keyname","connector","dateType","dateFormat","modelDateFormat","dayFormat","monthFormat","yearFormat","monthTitleFormat","yearTitleFormat","strictFormat","minDate","maxDate","minView","startWeek","daysOfWeekDisabled","iconLeft","iconRight","compare","RangeDatepickerFactory","$rangedatepicker","$mode","$iconRight","$compare","$picker","rangeList","today","pickerViews","$today","rangeType","$views","getFullYear","getMonth","getDate","$toggleCompare","$closePicker","$stopPropagation","sDate","eDate","updateDisabledDates","l","force","$setDisabledEl","$compareDateValue","compareStartDate","compareEndDate","endDate","onlyCompare","$setCompare","pristine","$updateSelected","updateSelected","built","isDisabled","steps","year","getUTCFullYear","getUTCDate","UTC","month","$selectRange","cate","substr","day","getDay","views","validateAgainstMinMaxDate","parsedDate1","rangedatepicker","parsedDate2","$getCompare","getDateFormattedString","strict","getDateForAttribute","getFormattedDate","obj","skey","ekey","date1","date2","toISOString","size","arrays","mod","n","m","arr","weekDaysMin","weekdaysShort","weekDaysLabelsHtml","picker","d","t","build","that","firstDate","firstDateOffset","currentDate","firstDayOfMonthOffset","days","getTimezoneOffset","daylightSavingAdjust","isToday","toDateString","inRange","isInRange","muted","compareSelect","firstDayOfMonth","showLabels","labels","flag","isTodayDisabled","isSelected","disabledDateRanges","months","$compareDate","lastDate","prototype","content","$popover","PopoverFactory","requestAnimationFrame","bsPopover","popover","calculateTotalPages","pageClass","totalPages","pagesLength","Math","itemsPerPage","makePage","number","text","isActive","max","getPages","currentPage","pages","half","ceil","$pagination","bsPaginationCtrl","page","selectPage","onChange","noPrevious","noNext","selectPrevious","backdrop","zIndex","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","$modal","unbindBackdropEvents","modalElement","hideOnBackdropClick","backdropElement","preventEventDefault","modalScope","setScrollBar","scrollDiv","scrollbarWidth","fullWindowWidth","documentElementRect","bodyIsOverflowing","window","innerWidth","resetScrollBar","abs","backdropBaseZindex","$show","destroyModalElement","z-index","defaultPrevented","customClass","minor","backdropAnimation","bindBackdropEvents","which","lg","sm","setTimeout","modalClass","bsModal","modal","dot","cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","rafSupported","raf","timer","cancel","supported","$parseOptions","$values","regexp","valueName","keyName","displayFn","valueFn","ParseOptionsFactory","groupByFn","displayValue","factory","offsetParent","docElement","ownerDocument","outer","getComputedStyle","extra","currentStyle","boxRect","style","curPosition","curLeft","curCSSTop","curTop","calculatePosition","curElem","curCSSLeft","curOffset","call","offsetParentRect","offsetParentEl","offsetParentElement","func","immediate","args","context","callNow","leading","wait","trailing","$localeProvider","milliseconds","ParseDate","noop","array","indexOfCaseInsensitive","str","toString","DateParserFactory","proto","isNumeric","toDate","regExpMap","sss","$locale","dateFilter","mm","literalRegex","formatParts","escapedLiteralFormat","dateElements","keys","escapedFormat","isFormatStringLiteral","part","trimLiteralEscapeChars","dateRegexParts","escapeReservedSymbols","re","abstractRegex","buildDateParseRegex","setMapForFormat","buildDateAbstractRegex","buildDateParseValuesMap","Object","valuesMatch","keyIndex","valueKey","valuesFunctionMap","valueFunction","valuesRegex","exec","setFnMap","setMap","HH","H","hh","h","EEEE","EEE","DATETIME_FORMATS","SHORTDAY","dd","MMMM","MMM","SHORTMONTH","MM","M","DAY","yyyy","yy","y","MONTH","ss","s","setDate","setMonth","regex","$format","regExpForFormat","baseDate","formatRegex","formatSetMap","fromDate","getTimeForAttribute","undo","getDefaultLocale","getDatetimeFormat","splitTimeFormat","service","bodyEl","matchesSelector","DropdownFactory","$dropdown","onBodyClick","items","parentEl","hasClass","tAttrs","nextSibling","nodeType","parentNode","removeChild","dropdown","$iconDown","weekDaysLabels","hourFormat","minuteFormat","secondFormat","step","timeTitleFormat","onKeyDown","actualTime","actualMonth","firstYear","years","actualYear","setYear","startView","hasToday","hasClear","DatetimepickerFactory","$datepicker","$iconLeft","$hasToday","$selectPane","$hasClear","$selectTime","selectTime","$toggleMode","setMode","$setToday","$clear","dateRanges","mode","getUTCMonth","shiftKey","altKey","datetimepickerViews","previousValue","normalizeDateRanges","ranges","disabledRanges","datepicker","parsedDate","disabledDates","DatepickerFactory","datepickerViews","concat","Array","duration","dismissible","AlertFactory","$alert","bsAlert","alert"],"mappings":"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","file":"angular-strap.min.js","sourcesContent":["(function(window, document, undefined) {\n'use strict';\n\n// Source: tooltip/tooltip.js\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      templateUrl: 'tooltip/tooltip.tpl.html',\n      template: '',\n      titleTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true,\n      mouseDownPreventDefault: true,\n      mouseDownStopPropagation: true,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory (element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        var promise = $tooltip.$promise = $bsCompiler.compile(options);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        var nodeName = element[0].nodeName.toLowerCase();\n        if (options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if (options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function (isEnabled) {\n          scope.$$postDigest(function () {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout;\n        var hoverState;\n\n        // Fetch, compile then initialize tooltip\n        var compileData;\n        var tipElement;\n        var tipContainer;\n        var tipScope;\n        promise.then(function (data) {\n          compileData = data;\n          $tooltip.init();\n        });\n\n        $tooltip.init = function () {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if (options.container === 'self') {\n            tipContainer = element;\n          } else if (angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if (options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if (options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              if (options.trigger === 'focus') {\n                element[0].focus();\n              } else {\n                $tooltip.show();\n              }\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function () {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function () {\n            if (hoverState === 'in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function () {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($tooltip);\n          }\n          var parent;\n          var after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if (tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = compileData.link(tipScope, function (clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', right: 'auto', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if (options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if (options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if (options.customClass) tipElement.addClass(options.customClass);\n\n          // Append the element, without any animations.  If we append\n          // using $animate.enter, some of the animations cause the placement\n          // to be off due to the transforms.\n          if (after) {\n            after.after(tipElement);\n          } else {\n            parent.prepend(tipElement);\n          }\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n\n          // Now, apply placement\n          $tooltip.$applyPlacement();\n\n          // Once placed, animate it.\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(tipElement, parent, after).then(enterAnimateCallback);\n          }\n          safeDigest(scope);\n\n          $$rAF(function () {\n            // Once the tooltip is placed and the animation starts, make the tooltip visible\n            if (tipElement) tipElement.css({visibility: 'visible'});\n\n            // Bind events\n            if (options.keyboard) {\n              if (options.trigger !== 'focus') {\n                $tooltip.focus();\n              }\n              bindKeyboardEvents();\n            }\n          });\n\n          if (options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($tooltip);\n          }\n        }\n\n        $tooltip.leave = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function (blur) {\n\n          if (!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($tooltip);\n          }\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(tipElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(tipElement).then(leaveAnimateCallback);\n          }\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if (options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if (options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($tooltip);\n          }\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if (_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function (evt) {\n          if (evt) { evt.preventDefault(); }\n          if ($tooltip.$isShown) {\n            $tooltip.leave();\n          } else {\n            $tooltip.enter();\n          }\n        };\n\n        $tooltip.focus = function () {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function (isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        $tooltip.setViewport = function (viewport) {\n          options.viewport = viewport;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function () {\n          if (!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement;\n          var autoToken = /\\s?auto?\\s?/i;\n          var autoPlace = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition();\n          var tipWidth = tipElement.prop('offsetWidth');\n          var tipHeight = tipElement.prop('offsetHeight');\n\n          // Refresh viewport position\n          $tooltip.$viewport = options.viewport && findElement(options.viewport.selector || options.viewport);\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var viewportPosition = getPosition($tooltip.$viewport);\n\n            if (/bottom/.test(originalPlacement) && elementPosition.bottom + tipHeight > viewportPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (/top/.test(originalPlacement) && elementPosition.top - tipHeight < viewportPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            if (/left/.test(originalPlacement) && elementPosition.left - tipWidth < viewportPosition.left) {\n              placement = placement.replace('left', 'right');\n            } else if (/right/.test(originalPlacement) && elementPosition.right + tipWidth > viewportPosition.width) {\n              placement = placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacement(tipPosition, placement);\n        };\n\n        $tooltip.$onKeyUp = function (evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function (evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function (evt) {\n          if (options.mouseDownPreventDefault) { evt.preventDefault(); }\n          if (options.mouseDownStopPropagation) { evt.stopPropagation(); }\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          if ($tooltip.$isShown) {\n            element[0].focus();\n            element[0].blur();\n          } else {\n            element[0].focus();\n          }\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function (trigger) {\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.on(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n\n              if (nodeName === 'button' && trigger !== 'hover' || (nodeName === 'input')) {\n                element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          });\n        }\n\n        function unbindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.off(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover' || (nodeName === 'input')) {\n                element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents () {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents () {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation (event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition ($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n          var isBody = el.tagName === 'BODY';\n\n          var elRect = el.getBoundingClientRect();\n          var rect = {};\n\n          // IE8 has issues with angular.extend and using elRect directly.\n          // By coping the values of elRect into a new object, we can continue to use extend\n          /* eslint-disable guard-for-in */\n          for (var p in elRect) { // eslint-disable-line\n            // DO NOT use hasOwnProperty when inspecting the return of getBoundingClientRect.\n            rect[p] = elRect[p];\n          }\n          /* eslint-enable guard-for-in */\n\n          if (rect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            rect = angular.extend({}, rect, {width: elRect.right - elRect.left, height: elRect.bottom - elRect.top});\n          }\n          var elOffset = isBody ? {top: 0, left: 0} : dimensions.offset(el);\n          var scroll = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.prop('scrollTop') || 0};\n          var outerDims = isBody ? {width: document.documentElement.clientWidth, height: $window.innerHeight} : null;\n\n          return angular.extend({}, rect, scroll, outerDims, elOffset);\n        }\n\n        function getCalculatedOffset (placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n            case 'right':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left + position.width\n              };\n              break;\n            case 'bottom':\n              offset = {\n                top: position.top + position.height,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n            case 'left':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left - actualWidth\n              };\n              break;\n            default:\n              offset = {\n                top: position.top - actualHeight,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n          }\n\n          if (!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if (split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n              case 'left':\n                offset.left = position.left;\n                break;\n              case 'right':\n                offset.left = position.left + position.width - actualWidth;\n                break;\n              default:\n                break;\n            }\n          } else if (split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n              case 'top':\n                offset.top = position.top - actualHeight + position.height;\n                break;\n              case 'bottom':\n                offset.top = position.top;\n                break;\n              default:\n                break;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacement (offset, placement) {\n          var tip = tipElement[0];\n          var width = tip.offsetWidth;\n          var height = tip.offsetHeight;\n\n          // manually read margins because getBoundingClientRect includes difference\n          var marginTop = parseInt(dimensions.css(tip, 'margin-top'), 10);\n          var marginLeft = parseInt(dimensions.css(tip, 'margin-left'), 10);\n\n          // we must check for NaN for ie 8/9\n          if (isNaN(marginTop)) marginTop = 0;\n          if (isNaN(marginLeft)) marginLeft = 0;\n\n          offset.top = offset.top + marginTop;\n          offset.left = offset.left + marginLeft;\n\n          // dimensions setOffset doesn't round pixel values\n          // so we use setOffset directly with our own function\n          dimensions.setOffset(tip, angular.extend({\n            using: function (props) {\n              tipElement.css({\n                top: Math.round(props.top) + 'px',\n                left: Math.round(props.left) + 'px',\n                right: ''\n              });\n            }\n          }, offset), 0);\n\n          // check to see if placing tip in new offset caused the tip to resize itself\n          var actualWidth = tip.offsetWidth;\n          var actualHeight = tip.offsetHeight;\n\n          if (placement === 'top' && actualHeight !== height) {\n            offset.top = offset.top + height - actualHeight;\n          }\n\n          // If it's an exotic placement, exit now instead of\n          // applying a delta and changing the arrow\n          if (/top-left|top-right|bottom-left|bottom-right/.test(placement)) return;\n\n          var delta = getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n\n          if (delta.left) {\n            offset.left += delta.left;\n          } else {\n            offset.top += delta.top;\n          }\n\n          dimensions.setOffset(tip, offset);\n\n          if (/top|right|bottom|left/.test(placement)) {\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n\n            replaceArrow(arrowDelta, tip[arrowOffsetPosition], isVertical);\n          }\n        }\n\n        // @source https://github.com/twbs/bootstrap/blob/v3.3.5/js/tooltip.js#L380\n        function getViewportAdjustedDelta (placement, position, actualWidth, actualHeight) {\n          var delta = {top: 0, left: 0};\n          if (!$tooltip.$viewport) return delta;\n\n          var viewportPadding = options.viewport && options.viewport.padding || 0;\n          var viewportDimensions = getPosition($tooltip.$viewport);\n\n          if (/right|left/.test(placement)) {\n            var topEdgeOffset = position.top - viewportPadding - viewportDimensions.scroll;\n            var bottomEdgeOffset = position.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\n              delta.top = viewportDimensions.top - topEdgeOffset;\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n              delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n            }\n          } else {\n            var leftEdgeOffset = position.left - viewportPadding;\n            var rightEdgeOffset = position.left + viewportPadding + actualWidth;\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n              delta.left = viewportDimensions.left - leftEdgeOffset;\n            } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n              delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n            }\n          }\n\n          return delta;\n        }\n\n        function replaceArrow (delta, dimension, isHorizontal) {\n          var $arrow = findElement('.tooltip-arrow, .arrow', tipElement[0]);\n\n          $arrow.css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n                .css(isHorizontal ? 'top' : 'left', '');\n        }\n\n        function destroyTipElement () {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if ($tooltip.$isShown && tipElement !== null) {\n            if (options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if (options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if (tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if (tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function ($window, $location, $sce, $parse, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        var tooltip;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'titleTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function (newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }\n        });\n\n        attr.$observe('disabled', function (newValue) {\n          if (newValue && tooltip.$isShown) {\n            tooltip.hide();\n          }\n        });\n\n        // Support scope as an object\n\n        if (attr.bsTooltip) {\n          scope.$watch(attr.bsTooltip, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.title = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n            if (newValue === true) {\n              tooltip.show();\n            } else {\n              tooltip.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n            if (newValue === false) {\n              tooltip.setEnabled(false);\n            } else {\n              tooltip.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            tooltip.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: timepicker/timepicker.js\nangular.module('mgcrea.ngStrap.timepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$timepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    defaultDate: 'auto',\n    prefixClass: 'timepicker',\n    placement: 'bottom-left',\n    templateUrl: 'timepicker/timepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: true,\n    timeType: 'date',\n    timeFormat: 'shortTime',\n    timezone: null,\n    modelTimeFormat: null,\n    autoclose: false,\n    minTime: -Infinity,\n    maxTime: +Infinity,\n    length: 5,\n    hourStep: 1,\n    minuteStep: 5,\n    secondStep: 5,\n    roundDisplay: false,\n    iconUp: 'nox-sort-up',\n    iconDown: 'nox-sort-down',\n    arrowBehavior: 'pager'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) {\n      defaults.lang = $dateFormatter.getDefaultLocale();\n    }\n    function timepickerFactory(element, controller, config) {\n      var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $timepicker.$options;\n      var scope = $timepicker.$scope;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      function floorMinutes(time) {\n        var coeff = 1e3 * 60 * options.minuteStep;\n        return new Date(Math.floor(time.getTime() / coeff) * coeff);\n      }\n      var selectedIndex = 0;\n      var defaultDate = options.roundDisplay ? floorMinutes(new Date()) : new Date();\n      var startDate = controller.$dateValue || defaultDate;\n      var viewDate = {\n        hour: startDate.getHours(),\n        meridian: startDate.getHours() < 12,\n        minute: startDate.getMinutes(),\n        second: startDate.getSeconds(),\n        millisecond: startDate.getMilliseconds()\n      };\n      var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n      var hoursFormat = $dateFormatter.hoursFormat(format);\n      var timeSeparator = $dateFormatter.timeSeparator(format);\n      var minutesFormat = $dateFormatter.minutesFormat(format);\n      var secondsFormat = $dateFormatter.secondsFormat(format);\n      var showSeconds = $dateFormatter.showSeconds(format);\n      var showAM = $dateFormatter.showAM(format);\n      scope.$iconUp = options.iconUp;\n      scope.$iconDown = options.iconDown;\n      scope.$select = function(date, index) {\n        $timepicker.select(date, index);\n      };\n      scope.$moveIndex = function(value, index) {\n        $timepicker.$moveIndex(value, index);\n      };\n      scope.$switchMeridian = function(date) {\n        $timepicker.switchMeridian(date);\n      };\n      $timepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $timepicker.$date = date;\n          angular.extend(viewDate, {\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            millisecond: date.getMilliseconds()\n          });\n          $timepicker.$build();\n        } else if (!$timepicker.$isBuilt) {\n          $timepicker.$build();\n        }\n      };\n      $timepicker.select = function(date, index, keep) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          controller.$dateValue = options.defaultDate === 'today' ? new Date() : new Date(1970, 0, 1);\n        }\n        if (!angular.isDate(date)) date = new Date(date);\n        if (index === 0) controller.$dateValue.setHours(date.getHours()); else if (index === 1) controller.$dateValue.setMinutes(date.getMinutes()); else if (index === 2) controller.$dateValue.setSeconds(date.getSeconds());\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n        if (options.autoclose && !keep) {\n          $timeout(function() {\n            $timepicker.hide(true);\n          });\n        }\n      };\n      $timepicker.switchMeridian = function(date) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          return;\n        }\n        var hours = (date || controller.$dateValue).getHours();\n        controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n      };\n      $timepicker.$build = function() {\n        var i;\n        var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n        var hours = [];\n        var hour;\n        for (i = 0; i < options.length; i++) {\n          hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n          hours.push({\n            date: hour,\n            label: formatDate(hour, hoursFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n            disabled: $timepicker.$isDisabled(hour, 0)\n          });\n        }\n        var minutes = [];\n        var minute;\n        for (i = 0; i < options.length; i++) {\n          minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n          minutes.push({\n            date: minute,\n            label: formatDate(minute, minutesFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(minute, 1),\n            disabled: $timepicker.$isDisabled(minute, 1)\n          });\n        }\n        var seconds = [];\n        var second;\n        for (i = 0; i < options.length; i++) {\n          second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n          seconds.push({\n            date: second,\n            label: formatDate(second, secondsFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(second, 2),\n            disabled: $timepicker.$isDisabled(second, 2)\n          });\n        }\n        var rows = [];\n        for (i = 0; i < options.length; i++) {\n          if (showSeconds) {\n            rows.push([ hours[i], minutes[i], seconds[i] ]);\n          } else {\n            rows.push([ hours[i], minutes[i] ]);\n          }\n        }\n        scope.rows = rows;\n        scope.showSeconds = showSeconds;\n        scope.showAM = showAM;\n        scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n        scope.timeSeparator = timeSeparator;\n        $timepicker.$isBuilt = true;\n      };\n      $timepicker.$isSelected = function(date, index) {\n        if (!$timepicker.$date) return false; else if (index === 0) {\n          return date.getHours() === $timepicker.$date.getHours();\n        } else if (index === 1) {\n          return date.getMinutes() === $timepicker.$date.getMinutes();\n        } else if (index === 2) {\n          return date.getSeconds() === $timepicker.$date.getSeconds();\n        }\n      };\n      $timepicker.$isDisabled = function(date, index) {\n        var selectedTime;\n        if (index === 0) {\n          selectedTime = date.getTime() + viewDate.minute * 6e4 + viewDate.second * 1e3;\n        } else if (index === 1) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.second * 1e3;\n        } else if (index === 2) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.minute * 6e4;\n        }\n        return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n      };\n      scope.$arrowAction = function(value, index) {\n        if (options.arrowBehavior === 'picker') {\n          $timepicker.$setTimeByStep(value, index);\n        } else {\n          $timepicker.$moveIndex(value, index);\n        }\n      };\n      $timepicker.$setTimeByStep = function(value, index) {\n        var newDate = new Date($timepicker.$date || startDate);\n        var hours = newDate.getHours();\n        var minutes = newDate.getMinutes();\n        var seconds = newDate.getSeconds();\n        if (index === 0) {\n          newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n        } else if (index === 1) {\n          newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n        } else if (index === 2) {\n          newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n        }\n        $timepicker.select(newDate, index, true);\n      };\n      $timepicker.$moveIndex = function(value, index) {\n        var targetDate;\n        if (index === 0) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n          angular.extend(viewDate, {\n            hour: targetDate.getHours()\n          });\n        } else if (index === 1) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n          angular.extend(viewDate, {\n            minute: targetDate.getMinutes()\n          });\n        } else if (index === 2) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n          angular.extend(viewDate, {\n            second: targetDate.getSeconds()\n          });\n        }\n        $timepicker.$build();\n      };\n      $timepicker.$onMouseDown = function(evt) {\n        if (evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $timepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          $timepicker.hide(true);\n          return;\n        }\n        var newDate = new Date($timepicker.$date);\n        var hours = newDate.getHours();\n        var hoursLength = formatDate(newDate, hoursFormat).length;\n        var minutes = newDate.getMinutes();\n        var minutesLength = formatDate(newDate, minutesFormat).length;\n        var seconds = newDate.getSeconds();\n        var secondsLength = formatDate(newDate, secondsFormat).length;\n        var sepLength = 1;\n        var lateralMove = /(37|39)/.test(evt.keyCode);\n        var count = 2 + showSeconds * 1 + showAM * 1;\n        if (lateralMove) {\n          if (evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1; else if (evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n        }\n        var selectRange = [ 0, hoursLength ];\n        var incr = 0;\n        if (evt.keyCode === 38) incr = -1;\n        if (evt.keyCode === 40) incr = +1;\n        var isSeconds = selectedIndex === 2 && showSeconds;\n        var isMeridian = selectedIndex === 2 && !showSeconds || selectedIndex === 3 && showSeconds;\n        if (selectedIndex === 0) {\n          newDate.setHours(hours + incr * parseInt(options.hourStep, 10));\n          hoursLength = formatDate(newDate, hoursFormat).length;\n          selectRange = [ 0, hoursLength ];\n        } else if (selectedIndex === 1) {\n          newDate.setMinutes(minutes + incr * parseInt(options.minuteStep, 10));\n          minutesLength = formatDate(newDate, minutesFormat).length;\n          selectRange = [ hoursLength + sepLength, minutesLength ];\n        } else if (isSeconds) {\n          newDate.setSeconds(seconds + incr * parseInt(options.secondStep, 10));\n          secondsLength = formatDate(newDate, secondsFormat).length;\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength, secondsLength ];\n        } else if (isMeridian) {\n          if (!lateralMove) $timepicker.switchMeridian();\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength + (secondsLength + sepLength) * showSeconds, 2 ];\n        }\n        $timepicker.select(newDate, selectedIndex, true);\n        createSelection(selectRange[0], selectRange[1]);\n        parentScope.$digest();\n      };\n      function createSelection(start, length) {\n        var end = start + length;\n        if (element[0].createTextRange) {\n          var selRange = element[0].createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end);\n          selRange.select();\n        } else if (element[0].setSelectionRange) {\n          element[0].setSelectionRange(start, end);\n        } else if (angular.isUndefined(element[0].selectionStart)) {\n          element[0].selectionStart = start;\n          element[0].selectionEnd = end;\n        }\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $timepicker.init;\n      $timepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'time');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $timepicker.destroy;\n      $timepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $timepicker.show;\n      $timepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if ($timepicker.$element) $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if (options.keyboard) {\n            if (element) element.on('keydown', $timepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $timepicker.hide;\n      $timepicker.hide = function(blur) {\n        if (!$timepicker.$isShown) return;\n        if ($timepicker.$element) $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n        if (options.keyboard) {\n          if (element) element.off('keydown', $timepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $timepicker;\n    }\n    timepickerFactory.defaults = defaults;\n    return timepickerFactory;\n  } ];\n}).directive('bsTimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$timepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n  var defaults = $timepicker.defaults;\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'autoclose', 'timeType', 'timeFormat', 'timezone', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'secondStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'roundDisplay', 'id', 'prefixClass', 'prefixEvent', 'defaultDate' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'roundDisplay' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      if (isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n      var timepicker = $timepicker(element, controller, options);\n      options = timepicker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!timepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          if (newValue === true) {\n            timepicker.show();\n          } else {\n            timepicker.hide();\n          }\n        });\n      }\n      var dateParser = $dateParser({\n        format: options.timeFormat,\n        lang: lang\n      });\n      angular.forEach([ 'minTime', 'maxTime' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            if (!isNaN(timepicker.$options[key])) timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        }\n      });\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        timepicker.update(controller.$dateValue);\n      }, true);\n      function validateAgainstMinMaxTime(parsedTime) {\n        if (!angular.isDate(parsedTime)) return;\n        var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n        var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (!isValid) {\n          return;\n        }\n        controller.$dateValue = parsedTime;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedTime || isNaN(parsedTime.getTime())) {\n          controller.$setValidity('date', false);\n          return undefined;\n        }\n        validateAgainstMinMaxTime(parsedTime);\n        if (options.timeType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedTime, options.timezone, true);\n          return formatDate(date, options.modelTimeFormat || options.timeFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.timeType === 'number') {\n          return date.getTime();\n        } else if (options.timeType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.timeType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.timeType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n        } else if (options.timeType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getTimeFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getTimeFormattedString());\n      };\n      function getTimeFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (timepicker) timepicker.destroy();\n        options = null;\n        timepicker = null;\n      });\n    }\n  };\n} ]);\n\n// Source: tab/tab.js\nangular.module('mgcrea.ngStrap.tab', []).provider('$tab', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    template: 'tab/tab.tpl.html',\n    navClass: 'nav-tabs',\n    activeClass: 'active'\n  };\n  var controller = this.controller = function($scope, $element, $attrs) {\n    var self = this;\n    self.$options = angular.copy(defaults);\n    angular.forEach([ 'animation', 'navClass', 'activeClass' ], function(key) {\n      if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n    });\n    $scope.$navClass = self.$options.navClass;\n    $scope.$activeClass = self.$options.activeClass;\n    self.$panes = $scope.$panes = [];\n    self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n    self.$push = function(pane) {\n      if (angular.isUndefined(self.$panes.$active)) {\n        $scope.$setActive(pane.name || 0);\n      }\n      self.$panes.push(pane);\n    };\n    self.$remove = function(pane) {\n      var index = self.$panes.indexOf(pane);\n      var active = self.$panes.$active;\n      var activeIndex;\n      if (angular.isString(active)) {\n        activeIndex = self.$panes.map(function(pane) {\n          return pane.name;\n        }).indexOf(active);\n      } else {\n        activeIndex = self.$panes.$active;\n      }\n      self.$panes.splice(index, 1);\n      if (index < activeIndex) {\n        activeIndex--;\n      } else if (index === activeIndex && activeIndex === self.$panes.length) {\n        activeIndex--;\n      }\n      if (activeIndex >= 0 && activeIndex < self.$panes.length) {\n        self.$setActive(self.$panes[activeIndex].name || activeIndex);\n      } else {\n        self.$setActive();\n      }\n    };\n    self.$setActive = $scope.$setActive = function(value) {\n      self.$panes.$active = value;\n      self.$activePaneChangeListeners.forEach(function(fn) {\n        fn();\n      });\n    };\n    self.$isActive = $scope.$isActive = function($pane, $index) {\n      return self.$panes.$active === $pane.name || self.$panes.$active === $index;\n    };\n  };\n  this.$get = function() {\n    var $tab = {};\n    $tab.defaults = defaults;\n    $tab.controller = controller;\n    return $tab;\n  };\n}).directive('bsTabs', [ '$window', '$animate', '$tab', '$parse', function($window, $animate, $tab, $parse) {\n  var defaults = $tab.defaults;\n  return {\n    require: [ '?ngModel', 'bsTabs' ],\n    transclude: true,\n    scope: true,\n    controller: [ '$scope', '$element', '$attrs', $tab.controller ],\n    templateUrl: function(element, attr) {\n      return attr.template || defaults.template;\n    },\n    link: function postLink(scope, element, attrs, controllers) {\n      var ngModelCtrl = controllers[0];\n      var bsTabsCtrl = controllers[1];\n      if (ngModelCtrl) {\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n        });\n        ngModelCtrl.$formatters.push(function(modelValue) {\n          bsTabsCtrl.$setActive(modelValue);\n          return modelValue;\n        });\n      }\n      if (attrs.bsActivePane) {\n        var parsedBsActivePane = $parse(attrs.bsActivePane);\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n        });\n        scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n          bsTabsCtrl.$setActive(newValue);\n        }, true);\n      }\n    }\n  };\n} ]).directive('bsPane', [ '$window', '$animate', '$sce', function($window, $animate, $sce) {\n  return {\n    require: [ '^?ngModel', '^bsTabs' ],\n    scope: true,\n    link: function postLink(scope, element, attrs, controllers) {\n      var bsTabsCtrl = controllers[1];\n      element.addClass('tab-pane');\n      attrs.$observe('title', function(newValue, oldValue) {\n        scope.title = $sce.trustAsHtml(newValue);\n      });\n      scope.name = attrs.name;\n      scope.link = attrs.link ? attrs.link : false;\n      if (bsTabsCtrl.$options.animation) {\n        element.addClass(bsTabsCtrl.$options.animation);\n      }\n      attrs.$observe('disabled', function(newValue, oldValue) {\n        scope.disabled = scope.$eval(newValue);\n      });\n      bsTabsCtrl.$push(scope);\n      scope.$on('$destroy', function() {\n        bsTabsCtrl.$remove(scope);\n      });\n      function render() {\n        var index = bsTabsCtrl.$panes.indexOf(scope);\n        $animate[bsTabsCtrl.$isActive(scope, index) ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n      }\n      bsTabsCtrl.$activePaneChangeListeners.push(function() {\n        render();\n      });\n      render();\n    }\n  };\n} ]);\n\n// Source: sort/sort.js\nangular.module('mgcrea.ngStrap.sort', []).directive('bsSort', [function() {\n  return {\n    scope: true,\n    compile: function (element, attrs) {\n      var list = element[0].querySelectorAll('th');\n      for (var i = 0, len = list.length; i < len; i++) {\n        var item = list[i];\n        item = angular.element(item);\n        var sortable = item.attr('data-sortable');\n        if (sortable && sortable !== 'false') {\n          var dataName = item.attr('data-name');\n          item.append('<div class=\"sorter\"><i class=\"nox-sort-up sort-asc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'asc\\'}\"></i><i class=\"nox-sort-down sort-desc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'desc\\'}\"></i></div>');\n        }\n      }\n\n      return function postLink (scope, element, attrs) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['onSort'], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        if (angular.isDefined(attrs.totalItems)) {\n          attrs.$observe('totalItems', function (newValue) {\n            options.totalItems = newValue;\n          });\n        }\n        // 初始化排序\n        angular.forEach([ 'orderBy', 'sortBy' ], function(key) {\n          if (angular.isDefined(attrs[key])) {\n            scope[key] = scope.$eval(attrs[key]);\n          }\n        });\n\n        element.on('click', 'th', function (event) {\n          var target = angular.element(event.currentTarget);\n          var sortable = target.attr('data-sortable');\n          if (sortable && sortable !== 'false') {\n            clickColumn(event);\n          }\n        });\n        function clickColumn (event) {\n          if (options.totalItems === -1) {\n            return;\n          }\n          var target = angular.element(event.currentTarget);\n          var dataName = target.attr('data-name');\n          if (dataName === scope.orderBy) {\n            scope.sortBy = scope.sortBy === 'asc' ? 'desc' : 'asc';\n          } else {\n            scope.orderBy = dataName;\n            scope.sortBy = 'desc';\n          }\n          scope.$apply();\n\n          if (angular.isDefined(options.onSort) && angular.isFunction(options.onSort)) {\n            options.onSort(scope.orderBy, scope.sortBy);\n          }\n        }\n      };\n    }\n  };\n}]);\n\n// Source: select/select.js\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      autoClose: false,\n      search: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"select-arrow\"><i class=\"nox-sort-down\"></i></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$showSearch = options.search; // 单选复选都可以search\n        // scope.$trigger = options.search?true:false;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$searchText = '';\n\n\n        scope.$changeSearchText = function (evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n\n        };\n        scope.$close = function () {\n          scope.$$postDigest(function () {\n            $select.hide(true);\n          });\n        };\n        scope.$searchTextChange = function (evt) {\n          scope.searchText = evt.searchText;\n\n        };\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index, evt);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index, evt) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n          // scope.searchText = '';\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          // Emulate click for mobile devices\n          evt.preventDefault(true);\n          evt.stopPropagation(true);\n\n          if (evt.target.getAttribute('role') === 'search') {\n            evt.target.focus();\n            scope.searchText = '';\n          }\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          } else {\n            // console.log('no touch');\n          }\n\n\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n            if (options.trigger === 'focus') {\n              $select.$element.find('input').on('blur', function () {\n                $select.hide();\n              });\n            }\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function (blur) {\n          $timeout(function () {\n            if (!blur && options.trigger === 'focus' && document.activeElement.getAttribute('role') === 'search') {\n              return;\n            }\n            if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n              scope.$activeIndex = -1;\n            }\n            if (options.search) {\n              // search 清空\n              scope.searchText = '';\n              // return;\n            }\n            $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.off('keydown', $select.$onKeyDown);\n            }\n            _hide(true);\n          });\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id',\n          'sort', 'search', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort', 'search'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // search\n        var dataSearch = element.attr('data-search');\n        if (angular.isDefined(dataSearch)) {\n          if (falseValueRegExp.test(dataSearch)) {\n            options.search = false;\n          } else {\n            options.search = dataSearch;\n            scope.searchText = '';\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  })\n  .filter('searchFilter', function () {\n    return function (collection, keyname, value) {\n      var output = [];\n      angular.forEach(collection, function (item) {\n        // 过滤数组中值与指定值相同的元素\n        if (item[keyname].toLowerCase().indexOf(value.toLowerCase()) > -1) {\n          output.push(item);\n        }\n      });\n      return output;\n    };\n  });\n\n// Source: rangedatepicker/rangedatepicker.js\n/**\n * Created by xiashan on 17/5/12.\n */\n\nangular.module('mgcrea.ngStrap.rangedatepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ])\n  .provider('$rangedatepicker', function () {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'rangedatepicker',\n      placement: 'bottom-left',\n      templateUrl: 'rangedatepicker/rangedatepicker.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      connector: ' / ',\n      dateType: 'date',\n      dateFormat: 'yyyy-MM-dd',\n      timezone: null,\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      compare: true\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'rangedatepickerViews', '$tooltip', '$timeout',\n      function ($window, $document, $rootScope, $sce, $dateFormatter, rangedatepickerViews, $tooltip, $timeout) {\n        var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n        var isTouch = 'createTouch' in $window.document && isNative;\n        if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n        function RangeDatepickerFactory (element, controller, config) {\n          var $rangedatepicker = $tooltip(element, angular.extend({}, defaults, config));\n          var options = $rangedatepicker.$options;\n          var scope = $rangedatepicker.$scope;\n          var pickerViews = rangedatepickerViews($rangedatepicker);\n          $rangedatepicker.$views = pickerViews.views;\n          var viewDate = pickerViews.viewDate;\n          scope.$mode = options.minView;\n          scope.$iconLeft = options.iconLeft;\n          scope.$iconRight = options.iconRight;\n          scope.$compare = options.compare;\n          var $picker = $rangedatepicker.$views[0];\n          scope.rangeList = $picker.rangeList;\n\n          var today = new Date();\n          $rangedatepicker.$today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\n          // 区间\n          scope.ctrl = {\n            rangeType: '',\n            compare: ''\n          };\n\n          scope.$select = function (date, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.select(date, index);\n          };\n          scope.$selectPane = function (value, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.$selectPane(value, index);\n          };\n          scope.$selectRange = function (type) {\n            if (type === scope.ctrl.rangeType || scope.ctrl.compare) {\n              return;\n            }\n            $rangedatepicker.$selectRange(type);\n            $rangedatepicker.hide(true);\n          };\n          scope.$toggleCompare = function () {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            // 只变更了勾选compare\n            modelValue.onlyCompare = true;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n          };\n          scope.$closePicker = function () {\n            $rangedatepicker.hide();\n          };\n          scope.$stopPropagation = function (evt) {\n            evt.stopPropagation();\n          };\n\n          $rangedatepicker.update = function (sDate, eDate, force) {\n            if (angular.isDate(sDate) && !isNaN(sDate.getTime()) && angular.isDate(eDate) && !isNaN(eDate.getTime())) {\n              if (!scope.ctrl.compare) {\n                $rangedatepicker.$date = [sDate, eDate];\n              } else {\n                $rangedatepicker.$compareDate = [sDate, eDate];\n              }\n              $picker.update.call($picker, sDate, eDate);\n            } else {\n              $rangedatepicker.$build(!force);\n            }\n          };\n          $rangedatepicker.updateDisabledDates = function (dateRanges) {\n            options.disabledDateRanges = dateRanges;\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], $rangedatepicker.$setDisabledEl);\n            }\n          };\n          $rangedatepicker.select = function (date, index, keep) {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            if (!scope.ctrl.compare) {\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$dateValue[index]) || isNaN(controller.$dateValue[index].getTime())) {\n                  controller.$dateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$dateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.startDate = angular.copy(date);\n              } else {\n                modelValue.endDate = angular.copy(date);\n              }\n            } else {\n              controller.$compareDateValue = !controller.$compareDateValue ? [] : controller.$compareDateValue;\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$compareDateValue[index]) || isNaN(controller.$compareDateValue[index].getTime())) {\n                  controller.$compareDateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$compareDateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.compareStartDate = angular.copy(date);\n              } else {\n                modelValue.compareEndDate = angular.copy(date);\n              }\n            }\n            modelValue.onlyCompare = false;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n            if (options.autoclose && !keep) {\n              $timeout(function () {\n                $rangedatepicker.hide(true);\n              });\n            }\n          };\n          $rangedatepicker.$getCompare = function () {\n            return scope.ctrl && scope.ctrl.compare;\n          };\n          $rangedatepicker.$setCompare = function () {\n            scope.ctrl && (scope.ctrl.compare = 'compare');\n          };\n          $rangedatepicker.$build = function (pristine) {\n            if (pristine === true && $picker.built) return;\n            if (pristine === false && !$picker.built) return;\n            $picker.build.call($picker, $rangedatepicker.$date);\n          };\n          $rangedatepicker.$updateSelected = function () {\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], updateSelected);\n            }\n          };\n          $rangedatepicker.$isSelected = function (date) {\n            return $picker.isSelected(date);\n          };\n          $rangedatepicker.$setDisabledEl = function (el) {\n            el.disabled = $picker.isDisabled(el.date);\n          };\n          $rangedatepicker.$selectPane = function (value, index) {\n            var steps = $picker.steps;\n            var key = (index === 0) ? 'startDate' : 'endDate';\n            var targetDate = new Date(Date.UTC(viewDate[key].year + (steps.year || 0) * value, viewDate[key].month + (steps.month || 0) * value, 1));\n            angular.extend(viewDate[key], {\n              year: targetDate.getUTCFullYear(),\n              month: targetDate.getUTCMonth(),\n              date: targetDate.getUTCDate()\n            });\n            $rangedatepicker.$build();\n          };\n          $rangedatepicker.$selectRange = function (type) {\n            var cate = type.substr(-1);\n            var value = parseInt(type.substr(0, type.length - 1), 10);\n            var endDate = $rangedatepicker.$today;\n            var startDate;\n            switch (cate) {\n              case 'd':\n                if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value + 1);\n                  if (value === -2) {\n                    endDate = startDate;\n                  }\n                } else {\n                  startDate = endDate;\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value);\n                }\n                break;\n              case 'w':\n                var day = endDate.getDay();\n                if (value <= 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (day * -1 + 1));\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + (day * -1));\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + 7 - day + 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (7 - day));\n                }\n                break;\n              case 'm':\n                if (value === 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n                } else if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + value, 1);\n                  // 一月一月的看，并不做区间\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                }\n                break;\n              default:\n                break;\n            }\n            if (angular.isDate(startDate) && angular.isDate(endDate)) {\n              controller.$dateValue[0] = angular.copy(startDate);\n              controller.$dateValue[1] = angular.copy(endDate);\n              var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n              modelValue.startDate = angular.copy(startDate);\n              modelValue.endDate = angular.copy(endDate);\n              modelValue.onlyCompare = false;\n              controller.$setViewValue(modelValue);\n              controller.$render();\n              scope.ctrl.rangeType = type;\n            }\n          };\n          $rangedatepicker.$onMouseDown = function (evt) {\n            evt.preventDefault(true);\n            evt.stopPropagation(true);\n            var targetEl = angular.element(evt.target);\n            if (isTouch) {\n              if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n                targetEl = targetEl.parent();\n              }\n              targetEl.triggerHandler('click');\n            }\n          };\n          function updateSelected (el) {\n            el.selected = $rangedatepicker.$isSelected(el.date);\n          }\n          function focusElement () {\n            element[0].focus();\n          }\n          var _init = $rangedatepicker.init;\n          $rangedatepicker.init = function () {\n            if (isNative && options.useNative) {\n              element.prop('type', 'date');\n              element.css('-webkit-appearance', 'textfield');\n              return;\n            } else if (isTouch) {\n              element.prop('type', 'text');\n              element.attr('readonly', 'true');\n              element.on('click', focusElement);\n            }\n            _init();\n          };\n          var _destroy = $rangedatepicker.destroy;\n          $rangedatepicker.destroy = function () {\n            if (isNative && options.useNative) {\n              element.off('click', focusElement);\n            }\n            _destroy();\n          };\n          var _show = $rangedatepicker.show;\n          $rangedatepicker.show = function () {\n            // if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n            if (element.attr('disabled')) return;\n            _show();\n            $timeout(function () {\n              if (!$rangedatepicker.$isShown) return;\n              $rangedatepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            }, 0, false);\n          };\n          var _hide = $rangedatepicker.hide;\n          $rangedatepicker.hide = function (blur) {\n            if (!$rangedatepicker.$isShown) return;\n            $rangedatepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            _hide(blur);\n          };\n          return $rangedatepicker;\n        }\n        RangeDatepickerFactory.defaults = defaults;\n        return RangeDatepickerFactory;\n      }];\n  })\n  .directive('bsRangedatepicker', ['$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$rangedatepicker',\n    function ($window, $parse, $q, $dateFormatter, $dateParser, $rangedatepicker) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      return {\n        restrict: 'EAC',\n        require: 'ngModel',\n        link: function postLink (scope, element, attr, controller) {\n          var options = {\n            scope: scope\n          };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'connector', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'compare'], function (key) {\n            if (angular.isDefined(attr[key])) options[key] = attr[key];\n          });\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container', 'autoclose', 'useNative', 'compare'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n              options[key] = false;\n            }\n          });\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n          var rangedatepicker = $rangedatepicker(element, controller, options);\n          options = rangedatepicker.$options;\n          if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n          var lang = options.lang;\n          var formatDate = function (date, format) {\n            return $dateFormatter.formatDate(date, format, lang);\n          };\n          var dateParser = $dateParser({\n            format: options.dateFormat,\n            lang: lang,\n            strict: options.strictFormat\n          });\n          angular.forEach(['minDate', 'maxDate'], function (key) {\n            if (angular.isDefined(attr[key])) {\n              attr.$observe(key, function (newValue) {\n                rangedatepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n                if (!isNaN(rangedatepicker.$options[key])) {\n                  rangedatepicker.$build(false);\n                }\n                // if (controller.$dateValue) {\n                //   validateAgainstMinMaxDate(controller.$dateValue[0], controller.$dateValue[1]);\n                // }\n              });\n            }\n          });\n          if (angular.isDefined(attr.dateFormat)) {\n            attr.$observe('dateFormat', function (newValue) {\n              rangedatepicker.$options.dateFormat = newValue;\n            });\n          }\n          scope.$watch(attr.ngModel, function (newValue, oldValue) {\n            if (newValue && newValue.onlyCompare) {\n              rangedatepicker.update(null, null, true);\n            } else if (rangedatepicker.$getCompare()) {\n              rangedatepicker.$date = [controller.$dateValue[0], controller.$dateValue[1]];\n              rangedatepicker.update(controller.$compareDateValue[0], controller.$compareDateValue[1]);\n            } else {\n              rangedatepicker.update(controller.$dateValue[0], controller.$dateValue[1]);\n            }\n          }, true);\n\n          function getFormattedDate (modelValue) {\n            var date;\n            if (angular.isDate(modelValue)) {\n              date = modelValue;\n            } else if (options.dateType === 'string') {\n              date = dateParser.parse(modelValue, null, options.modelDateFormat);\n            } else if (options.dateType === 'unix') {\n              date = new Date(modelValue * 1e3);\n            } else {\n              date = new Date(modelValue);\n            }\n            return date;\n          }\n          function validateAgainstMinMaxDate (parsedDate1, parsedDate2) {\n            if (!angular.isDate(parsedDate1) || !angular.isDate(parsedDate2)) {\n              return false;\n            }\n            var isMinValid = isNaN(rangedatepicker.$options.minDate) || parsedDate1.getTime() >= rangedatepicker.$options.minDate;\n            var isMaxValid = isNaN(rangedatepicker.$options.maxDate) || parsedDate2.getTime() <= rangedatepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            var compare = rangedatepicker.$getCompare();\n            if (isValid) {\n              if (compare) {\n                controller.$compareDateValue[0] = parsedDate1;\n                controller.$compareDateValue[1] = parsedDate2;\n              } else {\n                controller.$dateValue[0] = parsedDate1;\n                controller.$dateValue[1] = parsedDate2;\n              }\n            }\n            return true;\n          }\n          controller.$parsers.unshift(function (viewValue) {\n            var compare = rangedatepicker.$getCompare();\n            if (!viewValue) {\n              controller.$setValidity('date', true);\n              return null;\n            }\n            if (viewValue.onlyCompare) {\n              viewValue.compare = compare;\n              return viewValue;\n            }\n            var parsedDate1;\n            var parsedDate2;\n            if (compare) {\n              parsedDate1 = dateParser.parse(viewValue.compareStartDate, controller.$compareDateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.compareEndDate, controller.$compareDateValue[1]);\n            } else {\n              parsedDate1 = dateParser.parse(viewValue.startDate, controller.$dateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.endDate, controller.$dateValue[1]);\n            }\n            if (parsedDate1 && !parsedDate2) {\n              parsedDate2 = angular.copy(parsedDate1);\n            }\n            if (!parsedDate1 && parsedDate2) {\n              parsedDate1 = angular.copy(parsedDate2);\n            }\n            if (!parsedDate1 || isNaN(parsedDate1.getTime()) || !parsedDate2 || isNaN(parsedDate2.getTime())) {\n              controller.$setValidity('date', false);\n              return false;\n            }\n            validateAgainstMinMaxDate(parsedDate1, parsedDate2);\n            var obj = {\n              dateRange: viewValue.dateRange,\n              compare: compare\n            };\n            var skey = '';\n            var ekey = '';\n            if (compare) {\n              // 原对比日期需要显示，因此这里还是要赋值\n              obj.startDate = viewValue.startDate;\n              obj.endDate = viewValue.endDate;\n              skey = 'compareStartDate';\n              ekey = 'compareEndDate';\n            } else {\n              obj.compareStartDate = viewValue.compareStartDate;\n              obj.compareEndDate = viewValue.compareEndDate;\n              skey = 'startDate';\n              ekey = 'endDate';\n            }\n            if (options.dateType === 'string') {\n              obj[skey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate1, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              obj[ekey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate2, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              return obj;\n            }\n            var date1;\n            var date2;\n            if (compare) {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[1], options.timezone, true);\n            } else {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$dateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$dateValue[1], options.timezone, true);\n            }\n            if (options.dateType === 'number') {\n              obj[skey] = date1.getTime();\n              obj[ekey] = date2.getTime();\n            } else if (options.dateType === 'unix') {\n              obj[skey] = date1.getTime() / 1e3;\n              obj[ekey] = date2.getTime() / 1e3;\n            } else if (options.dateType === 'iso') {\n              obj[skey] = date1.toISOString();\n              obj[ekey] = date2.toISOString();\n            } else {\n              obj[skey] = new Date(date1);\n              obj[ekey] = new Date(date2);\n            }\n            return obj;\n          });\n          controller.$formatters.push(function (modelValue) {\n            if (angular.isUndefined(modelValue) || modelValue === null) {\n              return '';\n            }\n            if (modelValue.dateRange) {\n              controller.$dateRange = modelValue.dateRange;\n              controller.$dateValue = !controller.$dateValue ? [] : controller.$dateValue;\n              rangedatepicker.$selectRange(controller.$dateRange);\n            } else {\n              controller.$dateValue = [];\n              controller.$compareDateValue = [];\n              if (modelValue.startDate && modelValue.endDate) {\n                var startDate = getFormattedDate(modelValue.startDate);\n                var endDate = getFormattedDate(modelValue.endDate);\n                controller.$dateValue = [dateParser.timezoneOffsetAdjust(startDate, options.timezone), dateParser.timezoneOffsetAdjust(endDate, options.timezone)];\n              }\n              if (modelValue.compareStartDate && modelValue.compareEndDate) {\n                var compareStartDate = getFormattedDate(modelValue.compareStartDate);\n                var compareEndDate = getFormattedDate(modelValue.compareEndDate);\n                controller.$compareDateValue = [dateParser.timezoneOffsetAdjust(compareStartDate, options.timezone), dateParser.timezoneOffsetAdjust(compareEndDate, options.timezone)];\n                if (modelValue.compare) {\n                  rangedatepicker.$setCompare();\n                }\n              }\n            }\n            return getDateFormattedString();\n          });\n          controller.$render = function () {\n            element.val(getDateFormattedString());\n          };\n          function getDateFormattedString () {\n            if (!controller.$modelValue || !controller.$modelValue.startDate || isNaN(controller.$modelValue.startDate.getTime())) {\n              return '';\n            }\n            var html = formatDate(controller.$modelValue.startDate, options.dateFormat);\n            if (controller.$modelValue.compare && controller.$modelValue.compareStartDate && !isNaN(controller.$modelValue.compareStartDate.getTime())) {\n              html += ' vs ' + formatDate(controller.$modelValue.compareStartDate, options.dateFormat);\n            } else if (!controller.$modelValue.compare && controller.$modelValue.endDate && !isNaN(controller.$modelValue.endDate.getTime())) {\n              html += ' / ' + formatDate(controller.$modelValue.endDate, options.dateFormat);\n            }\n            return html;\n          }\n          scope.$on('$destroy', function () {\n            if (rangedatepicker) rangedatepicker.destroy();\n            options = null;\n            rangedatepicker = null;\n          });\n        }\n      };\n    }])\n  .provider('rangedatepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      return function (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = (picker.$date && picker.$date[0]) || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var endDate = (picker.$date && picker.$date[1]) || (options.endDate ? dateParser.getDateForAttribute('endDate', options.endDate) : new Date());\n        var viewDate = {\n          startDate: {\n            year: startDate.getFullYear(),\n            month: startDate.getMonth(),\n            date: startDate.getDate()\n          },\n          endDate: {\n            year: endDate.getFullYear(),\n            month: endDate.getMonth(),\n            date: endDate.getDate()\n          }\n        };\n\n        var today = new Date();\n        var t = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        var d = today.getDay();\n        var views = [{\n          format: options.dayFormat,\n          split: 7,\n          steps: {\n            month: 1\n          },\n          rangeList: [\n            {name: 'Today', value: '0d', date: {start: t, end: t}},\n            {name: 'Yesterday', value: '-2d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1)}},\n            {name: 'Last 7 Days', value: '-7d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6), end: t}},\n            {name: 'Last Week', value: '-1w', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6 - d), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - d)}},\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}}\n          ],\n          update: function (sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function () {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var item = viewDate[value];\n              var firstDayOfMonth = new Date(item.year, item.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var currentDate = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === currentDate,\n                  label: formatDate(day, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], day),\n                  inRange: that.isInRange(day),\n                  muted: day.getMonth() !== item.month,\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(day, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], day)\n                });\n              }\n              scope.title[index] = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.rows[index] = split(days, that.split);\n            });\n            scope.showLabels = true;\n            scope.labels = weekDaysLabelsHtml;\n            scope.isTodayDisabled = this.isDisabled(new Date());\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              that.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === picker.$date[0].toDateString() && item.date.end.toDateString() === picker.$date[1].toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            this.built = true;\n          },\n          isSelected: function (currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth() &&\n              date.getDate() === currentDate.getDate();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function (date, index) {\n            var time = date.getTime();\n            if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            if (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1]))) {\n              return true;\n            }\n            if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) {\n              return true;\n            }\n            if (options.disabledDateRanges) {\n              for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                  return true;\n                }\n              }\n            }\n            return false;\n          }\n        }, {\n          name: 'month',\n          format: options.monthFormat,\n          split: 4,\n          steps: {\n            year: 1\n          },\n          rangeList: [\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}},\n            {name: 'Two Months Ago', value: '-2m', date: {start: new Date(t.getFullYear(), t.getMonth() - 2, 1), end: new Date(t.getFullYear(), t.getMonth() - 1, 0)}}\n          ],\n          update: function(sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function() {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var months = [];\n              var month;\n\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate[value].year, i, 1);\n                months.push({\n                  date: month,\n                  label: formatDate(month, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], month),\n                  inRange: that.isInRange(month),\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(month, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], month)\n                });\n              }\n              scope.title[index] = formatDate(month, options.yearTitleFormat);\n              scope.rows[index] = split(months, that.split);\n            });\n            scope.showLabels = false;\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              that.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === picker.$date[0].toDateString() && item.date.end.toDateString() === picker.$date[1].toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            this.built = true;\n\n          },\n          isSelected: function(currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function(date, index) {\n            var time = date.getTime();\n            var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n            if (lastDate < options.minDate || date.getTime() > options.maxDate) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            return (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1])));\n          }\n        }];\n        return {\n          views: Array.prototype.slice.call(views, options.minView, options.minView + 1),\n          viewDate: viewDate\n        };\n      };\n    }];\n  });\n\n// Source: popover/popover.js\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      // uncommenting the next two lines will break backwards compatability\n      // prefixClass: 'popover',\n      // prefixEvent: 'popover',\n      container: false,\n      target: false,\n      placement: 'right',\n      templateUrl: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function ($tooltip) {\n\n      function PopoverFactory (element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if (options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function ($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr) {\n\n        var popover;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent', 'bsEnabled'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n              if (angular.isDefined(oldValue)) {\n                requestAnimationFrame(function () {\n                  if (popover) popover.$applyPlacement();\n                });\n              }\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsPopover) {\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              requestAnimationFrame(function () {\n                if (popover) popover.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n            if (newValue === true) {\n              popover.show();\n            } else {\n              popover.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(popover),?/i);\n            if (newValue === false) {\n              popover.setEnabled(false);\n            } else {\n              popover.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            popover.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: pagination/pagination.js\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n\n// Source: modal/modal.js\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n\n// Source: helpers/raf.js\nif (angular.version.minor < 3 && angular.version.dot < 14) {\n  angular.module('ng')\n\n  .factory('$$rAF', function ($window, $timeout) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported ?\n      function (fn) {\n        var id = requestAnimationFrame(fn);\n        return function () {\n          cancelAnimationFrame(id);\n        };\n      } :\n      function (fn) {\n        var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n        return function () {\n          $timeout.cancel(timer);\n        };\n      };\n\n    raf.supported = rafSupported;\n\n    return raf;\n\n  });\n}\n\n// Source: helpers/parse-options.js\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function () {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function ($parse, $q) {\n\n      function ParseOptionsFactory (attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match;\n        var displayFn;\n        var valueName;\n        /* eslint-disable no-unused-vars */\n        var keyName;\n        var groupByFn;\n        /* eslint-enable no-unused-vars */\n        var valueFn;\n        var valuesFn;\n\n        $parseOptions.init = function () {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]);\n          valueName = match[4] || match[6];\n          keyName = match[5];\n          groupByFn = $parse(match[3] || '');\n          valueFn = $parse(match[2] ? match[1] : valueName);\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function (scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function (values) {\n            if (!angular.isArray(values)) {\n              values = [];\n            }\n            $parseOptions.$values = values.length ? parseValues(values, scope) : [];\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function (modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues (values, scope) {\n          return values.map(function (match, index) {\n            var locals = {};\n            var label;\n            var value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n\n// Source: helpers/dimensions.js\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function () {\n\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function (element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function (element, prop, extra) {\n      var value;\n      if (element.currentStyle) { // IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function (element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides set equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip\n     * @url http://api.jquery.com/offset/\n     * @param element\n     * @param options\n     * @param i\n     */\n    fn.setOffset = function (element, options, i) {\n      var curPosition;\n      var curLeft;\n      var curCSSTop;\n      var curTop;\n      var curOffset;\n      var curCSSLeft;\n      var calculatePosition;\n      var position = fn.css(element, 'position');\n      var curElem = angular.element(element);\n      var props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        element.style.position = 'relative';\n      }\n\n      curOffset = fn.offset(element);\n      curCSSTop = fn.css(element, 'top');\n      curCSSLeft = fn.css(element, 'left');\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = fn.position(element);\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (angular.isFunction(options)) {\n        options = options.call(element, i, curOffset);\n      }\n\n      if (options.top !== null) {\n        props.top = (options.top - curOffset.top) + curTop;\n      }\n      if (options.left !== null) {\n        props.left = (options.left - curOffset.left) + curLeft;\n      }\n\n      if ('using' in options) {\n        options.using.call(curElem, props);\n      } else {\n        curElem.css({\n          top: props.top + 'px',\n          left: props.left + 'px'\n        });\n      }\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function (element) {\n\n      var offsetParentRect = {top: 0, left: 0};\n      var offsetParentEl;\n      var offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentEl\n        offsetParentEl = offsetParentElement(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentEl, 'html')) {\n          offsetParentRect = fn.offset(offsetParentEl);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    function offsetParentElement (element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    }\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function (element, outer) {\n      var value = element.offsetHeight;\n      if (outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function (element, outer) {\n      var value = element.offsetWidth;\n      if (outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n\n// Source: helpers/debounce.js\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', function ($timeout) {\n  return function (func, wait, immediate) {\n    var timeout = null;\n    return function () {\n      var context = this;\n      var args = arguments;\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if (callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = null;\n    if (!options) options = {};\n    return function () {\n      var context = this;\n      var args = arguments;\n      if (!timeout) {\n        if (options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later () {\n          timeout = null;\n          if (options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n});\n\n// Source: helpers/date-parser.js\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function ($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate () {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function (value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function (value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function (value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function (value) { this.hours = value; };\n  ParseDate.prototype.getHours = function () { return this.hours; };\n  ParseDate.prototype.setDate = function (value) { this.day = value; };\n  ParseDate.prototype.setMonth = function (value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function (value) { this.year = value; };\n  ParseDate.prototype.fromDate = function (value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function () {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop () {\n  }\n\n  function isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive (array, value) {\n    var len = array.length;\n    var str = value.toString().toLowerCase();\n    for (var i = 0; i < len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function ($locale, dateFilter) {\n\n    var DateParserFactory = function (config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      /* eslint-disable key-spacing, quote-props */\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}'\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function (value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function (value) { return this.setMonth(1 * value - 1); },\n        'M'     : function (value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function (value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : function (value) { return (1 * value <= 50 && value.length === 2) ? this.setFullYear(2000 + 1 * value) : this.setFullYear(1 * value); }\n      };\n      /* eslint-enable key-spacing, quote-props */\n\n      var regex;\n      var setMap;\n\n      $dateParser.init = function () {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function (date) {\n        if (angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function (value, baseDate, format, timezone) {\n        // check for date format special names\n        if (format) format = $locale.DATETIME_FORMATS[format] || format;\n        if (angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format, timezone);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if (!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for (var i = 0; i < matches.length - 1; i++) {\n          if (formatSetMap[i]) formatSetMap[i].call(date, matches[i + 1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function (key, value) {\n        var date;\n\n        if (value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if (isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && value.length === 0) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function (key, value) {\n        var time;\n\n        if (value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if (isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.length === 0) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function (date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      /* Correct the date for timezone offset.\n      * @param  date  (Date) the date to adjust\n      * @param  timezone  (string) the timezone to adjust for\n      * @param  undo  (boolean) to add or subtract timezone offset\n      * @return  (Date) the corrected date\n      */\n      $dateParser.timezoneOffsetAdjust = function (date, timezone, undo) {\n        if (!date) {\n          return null;\n        }\n        // Right now, only 'UTC' is supported.\n        if (timezone && timezone === 'UTC') {\n          date = new Date(date.getTime());\n          date.setMinutes(date.getMinutes() + (undo ? -1 : 1) * date.getTimezoneOffset());\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function regExpForFormat (format) {\n        // `format` string can contain literal values.\n        // These need to be escaped by surrounding with\n        // single quotes (e.g. `\"h 'in the morning'\"`).\n        // In order to output a single quote, escape it - i.e.,\n        // two single quotes in a sequence (e.g. `\"h 'o''clock'\"`).\n\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseRegex(re);\n      }\n\n      function buildDateAbstractRegex (format) {\n        var escapedFormat = escapeReservedSymbols(format);\n        var escapedLiteralFormat = escapedFormat.replace(/''/g, '\\\\\\'');\n        var literalRegex = /('(?:\\\\'|.)*?')/;\n        var formatParts = escapedLiteralFormat.split(literalRegex);\n        var dateElements = Object.keys(regExpMap);\n        var dateRegexParts = [];\n\n        angular.forEach(formatParts, function (part) {\n          if (isFormatStringLiteral(part)) {\n            part = trimLiteralEscapeChars(part);\n          } else {\n            // Abstract replaces to avoid collisions\n            for (var i = 0; i < dateElements.length; i++) {\n              part = part.split(dateElements[i]).join('${' + i + '}');\n            }\n          }\n          dateRegexParts.push(part);\n        });\n\n        return dateRegexParts.join('');\n      }\n\n      function escapeReservedSymbols (text) {\n        return text.replace(/\\\\/g, '[\\\\\\\\]')\n                   .replace(/-/g, '[-]')\n                   .replace(/\\./g, '[.]')\n                   .replace(/\\*/g, '[*]')\n                   .replace(/\\+/g, '[+]')\n                   .replace(/\\?/g, '[?]')\n                   .replace(/\\$/g, '[$]')\n                   .replace(/\\^/g, '[^]')\n                   .replace(/\\//g, '[/]')\n                   .replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function isFormatStringLiteral (text) {\n        return /^'.*'$/.test(text);\n      }\n\n      function trimLiteralEscapeChars (text) {\n        return text.replace(/^'(.*)'$/, '$1');\n      }\n\n      function buildDateParseRegex (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var re = abstractRegex;\n\n        // Replace abstracted values\n        for (var i = 0; i < dateElements.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[dateElements[i]] + ')');\n        }\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      function setMapForFormat (format) {\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseValuesMap(re);\n      }\n\n      function buildDateParseValuesMap (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var valuesRegex = new RegExp('\\\\${(\\\\d+)}', 'g');\n        var valuesMatch;\n        var keyIndex;\n        var valueKey;\n        var valueFunction;\n        var valuesFunctionMap = [];\n\n        /* eslint-disable no-cond-assign */\n        while ((valuesMatch = valuesRegex.exec(abstractRegex)) !== null) {\n          keyIndex = valuesMatch[1];\n          valueKey = dateElements[keyIndex];\n          valueFunction = setFnMap[valueKey];\n\n          valuesFunctionMap.push(valueFunction);\n        }\n\n        return valuesFunctionMap;\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n\n// Source: helpers/date-formatter.js\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n\n// Source: helpers/compiler.js\n// NOTICE: This file was forked from the angular-material project (github.com/angular/material)\n// MIT Licensed - Copyright (c) 2014-2015 Google, Inc. http://angularjs.org\n\nangular.module('mgcrea.ngStrap.core', [])\n  .service('$bsCompiler', bsCompilerService);\n\nfunction bsCompilerService ($q, $http, $injector, $compile, $controller, $templateCache) {\n\n  /*\n   * @ngdoc service\n   * @name $bsCompiler\n   * @module material.core\n   * @description\n   * The $bsCompiler service is an abstraction of angular's compiler, that allows the developer\n   * to easily compile an element with a templateUrl, controller, and locals.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * $bsCompiler.compile({\n   *   templateUrl: 'modal.html',\n   *   controller: 'ModalCtrl',\n   *   locals: {\n   *     modal: myModalInstance;\n   *   }\n   * }).then(function(compileData) {\n   *   compileData.element; // modal.html's template in an element\n   *   compileData.link(myScope); //attach controller & scope to element\n   * });\n   * </hljs>\n   */\n\n   /*\n    * @ngdoc method\n    * @name $bsCompiler#compile\n    * @description A helper to compile an HTML template/templateUrl with a given controller,\n    * locals, and scope.\n    * @param {object} options An options object, with the following properties:\n    *\n    *    - `controller` - `{(string=|function()=}` Controller fn that should be associated with\n    *      newly created scope or the name of a registered controller if passed as a string.\n    *    - `controllerAs` - `{string=}` A controller alias name. If present the controller will be\n    *      published to scope under the `controllerAs` name.\n    *    - `template` - `{string=}` An html template as a string.\n    *    - `templateUrl` - `{string=}` A path to an html template.\n    *    - `transformTemplate` - `{function(template)=}` A function which transforms the template after\n    *      it is loaded. It will be given the template string as a parameter, and should\n    *      return a a new string representing the transformed template.\n    *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n    *      be injected into the controller. If any of these dependencies are promises, the compiler\n    *      will wait for them all to be resolved, or if one is rejected before the controller is\n    *      instantiated `compile()` will fail..\n    *      * `key` - `{string}`: a name of a dependency to be injected into the controller.\n    *      * `factory` - `{string|function}`: If `string` then it is an alias for a service.\n    *        Otherwise if function, then it is injected and the return value is treated as the\n    *        dependency. If the result is a promise, it is resolved before its value is\n    *        injected into the controller.\n    *\n    * @returns {object=} promise A promise, which will be resolved with a `compileData` object.\n    * `compileData` has the following properties:\n    *\n    *   - `element` - `{element}`: an uncompiled element matching the provided template.\n    *   - `link` - `{function(scope)}`: A link function, which, when called, will compile\n    *     the element and instantiate the provided controller (if given).\n    *   - `locals` - `{object}`: The locals which will be passed into the controller once `link` is\n    *     called. If `bindToController` is true, they will be coppied to the ctrl instead\n    *   - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n    */\n  this.compile = function (options) {\n\n    if (options.template && /\\.html$/.test(options.template)) {\n      console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.');\n      options.templateUrl = options.template;\n      options.template = '';\n    }\n\n    var templateUrl = options.templateUrl;\n    var template = options.template || '';\n    var controller = options.controller;\n    var controllerAs = options.controllerAs;\n    var resolve = angular.copy(options.resolve || {});\n    var locals = angular.copy(options.locals || {});\n    var transformTemplate = options.transformTemplate || angular.identity;\n    var bindToController = options.bindToController;\n\n    // Take resolve values and invoke them.\n    // Resolves can either be a string (value: 'MyRegisteredAngularConst'),\n    // or an invokable 'factory' of sorts: (value: function ValueGetter($dependency) {})\n    angular.forEach(resolve, function (value, key) {\n      if (angular.isString(value)) {\n        resolve[key] = $injector.get(value);\n      } else {\n        resolve[key] = $injector.invoke(value);\n      }\n    });\n    // Add the locals, which are just straight values to inject\n    // eg locals: { three: 3 }, will inject three into the controller\n    angular.extend(resolve, locals);\n\n    if (template) {\n      resolve.$template = $q.when(template);\n    } else if (templateUrl) {\n      resolve.$template = fetchTemplate(templateUrl);\n    } else {\n      throw new Error('Missing `template` / `templateUrl` option.');\n    }\n\n    if (options.titleTemplate) {\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.titleTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          findElement('[ng-bind=\"title\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    if (options.contentTemplate) {\n      // TODO(mgcrea): deprecate?\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.contentTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n          if (!options.templateUrl) contentEl.next().remove();\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    // Wait for all the resolves to finish if they are promises\n    return $q.all(resolve).then(function (locals) {\n\n      var template = transformTemplate(locals.$template);\n      if (options.html) {\n        template = template.replace(/ng-bind=\"/ig, 'ng-bind-html=\"');\n      }\n      // var element = options.element || angular.element('<div>').html(template.trim()).contents();\n      var element = angular.element('<div>').html(template.trim()).contents();\n      var linkFn = $compile(element);\n\n      // Return a linking function that can be used later when the element is ready\n      return {\n        locals: locals,\n        element: element,\n        link: function link (scope) {\n          locals.$scope = scope;\n\n          // Instantiate controller if it exists, because we have scope\n          if (controller) {\n            var invokeCtrl = $controller(controller, locals, true);\n            if (bindToController) {\n              angular.extend(invokeCtrl.instance, locals);\n            }\n            // Support angular@~1.2 invokeCtrl\n            var ctrl = angular.isObject(invokeCtrl) ? invokeCtrl : invokeCtrl();\n            // See angular-route source for this logic\n            element.data('$ngControllerController', ctrl);\n            element.children().data('$ngControllerController', ctrl);\n\n            if (controllerAs) {\n              scope[controllerAs] = ctrl;\n            }\n          }\n\n          return linkFn.apply(null, arguments);\n        }\n      };\n    });\n\n  };\n\n  function findElement (query, element) {\n    return angular.element((element || document).querySelectorAll(query));\n  }\n\n  var fetchPromises = {};\n  function fetchTemplate (template) {\n    if (fetchPromises[template]) return fetchPromises[template];\n    return (fetchPromises[template] = $http.get(template, {cache: $templateCache})\n      .then(function (res) {\n        return res.data;\n      }));\n  }\n\n}\n\n// Source: dropdown/dropdown.js\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) return;\n          if (options.keyboard && $dropdown.$element) $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          var options = {scope: scope};\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n\n// Source: datetimepicker/datetimepicker.js\n/**\n * Created by xiashan on 17/12/8.\n */\nangular.module('mgcrea.ngStrap.datetimepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip'])\n  .provider('datetimepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      function DatetimepickerViewsFactory (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var format = $dateFormatter.getDatetimeFormat(options.dateFormat, lang);\n        var timeSeparator = $dateFormatter.timeSeparator(format);\n        var showSeconds = $dateFormatter.showSeconds(format);\n        scope.$iconUp = options.iconUp;\n        scope.$iconDown = options.iconDown;\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n        var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var viewDate = {\n          year: startDate.getFullYear(),\n          month: startDate.getMonth(),\n          date: startDate.getDate(),\n          hour: startDate.getHours(),\n          minute: startDate.getMinutes(),\n          second: startDate.getSeconds(),\n          millisecond: startDate.getMilliseconds()\n        };\n        var views = [\n          {\n            hourFormat: options.hourFormat,\n            minuteFormat: options.minuteFormat,\n            secondFormat: options.secondFormat,\n            split: 7,\n            steps: {\n              date: 1\n            },\n            update: function (date, force) {\n              if (angular.isDate(date) && !isNaN(date.getTime())) {\n                // picker.$date === date\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate(),\n                  hour: picker.$date.getHours(),\n                  minute: picker.$date.getMinutes(),\n                  second: picker.$date.getSeconds(),\n                  millisecond: picker.$date.getMilliseconds()\n                });\n                picker.$build();\n              } else if (!this.built || force) {\n                picker.$build();\n              }\n            },\n            build: function () {\n              var i;\n              var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n              var hours = [];\n              var hour;\n              var step;\n              for (i = 0; i < options.length; i++) {\n                // hour = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour - (midIndex - i) * options.hourStep);\n                step = viewDate.hour - (midIndex - i) * options.hourStep;\n                step = step < 0 ? (24 + step) : step;\n                hour = new Date(viewDate.year, viewDate.month, viewDate.date, step, viewDate.minute, viewDate.second);\n                hours.push({\n                  date: hour,\n                  label: formatDate(hour, this.hourFormat),\n                  selected: picker.$date && this.isSelected(hour, 0),\n                  disabled: this.isDisabled(hour, 0)\n                  // selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n                  // disabled: $timepicker.$isDisabled(hour, 0)\n                });\n              }\n              var minutes = [];\n              var minute;\n              for (i = 0; i < options.length; i++) {\n                // minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n                step = viewDate.minute - (midIndex - i) * options.minuteStep;\n                step = step < 0 ? (60 + step) : step;\n                minute = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, step, viewDate.second);\n                minutes.push({\n                  date: minute,\n                  label: formatDate(minute, this.minuteFormat),\n                  selected: picker.$date && this.isSelected(minute, 1),\n                  disabled: this.isDisabled(minute, 1)\n                });\n              }\n              var seconds = [];\n              var second;\n              for (i = 0; i < options.length; i++) {\n                // second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n                step = viewDate.second - (midIndex - i) * options.secondStep;\n                step = step < 0 ? (60 + step) : step;\n                second = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute, step);\n                seconds.push({\n                  date: second,\n                  label: formatDate(second, this.secondFormat),\n                  selected: picker.$date && this.isSelected(second, 2),\n                  disabled: this.isDisabled(second, 2)\n                });\n              }\n              var rows = [];\n              for (i = 0; i < options.length; i++) {\n                if (showSeconds) {\n                  rows.push([hours[i], minutes[i], seconds[i]]);\n                } else {\n                  rows.push([hours[i], minutes[i]]);\n                }\n              }\n              scope.title = formatDate(new Date(viewDate.year, viewDate.month, viewDate.date), options.timeTitleFormat);\n              scope.rows = rows;\n              scope.showSeconds = showSeconds;\n              scope.timeSeparator = timeSeparator;\n              this.built = true;\n            },\n            isSelected: function (date, index) {\n              if (!picker.$date) {\n                return false;\n              } else if (index === 0) {\n                return date.getHours() === picker.$date.getHours();\n              } else if (index === 1) {\n                return date.getMinutes() === picker.$date.getMinutes();\n              } else if (index === 2) {\n                return date.getSeconds() === picker.$date.getSeconds();\n              }\n              return false;\n            },\n            isDisabled: function (date, index) {\n              var time = date.getTime();\n              return options.minDate && angular.isDate(options.minDate) && time < options.minDate.getTime() ||\n                (options.maxDate && angular.isDate(options.maxDate) && time > options.maxDate.getTime());\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n            }\n          },\n          {\n            format: options.dayFormat,\n            split: 7,\n            steps: {\n              month: 1\n            },\n            update: function (date, force) {\n              if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n                viewDate.date = picker.$date.getDate();\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === today,\n                  label: formatDate(day, this.format),\n                  selected: picker.$date && this.isSelected(day),\n                  muted: day.getMonth() !== viewDate.month,\n                  disabled: this.isDisabled(day)\n                });\n              }\n              scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.showLabels = true;\n              scope.labels = weekDaysLabelsHtml;\n              scope.rows = split(days, this.split);\n              scope.isTodayDisabled = this.isDisabled(new Date());\n              this.built = true;\n            },\n            isSelected: function (date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n            },\n            isDisabled: function (date) {\n              var time = date.getTime();\n              if (options.minDate && angular.isDate(options.minDate)) {\n                var minDate = new Date(options.minDate.getFullYear(), options.minDate.getMonth(), options.minDate.getDate(), 0, 0, 0);\n                if (time < Date.parse(minDate)) {\n                  return true;\n                }\n              }\n              if (options.maxDate && angular.isDate(options.maxDate)) {\n                var maxDate = new Date(options.maxDate.getFullYear(), options.maxDate.getMonth(), options.maxDate.getDate() + 1, 0, 0, 0);\n                if (time >= Date.parse(maxDate)) {\n                  return true;\n                }\n              }\n              // if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n              if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n              if (options.disabledDateRanges) {\n                for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                  if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualTime = picker.$date.getTime();\n              var newDate;\n              if (evt.keyCode === 37) {\n                newDate = new Date(actualTime - 1 * 864e5);\n              } else if (evt.keyCode === 38) {\n                newDate = new Date(actualTime - 7 * 864e5);\n              } else if (evt.keyCode === 39) {\n                newDate = new Date(actualTime + 1 * 864e5);\n              } else if (evt.keyCode === 40) {\n                newDate = new Date(actualTime + 7 * 864e5);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          },\n          {\n            name: 'month',\n            format: options.monthFormat,\n            split: 4,\n            steps: {\n              year: 1\n            },\n            update: function (date, force) {\n              if (!this.built || date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var months = [];\n              var month;\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate.year, i, 1);\n                months.push({\n                  date: month,\n                  label: formatDate(month, this.format),\n                  selected: picker.$isSelected(month),\n                  disabled: this.isDisabled(month)\n                });\n              }\n              scope.title = formatDate(month, options.yearTitleFormat);\n              scope.showLabels = false;\n              scope.rows = split(months, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n            },\n            isDisabled: function(date) {\n              var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function(evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualMonth = picker.$date.getMonth();\n              var newDate = new Date(picker.$date);\n              if (evt.keyCode === 37) {\n                newDate.setMonth(actualMonth - 1);\n              } else if (evt.keyCode === 38) {\n                newDate.setMonth(actualMonth - 4);\n              } else if (evt.keyCode === 39) {\n                newDate.setMonth(actualMonth + 1);\n              } else if (evt.keyCode === 40) {\n                newDate.setMonth(actualMonth + 4);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          },\n          {\n            name: 'year',\n            format: options.yearFormat,\n            split: 4,\n            steps: {\n              year: 12\n            },\n            update: function (date, force) {\n              if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n              var years = [];\n              var year;\n              for (var i = 0; i < 12; i++) {\n                year = new Date(firstYear + i, 0, 1);\n                years.push({\n                  date: year,\n                  label: formatDate(year, this.format),\n                  selected: picker.$isSelected(year),\n                  disabled: this.isDisabled(year)\n                });\n              }\n              scope.title = years[0].label + '-' + years[years.length - 1].label;\n              scope.showLabels = false;\n              scope.rows = split(years, this.split);\n              this.built = true;\n            },\n            isSelected: function (date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n            },\n            isDisabled: function (date) {\n              var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualYear = picker.$date.getFullYear();\n              var newDate = new Date(picker.$date);\n              if (evt.keyCode === 37) {\n                newDate.setYear(actualYear - 1);\n              } else if (evt.keyCode === 38) {\n                newDate.setYear(actualYear - 4);\n              } else if (evt.keyCode === 39) {\n                newDate.setYear(actualYear + 1);\n              } else if (evt.keyCode === 40) {\n                newDate.setYear(actualYear + 4);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          }];\n        return {\n          views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n          viewDate: viewDate\n        };\n      }\n      return DatetimepickerViewsFactory;\n    }];\n  })\n  .provider('$datetimepicker', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'datepicker',\n      placement: 'bottom-left',\n      templateUrl: 'datetimepicker/datetimepicker.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      dateType: 'date',\n      dateFormat: 'shortDate',\n      timezone: null,\n      modelDateFormat: null,\n      hourFormat: 'HH',\n      minuteFormat: 'mm',\n      secondFormat: 'ss',\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      timeTitleFormat: 'dd MMM',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      startView: 1,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      hasToday: false,\n      hasClear: false,\n      length: 5,\n      hourStep: 1,\n      minuteStep: 5,\n      secondStep: 5,\n      roundDisplay: false,\n      iconUp: 'nox-sort-up',\n      iconDown: 'nox-sort-down',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      arrowBehavior: 'pager'\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datetimepickerViews', '$tooltip', '$timeout', function ($window, $document, $rootScope, $sce, $dateFormatter, datetimepickerViews, $tooltip, $timeout) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      var isTouch = 'createTouch' in $window.document && isNative;\n      if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n      function DatetimepickerFactory (element, controller, config) {\n        var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n        var parentScope = config.scope;\n        var options = $datepicker.$options;\n        var scope = $datepicker.$scope;\n        if (options.startView) options.startView -= options.minView;\n        var pickerViews = datetimepickerViews($datepicker);\n        $datepicker.$views = pickerViews.views;\n        var viewDate = pickerViews.viewDate;\n        scope.$mode = options.startView;\n        scope.$iconLeft = options.iconLeft;\n        scope.$iconRight = options.iconRight;\n        scope.$hasToday = options.hasToday;\n        scope.$hasClear = options.hasClear;\n        var $picker = $datepicker.$views[scope.$mode];\n        scope.$select = function(date) {\n          $datepicker.select(date);\n        };\n        scope.$selectPane = function(value) {\n          $datepicker.$selectPane(value);\n        };\n        scope.$selectTime = function(date, index) {\n          $datepicker.selectTime(date, index);\n        };\n        scope.$arrowAction = function(value, index) {\n          if (options.arrowBehavior === 'picker') {\n            $datepicker.$setTimeByStep(value, index);\n          } else {\n            $datepicker.$moveIndex(value, index);\n          }\n        };\n        scope.$toggleMode = function() {\n          $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n        };\n        scope.$setToday = function() {\n          if (options.autoclose) {\n            $datepicker.setMode(0);\n            $datepicker.select(new Date());\n          } else {\n            $datepicker.select(new Date(), true);\n          }\n        };\n        scope.$clear = function() {\n          if (options.autoclose) {\n            $datepicker.setMode(0);\n            $datepicker.select(null);\n          } else {\n            $datepicker.select(null, true);\n          }\n        };\n        $datepicker.update = function(date) {\n          if (angular.isDate(date) && !isNaN(date.getTime())) {\n            $datepicker.$date = date;\n            $picker.update.call($picker, date);\n          }\n          $datepicker.$build(true);\n        };\n        $datepicker.updateDisabledDates = function(dateRanges) {\n          options.disabledDateRanges = dateRanges;\n          for (var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n          }\n        };\n        $datepicker.select = function(date, keep) {\n          if (angular.isDate(date)) {\n            if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n              controller.$dateValue = new Date(date);\n            }\n          } else {\n            controller.$dateValue = null;\n          }\n          if (!scope.$mode || keep) {\n            controller.$setViewValue(angular.copy(date));\n            controller.$render();\n            if (options.autoclose && !keep) {\n              $timeout(function() {\n                $datepicker.hide(true);\n              });\n            }\n          } else {\n            angular.extend(viewDate, {\n              year: date.getFullYear(),\n              month: date.getMonth(),\n              date: date.getDate(),\n              hour: date.getHours(),\n              minute: date.getMinutes(),\n              second: date.getSeconds(),\n              millisecond: date.getMilliseconds()\n            });\n            $datepicker.setMode(scope.$mode - 1);\n            $datepicker.$build();\n          }\n        };\n        $datepicker.selectTime = function(date, index, keep) {\n          if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date();\n          }\n          if (!angular.isDate(date)) {\n            date = new Date(date);\n          }\n          controller.$dateValue.setFullYear(date.getFullYear());\n          controller.$dateValue.setMonth(date.getMonth());\n          controller.$dateValue.setDate(date.getDate());\n          if (index === 0) {\n            controller.$dateValue.setHours(date.getHours());\n          } else if (index === 1) {\n            controller.$dateValue.setMinutes(date.getMinutes());\n          } else if (index === 2) {\n            controller.$dateValue.setSeconds(date.getSeconds());\n          }\n          controller.$setViewValue(angular.copy(controller.$dateValue));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              // $datepicker.setMode(options.startView);\n              $datepicker.hide(true);\n            });\n          }\n        };\n        $datepicker.setMode = function(mode) {\n          scope.$mode = mode;\n          $picker = $datepicker.$views[scope.$mode];\n          $datepicker.$build();\n        };\n        $datepicker.$build = function(pristine) {\n          if (pristine === true && $picker.built) return;\n          if (pristine === false && !$picker.built) return;\n          $picker.build.call($picker);\n        };\n        function updateSelected(el) {\n          el.selected = $datepicker.$isSelected(el.date);\n        }\n        $datepicker.$updateSelected = function() {\n          for (var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], updateSelected);\n          }\n        };\n        $datepicker.$isSelected = function(date) {\n          return $picker.isSelected(date);\n        };\n        $datepicker.$setDisabledEl = function(el) {\n          el.disabled = $picker.isDisabled(el.date);\n        };\n        $datepicker.$selectPane = function(value) {\n          var steps = $picker.steps;\n          var targetDate = new Date(Date.UTC(\n            viewDate.year + (steps.year || 0) * value,\n            viewDate.month + (steps.month || 0) * value,\n            steps.date ? (viewDate.date + steps.date * value) : 1\n          ));\n          angular.extend(viewDate, {\n            year: targetDate.getUTCFullYear(),\n            month: targetDate.getUTCMonth(),\n            date: targetDate.getUTCDate()\n          });\n          $datepicker.$build();\n        };\n        $datepicker.$setTimeByStep = function(value, index) {\n          var newDate = new Date($datepicker.$date);\n          var hours = newDate.getHours();\n          var minutes = newDate.getMinutes();\n          var seconds = newDate.getSeconds();\n          if (index === 0) {\n            newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n          } else if (index === 1) {\n            newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n          } else if (index === 2) {\n            newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n          }\n          $datepicker.selectTime(newDate, index, true);\n        };\n        $datepicker.$moveIndex = function(value, index) {\n          var targetDate;\n          if (index === 0) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n            angular.extend(viewDate, {\n              hour: targetDate.getHours()\n            });\n          } else if (index === 1) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n            angular.extend(viewDate, {\n              minute: targetDate.getMinutes()\n            });\n          } else if (index === 2) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n            angular.extend(viewDate, {\n              second: targetDate.getSeconds()\n            });\n          }\n          $datepicker.$build();\n        };\n        $datepicker.$onMouseDown = function(evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n              targetEl = targetEl.parent();\n            }\n            targetEl.triggerHandler('click');\n          }\n        };\n        $datepicker.$onKeyDown = function(evt) {\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (evt.keyCode === 13) {\n            if (!scope.$mode) {\n              $datepicker.hide(true);\n            } else {\n              scope.$apply(function() {\n                $datepicker.setMode(scope.$mode - 1);\n              });\n            }\n            return;\n          }\n          $picker.onKeyDown(evt);\n          parentScope.$digest();\n        };\n        function focusElement() {\n          element[0].focus();\n        }\n        var _init = $datepicker.init;\n        $datepicker.init = function() {\n          if (isNative && options.useNative) {\n            element.prop('type', 'date');\n            element.css('-webkit-appearance', 'textfield');\n            return;\n          } else if (isTouch) {\n            element.prop('type', 'text');\n            element.attr('readonly', 'true');\n            element.on('click', focusElement);\n          }\n          _init();\n        };\n        var _destroy = $datepicker.destroy;\n        $datepicker.destroy = function() {\n          if (isNative && options.useNative) {\n            element.off('click', focusElement);\n          }\n          _destroy();\n        };\n        var _show = $datepicker.show;\n        $datepicker.show = function() {\n          if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n          _show();\n          $timeout(function() {\n            if (!$datepicker.$isShown) return;\n            $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $datepicker.$onKeyDown);\n            }\n          }, 0, false);\n        };\n        var _hide = $datepicker.hide;\n        $datepicker.hide = function(blur) {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $datepicker.$onKeyDown);\n          }\n          _hide(blur);\n        };\n        return $datepicker;\n      }\n      DatetimepickerFactory.defaults = defaults;\n      return DatetimepickerFactory;\n    }];\n  })\n  .directive('bsDatetimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datetimepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datetimepicker) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n        var options = {\n          scope: scope\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        var datepicker = $datetimepicker(element, controller, options);\n        options = datepicker.$options;\n        if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n        var lang = options.lang;\n        var formatDate = function(date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function(newValue, oldValue) {\n            if (!datepicker || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n            if (newValue === true) {\n              datepicker.show();\n            } else {\n              datepicker.hide();\n            }\n          });\n        }\n        angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n          if (angular.isDefined(attr[key])) {\n            attr.$observe(key, function(newValue) {\n              datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n              if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n              validateAgainstMinMaxDate(controller.$dateValue);\n            });\n          }\n        });\n        if (angular.isDefined(attr.dateFormat)) {\n          attr.$observe('dateFormat', function(newValue) {\n            datepicker.$options.dateFormat = newValue;\n          });\n        }\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          datepicker.update(controller.$dateValue);\n        }, true);\n        function normalizeDateRanges(ranges) {\n          if (!ranges || !ranges.length) return null;\n          return ranges;\n        }\n        if (angular.isDefined(attr.disabledDates)) {\n          scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n            disabledRanges = normalizeDateRanges(disabledRanges);\n            previousValue = normalizeDateRanges(previousValue);\n            if (disabledRanges) {\n              datepicker.updateDisabledDates(disabledRanges);\n            }\n          });\n        }\n        function validateAgainstMinMaxDate(parsedDate) {\n          if (!angular.isDate(parsedDate)) return;\n          var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n          var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n          var isValid = isMinValid && isMaxValid;\n          controller.$setValidity('date', isValid);\n          controller.$setValidity('min', isMinValid);\n          controller.$setValidity('max', isMaxValid);\n          if (isValid) controller.$dateValue = parsedDate;\n        }\n        controller.$parsers.unshift(function(viewValue) {\n          var date;\n          if (!viewValue) {\n            controller.$setValidity('date', true);\n            return null;\n          }\n          var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n          if (!parsedDate || isNaN(parsedDate.getTime())) {\n            controller.$setValidity('date', false);\n            return;\n          }\n          validateAgainstMinMaxDate(parsedDate);\n          if (options.dateType === 'string') {\n            date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n            return formatDate(date, options.modelDateFormat || options.dateFormat);\n          }\n          date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n          if (options.dateType === 'number') {\n            return date.getTime();\n          } else if (options.dateType === 'unix') {\n            return date.getTime() / 1e3;\n          } else if (options.dateType === 'iso') {\n            return date.toISOString();\n          }\n          return new Date(date);\n        });\n        controller.$formatters.push(function(modelValue) {\n          var date;\n          if (angular.isUndefined(modelValue) || modelValue === null) {\n            date = NaN;\n          } else if (angular.isDate(modelValue)) {\n            date = modelValue;\n          } else if (options.dateType === 'string') {\n            date = dateParser.parse(modelValue, null, options.modelDateFormat);\n          } else if (options.dateType === 'unix') {\n            date = new Date(modelValue * 1e3);\n          } else {\n            date = new Date(modelValue);\n          }\n          controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n          return getDateFormattedString();\n        });\n        controller.$render = function() {\n          element.val(getDateFormattedString());\n        };\n        function getDateFormattedString() {\n          return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n        }\n        scope.$on('$destroy', function() {\n          if (datepicker) datepicker.destroy();\n          options = null;\n          datepicker = null;\n        });\n      }\n    };\n  }]);\n\n// Source: datepicker/datepicker.js\nangular.module('mgcrea.ngStrap.datepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$datepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    prefixClass: 'datepicker',\n    placement: 'bottom-left',\n    templateUrl: 'datepicker/datepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: false,\n    dateType: 'date',\n    dateFormat: 'shortDate',\n    timezone: null,\n    modelDateFormat: null,\n    dayFormat: 'dd',\n    monthFormat: 'MMM',\n    yearFormat: 'yyyy',\n    monthTitleFormat: 'MMMM yyyy',\n    yearTitleFormat: 'yyyy',\n    strictFormat: false,\n    autoclose: false,\n    minDate: -Infinity,\n    maxDate: +Infinity,\n    startView: 0,\n    minView: 0,\n    startWeek: 0,\n    daysOfWeekDisabled: '',\n    hasToday: false,\n    hasClear: false,\n    iconLeft: 'nox-sort-left',\n    iconRight: 'nox-sort-right'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datepickerViews', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n    function DatepickerFactory(element, controller, config) {\n      var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $datepicker.$options;\n      var scope = $datepicker.$scope;\n      if (options.startView) options.startView -= options.minView;\n      var pickerViews = datepickerViews($datepicker);\n      $datepicker.$views = pickerViews.views;\n      var viewDate = pickerViews.viewDate;\n      scope.$mode = options.startView;\n      scope.$iconLeft = options.iconLeft;\n      scope.$iconRight = options.iconRight;\n      scope.$hasToday = options.hasToday;\n      scope.$hasClear = options.hasClear;\n      var $picker = $datepicker.$views[scope.$mode];\n      scope.$select = function(date) {\n        $datepicker.select(date);\n      };\n      scope.$selectPane = function(value) {\n        $datepicker.$selectPane(value);\n      };\n      scope.$toggleMode = function() {\n        $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n      };\n      scope.$setToday = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(new Date());\n        } else {\n          $datepicker.select(new Date(), true);\n        }\n      };\n      scope.$clear = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(null);\n        } else {\n          $datepicker.select(null, true);\n        }\n      };\n      $datepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $datepicker.$date = date;\n          $picker.update.call($picker, date);\n        }\n        $datepicker.$build(true);\n      };\n      $datepicker.updateDisabledDates = function(dateRanges) {\n        options.disabledDateRanges = dateRanges;\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n        }\n      };\n      $datepicker.select = function(date, keep) {\n        if (angular.isDate(date)) {\n          if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date(date);\n          }\n        } else {\n          controller.$dateValue = null;\n        }\n        if (!scope.$mode || keep) {\n          controller.$setViewValue(angular.copy(date));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              $datepicker.hide(true);\n            });\n          }\n        } else {\n          angular.extend(viewDate, {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            date: date.getDate()\n          });\n          $datepicker.setMode(scope.$mode - 1);\n          $datepicker.$build();\n        }\n      };\n      $datepicker.setMode = function(mode) {\n        scope.$mode = mode;\n        $picker = $datepicker.$views[scope.$mode];\n        $datepicker.$build();\n      };\n      $datepicker.$build = function(pristine) {\n        if (pristine === true && $picker.built) return;\n        if (pristine === false && !$picker.built) return;\n        $picker.build.call($picker);\n      };\n      $datepicker.$updateSelected = function() {\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], updateSelected);\n        }\n      };\n      $datepicker.$isSelected = function(date) {\n        return $picker.isSelected(date);\n      };\n      $datepicker.$setDisabledEl = function(el) {\n        el.disabled = $picker.isDisabled(el.date);\n      };\n      $datepicker.$selectPane = function(value) {\n        var steps = $picker.steps;\n        var targetDate = new Date(Date.UTC(viewDate.year + (steps.year || 0) * value, viewDate.month + (steps.month || 0) * value, 1));\n        angular.extend(viewDate, {\n          year: targetDate.getUTCFullYear(),\n          month: targetDate.getUTCMonth(),\n          date: targetDate.getUTCDate()\n        });\n        $datepicker.$build();\n      };\n      $datepicker.$onMouseDown = function(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $datepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          if (!scope.$mode) {\n            $datepicker.hide(true);\n          } else {\n            scope.$apply(function() {\n              $datepicker.setMode(scope.$mode - 1);\n            });\n          }\n          return;\n        }\n        $picker.onKeyDown(evt);\n        parentScope.$digest();\n      };\n      function updateSelected(el) {\n        el.selected = $datepicker.$isSelected(el.date);\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $datepicker.init;\n      $datepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'date');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $datepicker.destroy;\n      $datepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $datepicker.show;\n      $datepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.on('keydown', $datepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $datepicker.hide;\n      $datepicker.hide = function(blur) {\n        if (!$datepicker.$isShown) return;\n        $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n        if (options.keyboard) {\n          element.off('keydown', $datepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $datepicker;\n    }\n    DatepickerFactory.defaults = defaults;\n    return DatepickerFactory;\n  } ];\n}).directive('bsDatepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      var datepicker = $datepicker(element, controller, options);\n      options = datepicker.$options;\n      if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!datepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          if (newValue === true) {\n            datepicker.show();\n          } else {\n            datepicker.hide();\n          }\n        });\n      }\n      angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        }\n      });\n      if (angular.isDefined(attr.dateFormat)) {\n        attr.$observe('dateFormat', function(newValue) {\n          datepicker.$options.dateFormat = newValue;\n        });\n      }\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        datepicker.update(controller.$dateValue);\n      }, true);\n      function normalizeDateRanges(ranges) {\n        if (!ranges || !ranges.length) return null;\n        return ranges;\n      }\n      if (angular.isDefined(attr.disabledDates)) {\n        scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n          disabledRanges = normalizeDateRanges(disabledRanges);\n          previousValue = normalizeDateRanges(previousValue);\n          if (disabledRanges) {\n            datepicker.updateDisabledDates(disabledRanges);\n          }\n        });\n      }\n      function validateAgainstMinMaxDate(parsedDate) {\n        if (!angular.isDate(parsedDate)) return;\n        var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n        var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (isValid) controller.$dateValue = parsedDate;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedDate || isNaN(parsedDate.getTime())) {\n          controller.$setValidity('date', false);\n          return;\n        }\n        validateAgainstMinMaxDate(parsedDate);\n        if (options.dateType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n          return formatDate(date, options.modelDateFormat || options.dateFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.dateType === 'number') {\n          return date.getTime();\n        } else if (options.dateType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.dateType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.dateType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelDateFormat);\n        } else if (options.dateType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getDateFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getDateFormattedString());\n      };\n      function getDateFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (datepicker) datepicker.destroy();\n        options = null;\n        datepicker = null;\n      });\n    }\n  };\n} ]).provider('datepickerViews', function() {\n  function split(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  }\n  function mod(n, m) {\n    return (n % m + m) % m;\n  }\n  this.$get = [ '$dateFormatter', '$dateParser', '$sce', function($dateFormatter, $dateParser, $sce) {\n    return function(picker) {\n      var scope = picker.$scope;\n      var options = picker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n      var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n      var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n      var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n      var viewDate = {\n        year: startDate.getFullYear(),\n        month: startDate.getMonth(),\n        date: startDate.getDate()\n      };\n      var views = [ {\n        format: options.dayFormat,\n        split: 7,\n        steps: {\n          month: 1\n        },\n        update: function(date, force) {\n          if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n            viewDate.date = picker.$date.getDate();\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n          var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n          var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n          var firstDateOffset = firstDate.getTimezoneOffset();\n          var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n          if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n          var days = [];\n          var day;\n          for (var i = 0; i < 42; i++) {\n            day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n            days.push({\n              date: day,\n              isToday: day.toDateString() === today,\n              label: formatDate(day, this.format),\n              selected: picker.$date && this.isSelected(day),\n              muted: day.getMonth() !== viewDate.month,\n              disabled: this.isDisabled(day)\n            });\n          }\n          scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n          scope.showLabels = true;\n          scope.labels = weekDaysLabelsHtml;\n          scope.rows = split(days, this.split);\n          scope.isTodayDisabled = this.isDisabled(new Date());\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n        },\n        isDisabled: function(date) {\n          var time = date.getTime();\n          if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n          if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n          if (options.disabledDateRanges) {\n            for (var i = 0; i < options.disabledDateRanges.length; i++) {\n              if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                return true;\n              }\n            }\n          }\n          return false;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualTime = picker.$date.getTime();\n          var newDate;\n          if (evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5); else if (evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5); else if (evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5); else if (evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'month',\n        format: options.monthFormat,\n        split: 4,\n        steps: {\n          year: 1\n        },\n        update: function(date, force) {\n          if (!this.built || date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var months = [];\n          var month;\n          for (var i = 0; i < 12; i++) {\n            month = new Date(viewDate.year, i, 1);\n            months.push({\n              date: month,\n              label: formatDate(month, this.format),\n              selected: picker.$isSelected(month),\n              disabled: this.isDisabled(month)\n            });\n          }\n          scope.title = formatDate(month, options.yearTitleFormat);\n          scope.showLabels = false;\n          scope.rows = split(months, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualMonth = picker.$date.getMonth();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setMonth(actualMonth - 1); else if (evt.keyCode === 38) newDate.setMonth(actualMonth - 4); else if (evt.keyCode === 39) newDate.setMonth(actualMonth + 1); else if (evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'year',\n        format: options.yearFormat,\n        split: 4,\n        steps: {\n          year: 12\n        },\n        update: function(date, force) {\n          if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n          var years = [];\n          var year;\n          for (var i = 0; i < 12; i++) {\n            year = new Date(firstYear + i, 0, 1);\n            years.push({\n              date: year,\n              label: formatDate(year, this.format),\n              selected: picker.$isSelected(year),\n              disabled: this.isDisabled(year)\n            });\n          }\n          scope.title = years[0].label + '-' + years[years.length - 1].label;\n          scope.showLabels = false;\n          scope.rows = split(years, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualYear = picker.$date.getFullYear();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setYear(actualYear - 1); else if (evt.keyCode === 38) newDate.setYear(actualYear - 4); else if (evt.keyCode === 39) newDate.setYear(actualYear + 1); else if (evt.keyCode === 40) newDate.setYear(actualYear + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      } ];\n      return {\n        views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n        viewDate: viewDate\n      };\n    };\n  } ];\n});\n\n// Source: alert/alert.js\n// @BUG: following snippet won't compile correctly\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      templateUrl: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissible: true\n    };\n\n    this.$get = function ($modal, $timeout) {\n\n      function AlertFactory (config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissible]\n        $alert.$scope.dismissible = !!options.dismissible;\n        if (options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if (options.duration) {\n          $alert.show = function () {\n            show();\n            $timeout(function () {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function ($window, $sce, $alert) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsAlert) {\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n\n// Source: module.js\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.rangedatepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.datetimepicker',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.pagination',\n  'mgcrea.ngStrap.sort'\n]);\n\n})(window, document);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      templateUrl: 'tooltip/tooltip.tpl.html',\n      template: '',\n      titleTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true,\n      mouseDownPreventDefault: true,\n      mouseDownStopPropagation: true,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory (element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        var promise = $tooltip.$promise = $bsCompiler.compile(options);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        var nodeName = element[0].nodeName.toLowerCase();\n        if (options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if (options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function (isEnabled) {\n          scope.$$postDigest(function () {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout;\n        var hoverState;\n\n        // Fetch, compile then initialize tooltip\n        var compileData;\n        var tipElement;\n        var tipContainer;\n        var tipScope;\n        promise.then(function (data) {\n          compileData = data;\n          $tooltip.init();\n        });\n\n        $tooltip.init = function () {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if (options.container === 'self') {\n            tipContainer = element;\n          } else if (angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if (options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if (options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              if (options.trigger === 'focus') {\n                element[0].focus();\n              } else {\n                $tooltip.show();\n              }\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function () {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function () {\n            if (hoverState === 'in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function () {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($tooltip);\n          }\n          var parent;\n          var after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if (tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = compileData.link(tipScope, function (clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', right: 'auto', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if (options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if (options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if (options.customClass) tipElement.addClass(options.customClass);\n\n          // Append the element, without any animations.  If we append\n          // using $animate.enter, some of the animations cause the placement\n          // to be off due to the transforms.\n          if (after) {\n            after.after(tipElement);\n          } else {\n            parent.prepend(tipElement);\n          }\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n\n          // Now, apply placement\n          $tooltip.$applyPlacement();\n\n          // Once placed, animate it.\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(tipElement, parent, after).then(enterAnimateCallback);\n          }\n          safeDigest(scope);\n\n          $$rAF(function () {\n            // Once the tooltip is placed and the animation starts, make the tooltip visible\n            if (tipElement) tipElement.css({visibility: 'visible'});\n\n            // Bind events\n            if (options.keyboard) {\n              if (options.trigger !== 'focus') {\n                $tooltip.focus();\n              }\n              bindKeyboardEvents();\n            }\n          });\n\n          if (options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($tooltip);\n          }\n        }\n\n        $tooltip.leave = function () {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function (blur) {\n\n          if (!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($tooltip);\n          }\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(tipElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(tipElement).then(leaveAnimateCallback);\n          }\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if (options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if (options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($tooltip);\n          }\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if (_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function (evt) {\n          if (evt) { evt.preventDefault(); }\n          if ($tooltip.$isShown) {\n            $tooltip.leave();\n          } else {\n            $tooltip.enter();\n          }\n        };\n\n        $tooltip.focus = function () {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function (isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        $tooltip.setViewport = function (viewport) {\n          options.viewport = viewport;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function () {\n          if (!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement;\n          var autoToken = /\\s?auto?\\s?/i;\n          var autoPlace = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition();\n          var tipWidth = tipElement.prop('offsetWidth');\n          var tipHeight = tipElement.prop('offsetHeight');\n\n          // Refresh viewport position\n          $tooltip.$viewport = options.viewport && findElement(options.viewport.selector || options.viewport);\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var viewportPosition = getPosition($tooltip.$viewport);\n\n            if (/bottom/.test(originalPlacement) && elementPosition.bottom + tipHeight > viewportPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (/top/.test(originalPlacement) && elementPosition.top - tipHeight < viewportPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            if (/left/.test(originalPlacement) && elementPosition.left - tipWidth < viewportPosition.left) {\n              placement = placement.replace('left', 'right');\n            } else if (/right/.test(originalPlacement) && elementPosition.right + tipWidth > viewportPosition.width) {\n              placement = placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacement(tipPosition, placement);\n        };\n\n        $tooltip.$onKeyUp = function (evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function (evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function (evt) {\n          if (options.mouseDownPreventDefault) { evt.preventDefault(); }\n          if (options.mouseDownStopPropagation) { evt.stopPropagation(); }\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          if ($tooltip.$isShown) {\n            element[0].focus();\n            element[0].blur();\n          } else {\n            element[0].focus();\n          }\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function (trigger) {\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.on(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n\n              if (nodeName === 'button' && trigger !== 'hover' || (nodeName === 'input')) {\n                element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          });\n        }\n\n        function unbindTriggerEvents () {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if (trigger === 'click' || trigger === 'contextmenu') {\n              element.off(trigger, $tooltip.toggle);\n            } else if (trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              if (nodeName === 'button' && trigger !== 'hover' || (nodeName === 'input')) {\n                element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n              }\n            }\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents () {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents () {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation (event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition ($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n          var isBody = el.tagName === 'BODY';\n\n          var elRect = el.getBoundingClientRect();\n          var rect = {};\n\n          // IE8 has issues with angular.extend and using elRect directly.\n          // By coping the values of elRect into a new object, we can continue to use extend\n          /* eslint-disable guard-for-in */\n          for (var p in elRect) { // eslint-disable-line\n            // DO NOT use hasOwnProperty when inspecting the return of getBoundingClientRect.\n            rect[p] = elRect[p];\n          }\n          /* eslint-enable guard-for-in */\n\n          if (rect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            rect = angular.extend({}, rect, {width: elRect.right - elRect.left, height: elRect.bottom - elRect.top});\n          }\n          var elOffset = isBody ? {top: 0, left: 0} : dimensions.offset(el);\n          var scroll = {scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.prop('scrollTop') || 0};\n          var outerDims = isBody ? {width: document.documentElement.clientWidth, height: $window.innerHeight} : null;\n\n          return angular.extend({}, rect, scroll, outerDims, elOffset);\n        }\n\n        function getCalculatedOffset (placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n            case 'right':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left + position.width\n              };\n              break;\n            case 'bottom':\n              offset = {\n                top: position.top + position.height,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n            case 'left':\n              offset = {\n                top: position.top + position.height / 2 - actualHeight / 2,\n                left: position.left - actualWidth\n              };\n              break;\n            default:\n              offset = {\n                top: position.top - actualHeight,\n                left: position.left + position.width / 2 - actualWidth / 2\n              };\n              break;\n          }\n\n          if (!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if (split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n              case 'left':\n                offset.left = position.left;\n                break;\n              case 'right':\n                offset.left = position.left + position.width - actualWidth;\n                break;\n              default:\n                break;\n            }\n          } else if (split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n              case 'top':\n                offset.top = position.top - actualHeight + position.height;\n                break;\n              case 'bottom':\n                offset.top = position.top;\n                break;\n              default:\n                break;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacement (offset, placement) {\n          var tip = tipElement[0];\n          var width = tip.offsetWidth;\n          var height = tip.offsetHeight;\n\n          // manually read margins because getBoundingClientRect includes difference\n          var marginTop = parseInt(dimensions.css(tip, 'margin-top'), 10);\n          var marginLeft = parseInt(dimensions.css(tip, 'margin-left'), 10);\n\n          // we must check for NaN for ie 8/9\n          if (isNaN(marginTop)) marginTop = 0;\n          if (isNaN(marginLeft)) marginLeft = 0;\n\n          offset.top = offset.top + marginTop;\n          offset.left = offset.left + marginLeft;\n\n          // dimensions setOffset doesn't round pixel values\n          // so we use setOffset directly with our own function\n          dimensions.setOffset(tip, angular.extend({\n            using: function (props) {\n              tipElement.css({\n                top: Math.round(props.top) + 'px',\n                left: Math.round(props.left) + 'px',\n                right: ''\n              });\n            }\n          }, offset), 0);\n\n          // check to see if placing tip in new offset caused the tip to resize itself\n          var actualWidth = tip.offsetWidth;\n          var actualHeight = tip.offsetHeight;\n\n          if (placement === 'top' && actualHeight !== height) {\n            offset.top = offset.top + height - actualHeight;\n          }\n\n          // If it's an exotic placement, exit now instead of\n          // applying a delta and changing the arrow\n          if (/top-left|top-right|bottom-left|bottom-right/.test(placement)) return;\n\n          var delta = getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n\n          if (delta.left) {\n            offset.left += delta.left;\n          } else {\n            offset.top += delta.top;\n          }\n\n          dimensions.setOffset(tip, offset);\n\n          if (/top|right|bottom|left/.test(placement)) {\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n\n            replaceArrow(arrowDelta, tip[arrowOffsetPosition], isVertical);\n          }\n        }\n\n        // @source https://github.com/twbs/bootstrap/blob/v3.3.5/js/tooltip.js#L380\n        function getViewportAdjustedDelta (placement, position, actualWidth, actualHeight) {\n          var delta = {top: 0, left: 0};\n          if (!$tooltip.$viewport) return delta;\n\n          var viewportPadding = options.viewport && options.viewport.padding || 0;\n          var viewportDimensions = getPosition($tooltip.$viewport);\n\n          if (/right|left/.test(placement)) {\n            var topEdgeOffset = position.top - viewportPadding - viewportDimensions.scroll;\n            var bottomEdgeOffset = position.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\n              delta.top = viewportDimensions.top - topEdgeOffset;\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n              delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n            }\n          } else {\n            var leftEdgeOffset = position.left - viewportPadding;\n            var rightEdgeOffset = position.left + viewportPadding + actualWidth;\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n              delta.left = viewportDimensions.left - leftEdgeOffset;\n            } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n              delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n            }\n          }\n\n          return delta;\n        }\n\n        function replaceArrow (delta, dimension, isHorizontal) {\n          var $arrow = findElement('.tooltip-arrow, .arrow', tipElement[0]);\n\n          $arrow.css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n                .css(isHorizontal ? 'top' : 'left', '');\n        }\n\n        function destroyTipElement () {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if ($tooltip.$isShown && tipElement !== null) {\n            if (options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if (options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if (tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if (tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function ($window, $location, $sce, $parse, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        var tooltip;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'titleTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function (newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }\n        });\n\n        attr.$observe('disabled', function (newValue) {\n          if (newValue && tooltip.$isShown) {\n            tooltip.hide();\n          }\n        });\n\n        // Support scope as an object\n\n        if (attr.bsTooltip) {\n          scope.$watch(attr.bsTooltip, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.title = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              $$rAF(function () {\n                if (tooltip) tooltip.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n            if (newValue === true) {\n              tooltip.show();\n            } else {\n              tooltip.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n            if (newValue === false) {\n              tooltip.setEnabled(false);\n            } else {\n              tooltip.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!tooltip || !angular.isDefined(newValue)) return;\n            tooltip.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n\n// NOTICE: This file was forked from the angular-material project (github.com/angular/material)\n// MIT Licensed - Copyright (c) 2014-2015 Google, Inc. http://angularjs.org\n\nangular.module('mgcrea.ngStrap.core', [])\n  .service('$bsCompiler', bsCompilerService);\n\nfunction bsCompilerService ($q, $http, $injector, $compile, $controller, $templateCache) {\n\n  /*\n   * @ngdoc service\n   * @name $bsCompiler\n   * @module material.core\n   * @description\n   * The $bsCompiler service is an abstraction of angular's compiler, that allows the developer\n   * to easily compile an element with a templateUrl, controller, and locals.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * $bsCompiler.compile({\n   *   templateUrl: 'modal.html',\n   *   controller: 'ModalCtrl',\n   *   locals: {\n   *     modal: myModalInstance;\n   *   }\n   * }).then(function(compileData) {\n   *   compileData.element; // modal.html's template in an element\n   *   compileData.link(myScope); //attach controller & scope to element\n   * });\n   * </hljs>\n   */\n\n   /*\n    * @ngdoc method\n    * @name $bsCompiler#compile\n    * @description A helper to compile an HTML template/templateUrl with a given controller,\n    * locals, and scope.\n    * @param {object} options An options object, with the following properties:\n    *\n    *    - `controller` - `{(string=|function()=}` Controller fn that should be associated with\n    *      newly created scope or the name of a registered controller if passed as a string.\n    *    - `controllerAs` - `{string=}` A controller alias name. If present the controller will be\n    *      published to scope under the `controllerAs` name.\n    *    - `template` - `{string=}` An html template as a string.\n    *    - `templateUrl` - `{string=}` A path to an html template.\n    *    - `transformTemplate` - `{function(template)=}` A function which transforms the template after\n    *      it is loaded. It will be given the template string as a parameter, and should\n    *      return a a new string representing the transformed template.\n    *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n    *      be injected into the controller. If any of these dependencies are promises, the compiler\n    *      will wait for them all to be resolved, or if one is rejected before the controller is\n    *      instantiated `compile()` will fail..\n    *      * `key` - `{string}`: a name of a dependency to be injected into the controller.\n    *      * `factory` - `{string|function}`: If `string` then it is an alias for a service.\n    *        Otherwise if function, then it is injected and the return value is treated as the\n    *        dependency. If the result is a promise, it is resolved before its value is\n    *        injected into the controller.\n    *\n    * @returns {object=} promise A promise, which will be resolved with a `compileData` object.\n    * `compileData` has the following properties:\n    *\n    *   - `element` - `{element}`: an uncompiled element matching the provided template.\n    *   - `link` - `{function(scope)}`: A link function, which, when called, will compile\n    *     the element and instantiate the provided controller (if given).\n    *   - `locals` - `{object}`: The locals which will be passed into the controller once `link` is\n    *     called. If `bindToController` is true, they will be coppied to the ctrl instead\n    *   - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n    */\n  this.compile = function (options) {\n\n    if (options.template && /\\.html$/.test(options.template)) {\n      console.warn('Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead.');\n      options.templateUrl = options.template;\n      options.template = '';\n    }\n\n    var templateUrl = options.templateUrl;\n    var template = options.template || '';\n    var controller = options.controller;\n    var controllerAs = options.controllerAs;\n    var resolve = angular.copy(options.resolve || {});\n    var locals = angular.copy(options.locals || {});\n    var transformTemplate = options.transformTemplate || angular.identity;\n    var bindToController = options.bindToController;\n\n    // Take resolve values and invoke them.\n    // Resolves can either be a string (value: 'MyRegisteredAngularConst'),\n    // or an invokable 'factory' of sorts: (value: function ValueGetter($dependency) {})\n    angular.forEach(resolve, function (value, key) {\n      if (angular.isString(value)) {\n        resolve[key] = $injector.get(value);\n      } else {\n        resolve[key] = $injector.invoke(value);\n      }\n    });\n    // Add the locals, which are just straight values to inject\n    // eg locals: { three: 3 }, will inject three into the controller\n    angular.extend(resolve, locals);\n\n    if (template) {\n      resolve.$template = $q.when(template);\n    } else if (templateUrl) {\n      resolve.$template = fetchTemplate(templateUrl);\n    } else {\n      throw new Error('Missing `template` / `templateUrl` option.');\n    }\n\n    if (options.titleTemplate) {\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.titleTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          findElement('[ng-bind=\"title\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    if (options.contentTemplate) {\n      // TODO(mgcrea): deprecate?\n      resolve.$template = $q.all([resolve.$template, fetchTemplate(options.contentTemplate)])\n        .then(function (templates) {\n          var templateEl = angular.element(templates[0]);\n          var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0])\n            .removeAttr('ng-bind')\n            .html(templates[1]);\n          // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n          if (!options.templateUrl) contentEl.next().remove();\n          return templateEl[0].outerHTML;\n        });\n    }\n\n    // Wait for all the resolves to finish if they are promises\n    return $q.all(resolve).then(function (locals) {\n\n      var template = transformTemplate(locals.$template);\n      if (options.html) {\n        template = template.replace(/ng-bind=\"/ig, 'ng-bind-html=\"');\n      }\n      // var element = options.element || angular.element('<div>').html(template.trim()).contents();\n      var element = angular.element('<div>').html(template.trim()).contents();\n      var linkFn = $compile(element);\n\n      // Return a linking function that can be used later when the element is ready\n      return {\n        locals: locals,\n        element: element,\n        link: function link (scope) {\n          locals.$scope = scope;\n\n          // Instantiate controller if it exists, because we have scope\n          if (controller) {\n            var invokeCtrl = $controller(controller, locals, true);\n            if (bindToController) {\n              angular.extend(invokeCtrl.instance, locals);\n            }\n            // Support angular@~1.2 invokeCtrl\n            var ctrl = angular.isObject(invokeCtrl) ? invokeCtrl : invokeCtrl();\n            // See angular-route source for this logic\n            element.data('$ngControllerController', ctrl);\n            element.children().data('$ngControllerController', ctrl);\n\n            if (controllerAs) {\n              scope[controllerAs] = ctrl;\n            }\n          }\n\n          return linkFn.apply(null, arguments);\n        }\n      };\n    });\n\n  };\n\n  function findElement (query, element) {\n    return angular.element((element || document).querySelectorAll(query));\n  }\n\n  var fetchPromises = {};\n  function fetchTemplate (template) {\n    if (fetchPromises[template]) return fetchPromises[template];\n    return (fetchPromises[template] = $http.get(template, {cache: $templateCache})\n      .then(function (res) {\n        return res.data;\n      }));\n  }\n\n}\n","'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory (element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        /* var scope = */$dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) return;\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) index--;\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\n          else if (angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) return;\n          if (options.keyboard && $dropdown.$element) $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick (evt) {\n          if (evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink (scope, element, attr) {\n\n          // Directive options\n          var options = {scope: scope};\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.timepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$timepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    defaultDate: 'auto',\n    prefixClass: 'timepicker',\n    placement: 'bottom-left',\n    templateUrl: 'timepicker/timepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: true,\n    timeType: 'date',\n    timeFormat: 'shortTime',\n    timezone: null,\n    modelTimeFormat: null,\n    autoclose: false,\n    minTime: -Infinity,\n    maxTime: +Infinity,\n    length: 5,\n    hourStep: 1,\n    minuteStep: 5,\n    secondStep: 5,\n    roundDisplay: false,\n    iconUp: 'nox-sort-up',\n    iconDown: 'nox-sort-down',\n    arrowBehavior: 'pager'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) {\n      defaults.lang = $dateFormatter.getDefaultLocale();\n    }\n    function timepickerFactory(element, controller, config) {\n      var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $timepicker.$options;\n      var scope = $timepicker.$scope;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      function floorMinutes(time) {\n        var coeff = 1e3 * 60 * options.minuteStep;\n        return new Date(Math.floor(time.getTime() / coeff) * coeff);\n      }\n      var selectedIndex = 0;\n      var defaultDate = options.roundDisplay ? floorMinutes(new Date()) : new Date();\n      var startDate = controller.$dateValue || defaultDate;\n      var viewDate = {\n        hour: startDate.getHours(),\n        meridian: startDate.getHours() < 12,\n        minute: startDate.getMinutes(),\n        second: startDate.getSeconds(),\n        millisecond: startDate.getMilliseconds()\n      };\n      var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n      var hoursFormat = $dateFormatter.hoursFormat(format);\n      var timeSeparator = $dateFormatter.timeSeparator(format);\n      var minutesFormat = $dateFormatter.minutesFormat(format);\n      var secondsFormat = $dateFormatter.secondsFormat(format);\n      var showSeconds = $dateFormatter.showSeconds(format);\n      var showAM = $dateFormatter.showAM(format);\n      scope.$iconUp = options.iconUp;\n      scope.$iconDown = options.iconDown;\n      scope.$select = function(date, index) {\n        $timepicker.select(date, index);\n      };\n      scope.$moveIndex = function(value, index) {\n        $timepicker.$moveIndex(value, index);\n      };\n      scope.$switchMeridian = function(date) {\n        $timepicker.switchMeridian(date);\n      };\n      $timepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $timepicker.$date = date;\n          angular.extend(viewDate, {\n            hour: date.getHours(),\n            minute: date.getMinutes(),\n            second: date.getSeconds(),\n            millisecond: date.getMilliseconds()\n          });\n          $timepicker.$build();\n        } else if (!$timepicker.$isBuilt) {\n          $timepicker.$build();\n        }\n      };\n      $timepicker.select = function(date, index, keep) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          controller.$dateValue = options.defaultDate === 'today' ? new Date() : new Date(1970, 0, 1);\n        }\n        if (!angular.isDate(date)) date = new Date(date);\n        if (index === 0) controller.$dateValue.setHours(date.getHours()); else if (index === 1) controller.$dateValue.setMinutes(date.getMinutes()); else if (index === 2) controller.$dateValue.setSeconds(date.getSeconds());\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n        if (options.autoclose && !keep) {\n          $timeout(function() {\n            $timepicker.hide(true);\n          });\n        }\n      };\n      $timepicker.switchMeridian = function(date) {\n        if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n          return;\n        }\n        var hours = (date || controller.$dateValue).getHours();\n        controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n        controller.$setViewValue(angular.copy(controller.$dateValue));\n        controller.$render();\n      };\n      $timepicker.$build = function() {\n        var i;\n        var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n        var hours = [];\n        var hour;\n        for (i = 0; i < options.length; i++) {\n          hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n          hours.push({\n            date: hour,\n            label: formatDate(hour, hoursFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n            disabled: $timepicker.$isDisabled(hour, 0)\n          });\n        }\n        var minutes = [];\n        var minute;\n        for (i = 0; i < options.length; i++) {\n          minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n          minutes.push({\n            date: minute,\n            label: formatDate(minute, minutesFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(minute, 1),\n            disabled: $timepicker.$isDisabled(minute, 1)\n          });\n        }\n        var seconds = [];\n        var second;\n        for (i = 0; i < options.length; i++) {\n          second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n          seconds.push({\n            date: second,\n            label: formatDate(second, secondsFormat),\n            selected: $timepicker.$date && $timepicker.$isSelected(second, 2),\n            disabled: $timepicker.$isDisabled(second, 2)\n          });\n        }\n        var rows = [];\n        for (i = 0; i < options.length; i++) {\n          if (showSeconds) {\n            rows.push([ hours[i], minutes[i], seconds[i] ]);\n          } else {\n            rows.push([ hours[i], minutes[i] ]);\n          }\n        }\n        scope.rows = rows;\n        scope.showSeconds = showSeconds;\n        scope.showAM = showAM;\n        scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n        scope.timeSeparator = timeSeparator;\n        $timepicker.$isBuilt = true;\n      };\n      $timepicker.$isSelected = function(date, index) {\n        if (!$timepicker.$date) return false; else if (index === 0) {\n          return date.getHours() === $timepicker.$date.getHours();\n        } else if (index === 1) {\n          return date.getMinutes() === $timepicker.$date.getMinutes();\n        } else if (index === 2) {\n          return date.getSeconds() === $timepicker.$date.getSeconds();\n        }\n      };\n      $timepicker.$isDisabled = function(date, index) {\n        var selectedTime;\n        if (index === 0) {\n          selectedTime = date.getTime() + viewDate.minute * 6e4 + viewDate.second * 1e3;\n        } else if (index === 1) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.second * 1e3;\n        } else if (index === 2) {\n          selectedTime = date.getTime() + viewDate.hour * 36e5 + viewDate.minute * 6e4;\n        }\n        return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n      };\n      scope.$arrowAction = function(value, index) {\n        if (options.arrowBehavior === 'picker') {\n          $timepicker.$setTimeByStep(value, index);\n        } else {\n          $timepicker.$moveIndex(value, index);\n        }\n      };\n      $timepicker.$setTimeByStep = function(value, index) {\n        var newDate = new Date($timepicker.$date || startDate);\n        var hours = newDate.getHours();\n        var minutes = newDate.getMinutes();\n        var seconds = newDate.getSeconds();\n        if (index === 0) {\n          newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n        } else if (index === 1) {\n          newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n        } else if (index === 2) {\n          newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n        }\n        $timepicker.select(newDate, index, true);\n      };\n      $timepicker.$moveIndex = function(value, index) {\n        var targetDate;\n        if (index === 0) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n          angular.extend(viewDate, {\n            hour: targetDate.getHours()\n          });\n        } else if (index === 1) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n          angular.extend(viewDate, {\n            minute: targetDate.getMinutes()\n          });\n        } else if (index === 2) {\n          targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n          angular.extend(viewDate, {\n            second: targetDate.getSeconds()\n          });\n        }\n        $timepicker.$build();\n      };\n      $timepicker.$onMouseDown = function(evt) {\n        if (evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $timepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          $timepicker.hide(true);\n          return;\n        }\n        var newDate = new Date($timepicker.$date);\n        var hours = newDate.getHours();\n        var hoursLength = formatDate(newDate, hoursFormat).length;\n        var minutes = newDate.getMinutes();\n        var minutesLength = formatDate(newDate, minutesFormat).length;\n        var seconds = newDate.getSeconds();\n        var secondsLength = formatDate(newDate, secondsFormat).length;\n        var sepLength = 1;\n        var lateralMove = /(37|39)/.test(evt.keyCode);\n        var count = 2 + showSeconds * 1 + showAM * 1;\n        if (lateralMove) {\n          if (evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1; else if (evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n        }\n        var selectRange = [ 0, hoursLength ];\n        var incr = 0;\n        if (evt.keyCode === 38) incr = -1;\n        if (evt.keyCode === 40) incr = +1;\n        var isSeconds = selectedIndex === 2 && showSeconds;\n        var isMeridian = selectedIndex === 2 && !showSeconds || selectedIndex === 3 && showSeconds;\n        if (selectedIndex === 0) {\n          newDate.setHours(hours + incr * parseInt(options.hourStep, 10));\n          hoursLength = formatDate(newDate, hoursFormat).length;\n          selectRange = [ 0, hoursLength ];\n        } else if (selectedIndex === 1) {\n          newDate.setMinutes(minutes + incr * parseInt(options.minuteStep, 10));\n          minutesLength = formatDate(newDate, minutesFormat).length;\n          selectRange = [ hoursLength + sepLength, minutesLength ];\n        } else if (isSeconds) {\n          newDate.setSeconds(seconds + incr * parseInt(options.secondStep, 10));\n          secondsLength = formatDate(newDate, secondsFormat).length;\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength, secondsLength ];\n        } else if (isMeridian) {\n          if (!lateralMove) $timepicker.switchMeridian();\n          selectRange = [ hoursLength + sepLength + minutesLength + sepLength + (secondsLength + sepLength) * showSeconds, 2 ];\n        }\n        $timepicker.select(newDate, selectedIndex, true);\n        createSelection(selectRange[0], selectRange[1]);\n        parentScope.$digest();\n      };\n      function createSelection(start, length) {\n        var end = start + length;\n        if (element[0].createTextRange) {\n          var selRange = element[0].createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end);\n          selRange.select();\n        } else if (element[0].setSelectionRange) {\n          element[0].setSelectionRange(start, end);\n        } else if (angular.isUndefined(element[0].selectionStart)) {\n          element[0].selectionStart = start;\n          element[0].selectionEnd = end;\n        }\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $timepicker.init;\n      $timepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'time');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $timepicker.destroy;\n      $timepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $timepicker.show;\n      $timepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if ($timepicker.$element) $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if (options.keyboard) {\n            if (element) element.on('keydown', $timepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $timepicker.hide;\n      $timepicker.hide = function(blur) {\n        if (!$timepicker.$isShown) return;\n        if ($timepicker.$element) $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n        if (options.keyboard) {\n          if (element) element.off('keydown', $timepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $timepicker;\n    }\n    timepickerFactory.defaults = defaults;\n    return timepickerFactory;\n  } ];\n}).directive('bsTimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$timepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n  var defaults = $timepicker.defaults;\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'autoclose', 'timeType', 'timeFormat', 'timezone', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'secondStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'roundDisplay', 'id', 'prefixClass', 'prefixEvent', 'defaultDate' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'roundDisplay' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      if (isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n      var timepicker = $timepicker(element, controller, options);\n      options = timepicker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format, timezone) {\n        return $dateFormatter.formatDate(date, format, lang, timezone);\n      };\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!timepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          if (newValue === true) {\n            timepicker.show();\n          } else {\n            timepicker.hide();\n          }\n        });\n      }\n      var dateParser = $dateParser({\n        format: options.timeFormat,\n        lang: lang\n      });\n      angular.forEach([ 'minTime', 'maxTime' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            if (!isNaN(timepicker.$options[key])) timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        }\n      });\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        timepicker.update(controller.$dateValue);\n      }, true);\n      function validateAgainstMinMaxTime(parsedTime) {\n        if (!angular.isDate(parsedTime)) return;\n        var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n        var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (!isValid) {\n          return;\n        }\n        controller.$dateValue = parsedTime;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedTime || isNaN(parsedTime.getTime())) {\n          controller.$setValidity('date', false);\n          return undefined;\n        }\n        validateAgainstMinMaxTime(parsedTime);\n        if (options.timeType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedTime, options.timezone, true);\n          return formatDate(date, options.modelTimeFormat || options.timeFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.timeType === 'number') {\n          return date.getTime();\n        } else if (options.timeType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.timeType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.timeType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n        } else if (options.timeType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getTimeFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getTimeFormattedString());\n      };\n      function getTimeFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (timepicker) timepicker.destroy();\n        options = null;\n        timepicker = null;\n      });\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.tab', []).provider('$tab', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    template: 'tab/tab.tpl.html',\n    navClass: 'nav-tabs',\n    activeClass: 'active'\n  };\n  var controller = this.controller = function($scope, $element, $attrs) {\n    var self = this;\n    self.$options = angular.copy(defaults);\n    angular.forEach([ 'animation', 'navClass', 'activeClass' ], function(key) {\n      if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n    });\n    $scope.$navClass = self.$options.navClass;\n    $scope.$activeClass = self.$options.activeClass;\n    self.$panes = $scope.$panes = [];\n    self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n    self.$push = function(pane) {\n      if (angular.isUndefined(self.$panes.$active)) {\n        $scope.$setActive(pane.name || 0);\n      }\n      self.$panes.push(pane);\n    };\n    self.$remove = function(pane) {\n      var index = self.$panes.indexOf(pane);\n      var active = self.$panes.$active;\n      var activeIndex;\n      if (angular.isString(active)) {\n        activeIndex = self.$panes.map(function(pane) {\n          return pane.name;\n        }).indexOf(active);\n      } else {\n        activeIndex = self.$panes.$active;\n      }\n      self.$panes.splice(index, 1);\n      if (index < activeIndex) {\n        activeIndex--;\n      } else if (index === activeIndex && activeIndex === self.$panes.length) {\n        activeIndex--;\n      }\n      if (activeIndex >= 0 && activeIndex < self.$panes.length) {\n        self.$setActive(self.$panes[activeIndex].name || activeIndex);\n      } else {\n        self.$setActive();\n      }\n    };\n    self.$setActive = $scope.$setActive = function(value) {\n      self.$panes.$active = value;\n      self.$activePaneChangeListeners.forEach(function(fn) {\n        fn();\n      });\n    };\n    self.$isActive = $scope.$isActive = function($pane, $index) {\n      return self.$panes.$active === $pane.name || self.$panes.$active === $index;\n    };\n  };\n  this.$get = function() {\n    var $tab = {};\n    $tab.defaults = defaults;\n    $tab.controller = controller;\n    return $tab;\n  };\n}).directive('bsTabs', [ '$window', '$animate', '$tab', '$parse', function($window, $animate, $tab, $parse) {\n  var defaults = $tab.defaults;\n  return {\n    require: [ '?ngModel', 'bsTabs' ],\n    transclude: true,\n    scope: true,\n    controller: [ '$scope', '$element', '$attrs', $tab.controller ],\n    templateUrl: function(element, attr) {\n      return attr.template || defaults.template;\n    },\n    link: function postLink(scope, element, attrs, controllers) {\n      var ngModelCtrl = controllers[0];\n      var bsTabsCtrl = controllers[1];\n      if (ngModelCtrl) {\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n        });\n        ngModelCtrl.$formatters.push(function(modelValue) {\n          bsTabsCtrl.$setActive(modelValue);\n          return modelValue;\n        });\n      }\n      if (attrs.bsActivePane) {\n        var parsedBsActivePane = $parse(attrs.bsActivePane);\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n        });\n        scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n          bsTabsCtrl.$setActive(newValue);\n        }, true);\n      }\n    }\n  };\n} ]).directive('bsPane', [ '$window', '$animate', '$sce', function($window, $animate, $sce) {\n  return {\n    require: [ '^?ngModel', '^bsTabs' ],\n    scope: true,\n    link: function postLink(scope, element, attrs, controllers) {\n      var bsTabsCtrl = controllers[1];\n      element.addClass('tab-pane');\n      attrs.$observe('title', function(newValue, oldValue) {\n        scope.title = $sce.trustAsHtml(newValue);\n      });\n      scope.name = attrs.name;\n      scope.link = attrs.link ? attrs.link : false;\n      if (bsTabsCtrl.$options.animation) {\n        element.addClass(bsTabsCtrl.$options.animation);\n      }\n      attrs.$observe('disabled', function(newValue, oldValue) {\n        scope.disabled = scope.$eval(newValue);\n      });\n      bsTabsCtrl.$push(scope);\n      scope.$on('$destroy', function() {\n        bsTabsCtrl.$remove(scope);\n      });\n      function render() {\n        var index = bsTabsCtrl.$panes.indexOf(scope);\n        $animate[bsTabsCtrl.$isActive(scope, index) ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n      }\n      bsTabsCtrl.$activePaneChangeListeners.push(function() {\n        render();\n      });\n      render();\n    }\n  };\n} ]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.sort', []).directive('bsSort', [function() {\n  return {\n    scope: true,\n    compile: function (element, attrs) {\n      var list = element[0].querySelectorAll('th');\n      for (var i = 0, len = list.length; i < len; i++) {\n        var item = list[i];\n        item = angular.element(item);\n        var sortable = item.attr('data-sortable');\n        if (sortable && sortable !== 'false') {\n          var dataName = item.attr('data-name');\n          item.append('<div class=\"sorter\"><i class=\"nox-sort-up sort-asc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'asc\\'}\"></i><i class=\"nox-sort-down sort-desc\" ng-class=\"{active: orderBy == \\'' + dataName + '\\' && sortBy == \\'desc\\'}\"></i></div>');\n        }\n      }\n\n      return function postLink (scope, element, attrs) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['onSort'], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        if (angular.isDefined(attrs.totalItems)) {\n          attrs.$observe('totalItems', function (newValue) {\n            options.totalItems = newValue;\n          });\n        }\n        // 初始化排序\n        angular.forEach([ 'orderBy', 'sortBy' ], function(key) {\n          if (angular.isDefined(attrs[key])) {\n            scope[key] = scope.$eval(attrs[key]);\n          }\n        });\n\n        element.on('click', 'th', function (event) {\n          var target = angular.element(event.currentTarget);\n          var sortable = target.attr('data-sortable');\n          if (sortable && sortable !== 'false') {\n            clickColumn(event);\n          }\n        });\n        function clickColumn (event) {\n          if (options.totalItems === -1) {\n            return;\n          }\n          var target = angular.element(event.currentTarget);\n          var dataName = target.attr('data-name');\n          if (dataName === scope.orderBy) {\n            scope.sortBy = scope.sortBy === 'asc' ? 'desc' : 'asc';\n          } else {\n            scope.orderBy = dataName;\n            scope.sortBy = 'desc';\n          }\n          scope.$apply();\n\n          if (angular.isDefined(options.onSort) && angular.isFunction(options.onSort)) {\n            options.onSort(scope.orderBy, scope.sortBy);\n          }\n        }\n      };\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      autoClose: false,\n      search: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"select-arrow\"><i class=\"nox-sort-down\"></i></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$showSearch = options.search; // 单选复选都可以search\n        // scope.$trigger = options.search?true:false;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$searchText = '';\n\n\n        scope.$changeSearchText = function (evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n\n        };\n        scope.$close = function () {\n          scope.$$postDigest(function () {\n            $select.hide(true);\n          });\n        };\n        scope.$searchTextChange = function (evt) {\n          scope.searchText = evt.searchText;\n\n        };\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index, evt);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index, evt) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n          // scope.searchText = '';\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          // Emulate click for mobile devices\n          evt.preventDefault(true);\n          evt.stopPropagation(true);\n\n          if (evt.target.getAttribute('role') === 'search') {\n            evt.target.focus();\n            scope.searchText = '';\n          }\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          } else {\n            // console.log('no touch');\n          }\n\n\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n            if (options.trigger === 'focus') {\n              $select.$element.find('input').on('blur', function () {\n                $select.hide();\n              });\n            }\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function (blur) {\n          $timeout(function () {\n            if (!blur && options.trigger === 'focus' && document.activeElement.getAttribute('role') === 'search') {\n              return;\n            }\n            if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n              scope.$activeIndex = -1;\n            }\n            if (options.search) {\n              // search 清空\n              scope.searchText = '';\n              // return;\n            }\n            $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.off('keydown', $select.$onKeyDown);\n            }\n            _hide(true);\n          });\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id',\n          'sort', 'search', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort', 'search'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // search\n        var dataSearch = element.attr('data-search');\n        if (angular.isDefined(dataSearch)) {\n          if (falseValueRegExp.test(dataSearch)) {\n            options.search = false;\n          } else {\n            options.search = dataSearch;\n            scope.searchText = '';\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  })\n  .filter('searchFilter', function () {\n    return function (collection, keyname, value) {\n      var output = [];\n      angular.forEach(collection, function (item) {\n        // 过滤数组中值与指定值相同的元素\n        if (item[keyname].toLowerCase().indexOf(value.toLowerCase()) > -1) {\n          output.push(item);\n        }\n      });\n      return output;\n    };\n  });\n","/**\n * Created by xiashan on 17/5/12.\n */\n\n'use strict';\n\nangular.module('mgcrea.ngStrap.rangedatepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ])\n  .provider('$rangedatepicker', function () {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'rangedatepicker',\n      placement: 'bottom-left',\n      templateUrl: 'rangedatepicker/rangedatepicker.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      connector: ' / ',\n      dateType: 'date',\n      dateFormat: 'yyyy-MM-dd',\n      timezone: null,\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      compare: true\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'rangedatepickerViews', '$tooltip', '$timeout',\n      function ($window, $document, $rootScope, $sce, $dateFormatter, rangedatepickerViews, $tooltip, $timeout) {\n        var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n        var isTouch = 'createTouch' in $window.document && isNative;\n        if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n        function RangeDatepickerFactory (element, controller, config) {\n          var $rangedatepicker = $tooltip(element, angular.extend({}, defaults, config));\n          var options = $rangedatepicker.$options;\n          var scope = $rangedatepicker.$scope;\n          var pickerViews = rangedatepickerViews($rangedatepicker);\n          $rangedatepicker.$views = pickerViews.views;\n          var viewDate = pickerViews.viewDate;\n          scope.$mode = options.minView;\n          scope.$iconLeft = options.iconLeft;\n          scope.$iconRight = options.iconRight;\n          scope.$compare = options.compare;\n          var $picker = $rangedatepicker.$views[0];\n          scope.rangeList = $picker.rangeList;\n\n          var today = new Date();\n          $rangedatepicker.$today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\n          // 区间\n          scope.ctrl = {\n            rangeType: '',\n            compare: ''\n          };\n\n          scope.$select = function (date, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.select(date, index);\n          };\n          scope.$selectPane = function (value, index) {\n            // compare只支持选择开始时间\n            if (scope.ctrl.compare && index) {\n              return;\n            }\n            $rangedatepicker.$selectPane(value, index);\n          };\n          scope.$selectRange = function (type) {\n            if (type === scope.ctrl.rangeType || scope.ctrl.compare) {\n              return;\n            }\n            $rangedatepicker.$selectRange(type);\n            $rangedatepicker.hide(true);\n          };\n          scope.$toggleCompare = function () {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            // 只变更了勾选compare\n            modelValue.onlyCompare = true;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n          };\n          scope.$closePicker = function () {\n            $rangedatepicker.hide();\n          };\n          scope.$stopPropagation = function (evt) {\n            evt.stopPropagation();\n          };\n\n          $rangedatepicker.update = function (sDate, eDate, force) {\n            if (angular.isDate(sDate) && !isNaN(sDate.getTime()) && angular.isDate(eDate) && !isNaN(eDate.getTime())) {\n              if (!scope.ctrl.compare) {\n                $rangedatepicker.$date = [sDate, eDate];\n              } else {\n                $rangedatepicker.$compareDate = [sDate, eDate];\n              }\n              $picker.update.call($picker, sDate, eDate);\n            } else {\n              $rangedatepicker.$build(!force);\n            }\n          };\n          $rangedatepicker.updateDisabledDates = function (dateRanges) {\n            options.disabledDateRanges = dateRanges;\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], $rangedatepicker.$setDisabledEl);\n            }\n          };\n          $rangedatepicker.select = function (date, index, keep) {\n            var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n            modelValue.compare = scope.ctrl.compare;\n            if (!scope.ctrl.compare) {\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$dateValue[index]) || isNaN(controller.$dateValue[index].getTime())) {\n                  controller.$dateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$dateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.startDate = angular.copy(date);\n              } else {\n                modelValue.endDate = angular.copy(date);\n              }\n            } else {\n              controller.$compareDateValue = !controller.$compareDateValue ? [] : controller.$compareDateValue;\n              if (angular.isDate(date)) {\n                if (!angular.isDate(controller.$compareDateValue[index]) || isNaN(controller.$compareDateValue[index].getTime())) {\n                  controller.$compareDateValue[index] = new Date(date);\n                }\n              } else {\n                controller.$compareDateValue[index] = null;\n              }\n              if (index === 0) {\n                modelValue.compareStartDate = angular.copy(date);\n              } else {\n                modelValue.compareEndDate = angular.copy(date);\n              }\n            }\n            modelValue.onlyCompare = false;\n            controller.$setViewValue(modelValue);\n            controller.$render();\n            if (options.autoclose && !keep) {\n              $timeout(function () {\n                $rangedatepicker.hide(true);\n              });\n            }\n          };\n          $rangedatepicker.$getCompare = function () {\n            return scope.ctrl && scope.ctrl.compare;\n          };\n          $rangedatepicker.$setCompare = function () {\n            scope.ctrl && (scope.ctrl.compare = 'compare');\n          };\n          $rangedatepicker.$build = function (pristine) {\n            if (pristine === true && $picker.built) return;\n            if (pristine === false && !$picker.built) return;\n            $picker.build.call($picker, $rangedatepicker.$date);\n          };\n          $rangedatepicker.$updateSelected = function () {\n            for (var i = 0, l = scope.rows.length; i < l; i++) {\n              angular.forEach(scope.rows[i], updateSelected);\n            }\n          };\n          $rangedatepicker.$isSelected = function (date) {\n            return $picker.isSelected(date);\n          };\n          $rangedatepicker.$setDisabledEl = function (el) {\n            el.disabled = $picker.isDisabled(el.date);\n          };\n          $rangedatepicker.$selectPane = function (value, index) {\n            var steps = $picker.steps;\n            var key = (index === 0) ? 'startDate' : 'endDate';\n            var targetDate = new Date(Date.UTC(viewDate[key].year + (steps.year || 0) * value, viewDate[key].month + (steps.month || 0) * value, 1));\n            angular.extend(viewDate[key], {\n              year: targetDate.getUTCFullYear(),\n              month: targetDate.getUTCMonth(),\n              date: targetDate.getUTCDate()\n            });\n            $rangedatepicker.$build();\n          };\n          $rangedatepicker.$selectRange = function (type) {\n            var cate = type.substr(-1);\n            var value = parseInt(type.substr(0, type.length - 1), 10);\n            var endDate = $rangedatepicker.$today;\n            var startDate;\n            switch (cate) {\n              case 'd':\n                if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value + 1);\n                  if (value === -2) {\n                    endDate = startDate;\n                  }\n                } else {\n                  startDate = endDate;\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value);\n                }\n                break;\n              case 'w':\n                var day = endDate.getDay();\n                if (value <= 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (day * -1 + 1));\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + (day * -1));\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + 7 - day + 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate() + value * 7 + (7 - day));\n                }\n                break;\n              case 'm':\n                if (value === 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n                } else if (value < 0) {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + value, 1);\n                  // 一月一月的看，并不做区间\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                } else {\n                  startDate = new Date(endDate.getFullYear(), endDate.getMonth() + 1, 1);\n                  endDate = new Date(endDate.getFullYear(), endDate.getMonth() + value + 1, 0);\n                }\n                break;\n              default:\n                break;\n            }\n            if (angular.isDate(startDate) && angular.isDate(endDate)) {\n              controller.$dateValue[0] = angular.copy(startDate);\n              controller.$dateValue[1] = angular.copy(endDate);\n              var modelValue = controller.$modelValue ? angular.copy(controller.$modelValue) : {};\n              modelValue.startDate = angular.copy(startDate);\n              modelValue.endDate = angular.copy(endDate);\n              modelValue.onlyCompare = false;\n              controller.$setViewValue(modelValue);\n              controller.$render();\n              scope.ctrl.rangeType = type;\n            }\n          };\n          $rangedatepicker.$onMouseDown = function (evt) {\n            evt.preventDefault(true);\n            evt.stopPropagation(true);\n            var targetEl = angular.element(evt.target);\n            if (isTouch) {\n              if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n                targetEl = targetEl.parent();\n              }\n              targetEl.triggerHandler('click');\n            }\n          };\n          function updateSelected (el) {\n            el.selected = $rangedatepicker.$isSelected(el.date);\n          }\n          function focusElement () {\n            element[0].focus();\n          }\n          var _init = $rangedatepicker.init;\n          $rangedatepicker.init = function () {\n            if (isNative && options.useNative) {\n              element.prop('type', 'date');\n              element.css('-webkit-appearance', 'textfield');\n              return;\n            } else if (isTouch) {\n              element.prop('type', 'text');\n              element.attr('readonly', 'true');\n              element.on('click', focusElement);\n            }\n            _init();\n          };\n          var _destroy = $rangedatepicker.destroy;\n          $rangedatepicker.destroy = function () {\n            if (isNative && options.useNative) {\n              element.off('click', focusElement);\n            }\n            _destroy();\n          };\n          var _show = $rangedatepicker.show;\n          $rangedatepicker.show = function () {\n            // if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n            if (element.attr('disabled')) return;\n            _show();\n            $timeout(function () {\n              if (!$rangedatepicker.$isShown) return;\n              $rangedatepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            }, 0, false);\n          };\n          var _hide = $rangedatepicker.hide;\n          $rangedatepicker.hide = function (blur) {\n            if (!$rangedatepicker.$isShown) return;\n            $rangedatepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $rangedatepicker.$onMouseDown);\n            _hide(blur);\n          };\n          return $rangedatepicker;\n        }\n        RangeDatepickerFactory.defaults = defaults;\n        return RangeDatepickerFactory;\n      }];\n  })\n  .directive('bsRangedatepicker', ['$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$rangedatepicker',\n    function ($window, $parse, $q, $dateFormatter, $dateParser, $rangedatepicker) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      return {\n        restrict: 'EAC',\n        require: 'ngModel',\n        link: function postLink (scope, element, attr, controller) {\n          var options = {\n            scope: scope\n          };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'connector', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'compare'], function (key) {\n            if (angular.isDefined(attr[key])) options[key] = attr[key];\n          });\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container', 'autoclose', 'useNative', 'compare'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n              options[key] = false;\n            }\n          });\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n          var rangedatepicker = $rangedatepicker(element, controller, options);\n          options = rangedatepicker.$options;\n          if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n          var lang = options.lang;\n          var formatDate = function (date, format) {\n            return $dateFormatter.formatDate(date, format, lang);\n          };\n          var dateParser = $dateParser({\n            format: options.dateFormat,\n            lang: lang,\n            strict: options.strictFormat\n          });\n          angular.forEach(['minDate', 'maxDate'], function (key) {\n            if (angular.isDefined(attr[key])) {\n              attr.$observe(key, function (newValue) {\n                rangedatepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n                if (!isNaN(rangedatepicker.$options[key])) {\n                  rangedatepicker.$build(false);\n                }\n                // if (controller.$dateValue) {\n                //   validateAgainstMinMaxDate(controller.$dateValue[0], controller.$dateValue[1]);\n                // }\n              });\n            }\n          });\n          if (angular.isDefined(attr.dateFormat)) {\n            attr.$observe('dateFormat', function (newValue) {\n              rangedatepicker.$options.dateFormat = newValue;\n            });\n          }\n          scope.$watch(attr.ngModel, function (newValue, oldValue) {\n            if (newValue && newValue.onlyCompare) {\n              rangedatepicker.update(null, null, true);\n            } else if (rangedatepicker.$getCompare()) {\n              rangedatepicker.$date = [controller.$dateValue[0], controller.$dateValue[1]];\n              rangedatepicker.update(controller.$compareDateValue[0], controller.$compareDateValue[1]);\n            } else {\n              rangedatepicker.update(controller.$dateValue[0], controller.$dateValue[1]);\n            }\n          }, true);\n\n          function getFormattedDate (modelValue) {\n            var date;\n            if (angular.isDate(modelValue)) {\n              date = modelValue;\n            } else if (options.dateType === 'string') {\n              date = dateParser.parse(modelValue, null, options.modelDateFormat);\n            } else if (options.dateType === 'unix') {\n              date = new Date(modelValue * 1e3);\n            } else {\n              date = new Date(modelValue);\n            }\n            return date;\n          }\n          function validateAgainstMinMaxDate (parsedDate1, parsedDate2) {\n            if (!angular.isDate(parsedDate1) || !angular.isDate(parsedDate2)) {\n              return false;\n            }\n            var isMinValid = isNaN(rangedatepicker.$options.minDate) || parsedDate1.getTime() >= rangedatepicker.$options.minDate;\n            var isMaxValid = isNaN(rangedatepicker.$options.maxDate) || parsedDate2.getTime() <= rangedatepicker.$options.maxDate;\n            var isValid = isMinValid && isMaxValid;\n            controller.$setValidity('date', isValid);\n            controller.$setValidity('min', isMinValid);\n            controller.$setValidity('max', isMaxValid);\n            var compare = rangedatepicker.$getCompare();\n            if (isValid) {\n              if (compare) {\n                controller.$compareDateValue[0] = parsedDate1;\n                controller.$compareDateValue[1] = parsedDate2;\n              } else {\n                controller.$dateValue[0] = parsedDate1;\n                controller.$dateValue[1] = parsedDate2;\n              }\n            }\n            return true;\n          }\n          controller.$parsers.unshift(function (viewValue) {\n            var compare = rangedatepicker.$getCompare();\n            if (!viewValue) {\n              controller.$setValidity('date', true);\n              return null;\n            }\n            if (viewValue.onlyCompare) {\n              viewValue.compare = compare;\n              return viewValue;\n            }\n            var parsedDate1;\n            var parsedDate2;\n            if (compare) {\n              parsedDate1 = dateParser.parse(viewValue.compareStartDate, controller.$compareDateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.compareEndDate, controller.$compareDateValue[1]);\n            } else {\n              parsedDate1 = dateParser.parse(viewValue.startDate, controller.$dateValue[0]);\n              parsedDate2 = dateParser.parse(viewValue.endDate, controller.$dateValue[1]);\n            }\n            if (parsedDate1 && !parsedDate2) {\n              parsedDate2 = angular.copy(parsedDate1);\n            }\n            if (!parsedDate1 && parsedDate2) {\n              parsedDate1 = angular.copy(parsedDate2);\n            }\n            if (!parsedDate1 || isNaN(parsedDate1.getTime()) || !parsedDate2 || isNaN(parsedDate2.getTime())) {\n              controller.$setValidity('date', false);\n              return false;\n            }\n            validateAgainstMinMaxDate(parsedDate1, parsedDate2);\n            var obj = {\n              dateRange: viewValue.dateRange,\n              compare: compare\n            };\n            var skey = '';\n            var ekey = '';\n            if (compare) {\n              // 原对比日期需要显示，因此这里还是要赋值\n              obj.startDate = viewValue.startDate;\n              obj.endDate = viewValue.endDate;\n              skey = 'compareStartDate';\n              ekey = 'compareEndDate';\n            } else {\n              obj.compareStartDate = viewValue.compareStartDate;\n              obj.compareEndDate = viewValue.compareEndDate;\n              skey = 'startDate';\n              ekey = 'endDate';\n            }\n            if (options.dateType === 'string') {\n              obj[skey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate1, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              obj[ekey] = formatDate(dateParser.timezoneOffsetAdjust(parsedDate2, options.timezone, true), options.modelDateFormat || options.dateFormat);\n              return obj;\n            }\n            var date1;\n            var date2;\n            if (compare) {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$compareDateValue[1], options.timezone, true);\n            } else {\n              date1 = dateParser.timezoneOffsetAdjust(controller.$dateValue[0], options.timezone, true);\n              date2 = dateParser.timezoneOffsetAdjust(controller.$dateValue[1], options.timezone, true);\n            }\n            if (options.dateType === 'number') {\n              obj[skey] = date1.getTime();\n              obj[ekey] = date2.getTime();\n            } else if (options.dateType === 'unix') {\n              obj[skey] = date1.getTime() / 1e3;\n              obj[ekey] = date2.getTime() / 1e3;\n            } else if (options.dateType === 'iso') {\n              obj[skey] = date1.toISOString();\n              obj[ekey] = date2.toISOString();\n            } else {\n              obj[skey] = new Date(date1);\n              obj[ekey] = new Date(date2);\n            }\n            return obj;\n          });\n          controller.$formatters.push(function (modelValue) {\n            if (angular.isUndefined(modelValue) || modelValue === null) {\n              return '';\n            }\n            if (modelValue.dateRange) {\n              controller.$dateRange = modelValue.dateRange;\n              controller.$dateValue = !controller.$dateValue ? [] : controller.$dateValue;\n              rangedatepicker.$selectRange(controller.$dateRange);\n            } else {\n              controller.$dateValue = [];\n              controller.$compareDateValue = [];\n              if (modelValue.startDate && modelValue.endDate) {\n                var startDate = getFormattedDate(modelValue.startDate);\n                var endDate = getFormattedDate(modelValue.endDate);\n                controller.$dateValue = [dateParser.timezoneOffsetAdjust(startDate, options.timezone), dateParser.timezoneOffsetAdjust(endDate, options.timezone)];\n              }\n              if (modelValue.compareStartDate && modelValue.compareEndDate) {\n                var compareStartDate = getFormattedDate(modelValue.compareStartDate);\n                var compareEndDate = getFormattedDate(modelValue.compareEndDate);\n                controller.$compareDateValue = [dateParser.timezoneOffsetAdjust(compareStartDate, options.timezone), dateParser.timezoneOffsetAdjust(compareEndDate, options.timezone)];\n                if (modelValue.compare) {\n                  rangedatepicker.$setCompare();\n                }\n              }\n            }\n            return getDateFormattedString();\n          });\n          controller.$render = function () {\n            element.val(getDateFormattedString());\n          };\n          function getDateFormattedString () {\n            if (!controller.$modelValue || !controller.$modelValue.startDate || isNaN(controller.$modelValue.startDate.getTime())) {\n              return '';\n            }\n            var html = formatDate(controller.$modelValue.startDate, options.dateFormat);\n            if (controller.$modelValue.compare && controller.$modelValue.compareStartDate && !isNaN(controller.$modelValue.compareStartDate.getTime())) {\n              html += ' vs ' + formatDate(controller.$modelValue.compareStartDate, options.dateFormat);\n            } else if (!controller.$modelValue.compare && controller.$modelValue.endDate && !isNaN(controller.$modelValue.endDate.getTime())) {\n              html += ' / ' + formatDate(controller.$modelValue.endDate, options.dateFormat);\n            }\n            return html;\n          }\n          scope.$on('$destroy', function () {\n            if (rangedatepicker) rangedatepicker.destroy();\n            options = null;\n            rangedatepicker = null;\n          });\n        }\n      };\n    }])\n  .provider('rangedatepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      return function (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = (picker.$date && picker.$date[0]) || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var endDate = (picker.$date && picker.$date[1]) || (options.endDate ? dateParser.getDateForAttribute('endDate', options.endDate) : new Date());\n        var viewDate = {\n          startDate: {\n            year: startDate.getFullYear(),\n            month: startDate.getMonth(),\n            date: startDate.getDate()\n          },\n          endDate: {\n            year: endDate.getFullYear(),\n            month: endDate.getMonth(),\n            date: endDate.getDate()\n          }\n        };\n\n        var today = new Date();\n        var t = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        var d = today.getDay();\n        var views = [{\n          format: options.dayFormat,\n          split: 7,\n          steps: {\n            month: 1\n          },\n          rangeList: [\n            {name: 'Today', value: '0d', date: {start: t, end: t}},\n            {name: 'Yesterday', value: '-2d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 1)}},\n            {name: 'Last 7 Days', value: '-7d', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6), end: t}},\n            {name: 'Last Week', value: '-1w', date: {start: new Date(t.getFullYear(), t.getMonth(), t.getDate() - 6 - d), end: new Date(t.getFullYear(), t.getMonth(), t.getDate() - d)}},\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}}\n          ],\n          update: function (sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function () {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var item = viewDate[value];\n              var firstDayOfMonth = new Date(item.year, item.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var currentDate = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === currentDate,\n                  label: formatDate(day, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], day),\n                  inRange: that.isInRange(day),\n                  muted: day.getMonth() !== item.month,\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(day, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], day)\n                });\n              }\n              scope.title[index] = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.rows[index] = split(days, that.split);\n            });\n            scope.showLabels = true;\n            scope.labels = weekDaysLabelsHtml;\n            scope.isTodayDisabled = this.isDisabled(new Date());\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              that.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === picker.$date[0].toDateString() && item.date.end.toDateString() === picker.$date[1].toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            this.built = true;\n          },\n          isSelected: function (currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth() &&\n              date.getDate() === currentDate.getDate();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function (date, index) {\n            var time = date.getTime();\n            if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            if (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1]))) {\n              return true;\n            }\n            if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) {\n              return true;\n            }\n            if (options.disabledDateRanges) {\n              for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                  return true;\n                }\n              }\n            }\n            return false;\n          }\n        }, {\n          name: 'month',\n          format: options.monthFormat,\n          split: 4,\n          steps: {\n            year: 1\n          },\n          rangeList: [\n            {name: 'This Month', value: '0m', date: {start: new Date(t.getFullYear(), t.getMonth(), 1), end: t}},\n            {name: 'Last Month', value: '-1m', date: {start: new Date(t.getFullYear(), t.getMonth() - 1, 1), end: new Date(t.getFullYear(), t.getMonth(), 0)}},\n            {name: 'Two Months Ago', value: '-2m', date: {start: new Date(t.getFullYear(), t.getMonth() - 2, 1), end: new Date(t.getFullYear(), t.getMonth() - 1, 0)}}\n          ],\n          update: function(sDate, eDate, force) {\n            viewDate.startDate = {\n              year: sDate.getFullYear(),\n              month: sDate.getMonth(),\n              date: sDate.getDate()\n            };\n            viewDate.endDate = {\n              year: eDate.getFullYear(),\n              month: eDate.getMonth(),\n              date: eDate.getDate()\n            };\n            picker.$build();\n          },\n          build: function() {\n            var that = this;\n            scope.title = [];\n            scope.rows = [];\n            ['startDate', 'endDate'].forEach(function (value, index) {\n              var months = [];\n              var month;\n\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate[value].year, i, 1);\n                months.push({\n                  date: month,\n                  label: formatDate(month, that.format),\n                  selected: picker.$date && picker.$date[index] && (!picker.$getCompare() || (picker.$getCompare() && !index)) && that.isSelected(picker.$date[index], month),\n                  inRange: that.isInRange(month),\n                  disabled: (index === 1 && scope.ctrl.compare) || that.isDisabled(month, index),\n                  compareSelect: index === 0 && scope.ctrl.compare && picker.$compareDate && picker.$compareDate[index] && that.isSelected(picker.$compareDate[index], month)\n                });\n              }\n              scope.title[index] = formatDate(month, options.yearTitleFormat);\n              scope.rows[index] = split(months, that.split);\n            });\n            scope.showLabels = false;\n            // set range\n            if (!scope.ctrl.compare) {\n              var flag = false;\n              that.rangeList.forEach(function (item) {\n                if (item.date.start.toDateString() === picker.$date[0].toDateString() && item.date.end.toDateString() === picker.$date[1].toDateString()) {\n                  scope.ctrl.rangeType = item.value;\n                  flag = true;\n                }\n              });\n              if (!flag) {\n                scope.ctrl.rangeType = '';\n              }\n            }\n            this.built = true;\n\n          },\n          isSelected: function(currentDate, date) {\n            return currentDate &&\n              date.getFullYear() === currentDate.getFullYear() &&\n              date.getMonth() === currentDate.getMonth();\n          },\n          isInRange: function (date) {\n            if (!picker.$date || picker.$getCompare()) {\n              return false;\n            }\n            var minDate = picker.$date[0];\n            var maxDate = picker.$date[1];\n            if (!angular.isDate(minDate) || !angular.isDate(maxDate) || !angular.isDate(date)) {\n              return false;\n            }\n            return (date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime());\n          },\n          isDisabled: function(date, index) {\n            var time = date.getTime();\n            var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n            if (lastDate < options.minDate || date.getTime() > options.maxDate) {\n              return true;\n            }\n            // 开始时间不能选择大于结束时间的事件\n            return (!scope.ctrl.compare && picker.$date && ((index && time < picker.$date[index - 1]) || (time > picker.$date[index + 1])));\n          }\n        }];\n        return {\n          views: Array.prototype.slice.call(views, options.minView, options.minView + 1),\n          viewDate: viewDate\n        };\n      };\n    }];\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      // uncommenting the next two lines will break backwards compatability\n      // prefixClass: 'popover',\n      // prefixEvent: 'popover',\n      container: false,\n      target: false,\n      placement: 'right',\n      templateUrl: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function ($tooltip) {\n\n      function PopoverFactory (element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if (options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function ($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr) {\n\n        var popover;\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent', 'bsEnabled'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'autoClose'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // should not parse target attribute (anchor tag), only data-target #1454\n        var dataTarget = element.attr('data-target');\n        if (angular.isDefined(dataTarget)) {\n          if (falseValueRegExp.test(dataTarget)) {\n            options.target = false;\n          } else {\n            options.target = dataTarget;\n          }\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n              if (angular.isDefined(oldValue)) {\n                requestAnimationFrame(function () {\n                  if (popover) popover.$applyPlacement();\n                });\n              }\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsPopover) {\n          scope.$watch(attr.bsPopover, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n            if (angular.isDefined(oldValue)) {\n              requestAnimationFrame(function () {\n                if (popover) popover.$applyPlacement();\n              });\n            }\n          }, true);\n        }\n\n        // Visibility binding support\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function (newValue, oldValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n            if (newValue === true) {\n              popover.show();\n            } else {\n              popover.hide();\n            }\n          });\n        }\n\n        // Enabled binding support\n        if (attr.bsEnabled) {\n          scope.$watch(attr.bsEnabled, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(popover),?/i);\n            if (newValue === false) {\n              popover.setEnabled(false);\n            } else {\n              popover.setEnabled(true);\n            }\n          });\n        }\n\n        // Viewport support\n        if (attr.viewport) {\n          scope.$watch(attr.viewport, function (newValue) {\n            if (!popover || !angular.isDefined(newValue)) return;\n            popover.setViewport(newValue);\n          });\n        }\n\n        // Initialize popover\n        popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n","'use strict';\n// 1, 2, 3 ... 10\n// 1 ... 8, 9, 10\n// 1 ... 5, 6, 7 ... 10\nangular.module('mgcrea.ngStrap.pagination', [])\n  .provider('$pagination', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      pageClass: 'pagination',\n      pagesLength: 5,\n      itemsPerPage: 20,\n      templateUrl: 'pagination/pagination.tpl.html'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      /**\n       * 计算页数\n       * @returns {number}\n       */\n      this.calculateTotalPages = function(itemsPerPage, totalItems) {\n        var totalPages = itemsPerPage < 1\n          ? 1\n          : Math.ceil(totalItems / itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      this.makePage = function (number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      };\n\n      /**\n       * 获取显示的页码列表\n       * @param currentPage 当前页码\n       * @param totalPages  总页码数\n       * @param pagesLength 总共显示多少页\n       * @returns {Array}\n       */\n      this.getPages = function (currentPage, totalPages, pagesLength) {\n        // 处理传入参数\n        currentPage = currentPage < 1\n          ? 1\n          : ((totalPages > 0 && currentPage > totalPages) ? totalPages : currentPage);\n\n        var pages = [];\n        var i;\n\n        if (totalPages <= pagesLength) {\n          for (i = 1; i <= totalPages; i++){\n            pages.push(this.makePage(i, i, i === currentPage));\n          }\n        }\n        else { // 总页数大于分页长度（此时分为三种情况：1.右边有...2.左边有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (pagesLength - 1) / 2;\n          if (currentPage <= offset) {\n            // 左边没有...\n            for (i = 1; i <= offset + 1; i++){\n              pages.push(this.makePage(i, i, i === currentPage));\n            }\n            pages.push(this.makePage(i + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n          else if (currentPage > totalPages - offset) {\n            pages.push(this.makePage(1, 1, false));\n            pages.push(this.makePage(totalPages - offset - 1, '...', false));\n            for(i = offset; i >= 0; i--){\n              var p = totalPages - i;\n              pages.push(this.makePage(p, p, p === currentPage));\n            }\n          }\n          else {\n            // 最后一种情况，两边都有...\n            pages.push(this.makePage(1, 1, false));\n            // 当前页面显示居中位置\n            var half = Math.ceil(offset / 2);\n            pages.push(this.makePage(currentPage - half - 1, '...', false));\n            for(i = half; i >= 1; i--){\n              pages.push(this.makePage(currentPage - i, currentPage - i, false));\n            }\n            pages.push(this.makePage(currentPage, currentPage, true));\n            for(i = 1; i <= half; i++){\n              pages.push(this.makePage(currentPage + i, currentPage + i, false));\n            }\n            pages.push(this.makePage(currentPage + half + 1, '...', false));\n            pages.push(this.makePage(totalPages, totalPages, false));\n          }\n        }\n        return pages;\n      };\n    };\n    this.$get = function() {\n      var $pagination = {};\n      $pagination.defaults = defaults;\n      $pagination.controller = controller;\n      return $pagination;\n    };\n  })\n  .directive('bsPagination', [ '$window', '$sce', '$parse', '$pagination', function($window, $sce, $parse, $pagination) {\n    var defaults = $pagination.defaults;\n    return {\n      restrict: 'E',\n      require: [ '?ngModel', 'bsPagination' ],\n      scope: true,\n      replace: true,\n      controller: ['$scope', '$element', '$attrs', $pagination.controller],\n      templateUrl: function (element, attr) {\n        return attr.template || defaults.templateUrl;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var bsPaginationCtrl = controllers[1];\n\n        if (!ngModelCtrl) {\n          return;\n        }\n\n        var options = angular.copy(defaults);\n\n        // 这里的参数不需要动态改变\n        angular.forEach(['pageClass', 'pagesLength', 'itemsPerPage'], function (key) {\n          if (angular.isDefined(attrs[key])) {\n            options[key] = scope.$eval(attrs[key]);\n          }\n        });\n        angular.forEach(['onChange'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attrs[bsKey])) {\n            options[key] = scope.$eval(attrs[bsKey]);\n          }\n        });\n        // totalItems需要动态改变，显示loading，no result等\n        if (attrs['totalItems']) {\n          attrs.$observe('totalItems', function (newValue, oldValue) {\n            scope.totalItems = newValue;\n            scope.totalPages = bsPaginationCtrl.calculateTotalPages(options.itemsPerPage, scope.totalItems);\n            ngModelCtrl.$render();\n          });\n        }\n\n        scope.$pageClass = options.pageClass;\n        // pageLength需要是奇数\n        if (options.pagesLength % 2 === 0) {\n          options.pagesLength = options.pagesLength + 1;\n        }\n\n        /**\n         * 将model的值赋给page变量\n         */\n        ngModelCtrl.$render = function () {\n          scope.page = (scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1) > scope.totalPages ? scope.totalPages : scope.page;\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = bsPaginationCtrl.getPages(scope.page, scope.totalPages, options.pagesLength);\n          }\n        };\n\n        /**\n         * 切换页码\n         * @param page\n         * @param evt\n         */\n        scope.selectPage = function (page, evt) {\n          if (evt) {\n            evt.preventDefault();\n          }\n          if (scope.page !== page && page > 0 && page <= scope.totalPages) {\n            if (evt && evt.target) {\n              evt.target.blur();\n            }\n            // 重新分页\n            ngModelCtrl.$setViewValue(page);\n            ngModelCtrl.$render();\n\n            if (angular.isDefined(options.onChange) && angular.isFunction(options.onChange)) {\n              // 通过observe建立双向绑定\n              options.onChange();\n            }\n          }\n        };\n\n        scope.noPrevious = function () {\n          return scope.page === 1;\n        };\n\n        scope.noNext = function () {\n          return scope.page === scope.totalPages;\n        };\n\n        scope.selectPrevious = function (evt) {\n          scope.selectPage(scope.page - 1, evt);\n        };\n\n        scope.selectNext = function (evt) {\n          scope.selectPage(scope.page + 1, evt);\n        };\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.modal', [ 'mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions' ])\n  .provider('$modal', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n    this.$get = [ '$window', '$rootScope', '$bsCompiler', '$animate', '$timeout', '$sce', 'dimensions', function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n      var validSizes = {\n        lg: 'modal-dialog-lg',\n        sm: 'modal-dialog-sm'\n      };\n      function ModalFactory(config) {\n        var $modal = {};\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n        forEach([ 'title', 'content' ], function(key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        $modal.$isShown = scope.$isShown = false;\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n        $modal.init = function() {\n          if (options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n        };\n        $modal.destroy = function() {\n          destroyModalElement();\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n          scope.$destroy();\n        };\n        $modal.show = function() {\n          if ($modal.$isShown) return;\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          }\n          else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n          if (options.backdrop) {\n            setScrollBar();\n          }\n          if (modalElement) {\n            destroyModalElement();\n          }\n          modalScope = $modal.$scope.$new();\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n          if (options.backdrop) {\n            modalElement.css({\n              'z-index': dialogBaseZindex + backdropCount * 20\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + backdropCount * 20\n            });\n            backdropCount++;\n          }\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n        $modal.hide = function() {\n          if (!$modal.$isShown) return;\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n          if (options.backdrop) {\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n        function leaveAnimateCallback() {\n          if (options.backdrop) {\n            resetScrollBar();\n          }\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n        $modal.toggle = function() {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n        $modal.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n        };\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n        function setScrollBar() {\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = 'modal-scrollbar-measure';\n          bodyElement.append(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          bodyElement[0].removeChild(scrollDiv);\n\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          var bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n\n          if (bodyIsOverflowing) bodyElement.css('padding-right', scrollbarWidth + 'px');\n        }\n        function resetScrollBar() {\n          bodyElement.css('padding-right', 0);\n        }\n        return $modal;\n      }\n      function safeDigest(scope) {\n        scope.$$phase || scope.$root && scope.$root.$$phase || scope.$digest();\n      }\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n      return ModalFactory;\n    } ];\n  }).directive('bsModal', [ '$window', '$sce', '$parse', '$modal', function($window, $sce, $parse, $modal) {\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'backdrop', 'keyboard', 'html', 'container' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        angular.forEach([ 'title', 'content' ], function(key) {\n          if (attr[key]) {\n            attr.$observe(key, function(newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function(newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n        var modal = $modal(options);\n        element.on(attr.trigger || 'click', modal.toggle);\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n      }\n    };\n  } ]);\n","'use strict';\n\nif (angular.version.minor < 3 && angular.version.dot < 14) {\n  angular.module('ng')\n\n  .factory('$$rAF', function ($window, $timeout) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported ?\n      function (fn) {\n        var id = requestAnimationFrame(fn);\n        return function () {\n          cancelAnimationFrame(id);\n        };\n      } :\n      function (fn) {\n        var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n        return function () {\n          $timeout.cancel(timer);\n        };\n      };\n\n    raf.supported = rafSupported;\n\n    return raf;\n\n  });\n}\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function () {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = function ($parse, $q) {\n\n      function ParseOptionsFactory (attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match;\n        var displayFn;\n        var valueName;\n        /* eslint-disable no-unused-vars */\n        var keyName;\n        var groupByFn;\n        /* eslint-enable no-unused-vars */\n        var valueFn;\n        var valuesFn;\n\n        $parseOptions.init = function () {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]);\n          valueName = match[4] || match[6];\n          keyName = match[5];\n          groupByFn = $parse(match[3] || '');\n          valueFn = $parse(match[2] ? match[1] : valueName);\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function (scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function (values) {\n            if (!angular.isArray(values)) {\n              values = [];\n            }\n            $parseOptions.$values = values.length ? parseValues(values, scope) : [];\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function (modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues (values, scope) {\n          return values.map(function (match, index) {\n            var locals = {};\n            var label;\n            var value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', function () {\n\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function (element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function (element, prop, extra) {\n      var value;\n      if (element.currentStyle) { // IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function (element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides set equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip\n     * @url http://api.jquery.com/offset/\n     * @param element\n     * @param options\n     * @param i\n     */\n    fn.setOffset = function (element, options, i) {\n      var curPosition;\n      var curLeft;\n      var curCSSTop;\n      var curTop;\n      var curOffset;\n      var curCSSLeft;\n      var calculatePosition;\n      var position = fn.css(element, 'position');\n      var curElem = angular.element(element);\n      var props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === 'static') {\n        element.style.position = 'relative';\n      }\n\n      curOffset = fn.offset(element);\n      curCSSTop = fn.css(element, 'top');\n      curCSSLeft = fn.css(element, 'left');\n      calculatePosition = (position === 'absolute' || position === 'fixed') &&\n                          (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = fn.position(element);\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (angular.isFunction(options)) {\n        options = options.call(element, i, curOffset);\n      }\n\n      if (options.top !== null) {\n        props.top = (options.top - curOffset.top) + curTop;\n      }\n      if (options.left !== null) {\n        props.left = (options.left - curOffset.left) + curLeft;\n      }\n\n      if ('using' in options) {\n        options.using.call(curElem, props);\n      } else {\n        curElem.css({\n          top: props.top + 'px',\n          left: props.left + 'px'\n        });\n      }\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function (element) {\n\n      var offsetParentRect = {top: 0, left: 0};\n      var offsetParentEl;\n      var offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentEl\n        offsetParentEl = offsetParentElement(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentEl, 'html')) {\n          offsetParentRect = fn.offset(offsetParentEl);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentEl, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentEl, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    function offsetParentElement (element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if (nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while (offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    }\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function (element, outer) {\n      var value = element.offsetHeight;\n      if (outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function (element, outer) {\n      var value = element.offsetWidth;\n      if (outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', function ($timeout) {\n  return function (func, wait, immediate) {\n    var timeout = null;\n    return function () {\n      var context = this;\n      var args = arguments;\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if (callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n})\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', function ($timeout) {\n  return function (func, wait, options) {\n    var timeout = null;\n    if (!options) options = {};\n    return function () {\n      var context = this;\n      var args = arguments;\n      if (!timeout) {\n        if (options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later () {\n          timeout = null;\n          if (options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', function ($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate () {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function (value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function (value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function (value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function (value) { this.hours = value; };\n  ParseDate.prototype.getHours = function () { return this.hours; };\n  ParseDate.prototype.setDate = function (value) { this.day = value; };\n  ParseDate.prototype.setMonth = function (value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function (value) { this.year = value; };\n  ParseDate.prototype.fromDate = function (value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function () {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop () {\n  }\n\n  function isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive (array, value) {\n    var len = array.length;\n    var str = value.toString().toLowerCase();\n    for (var i = 0; i < len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = function ($locale, dateFilter) {\n\n    var DateParserFactory = function (config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      /* eslint-disable key-spacing, quote-props */\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}'\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function (value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function (value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function (value) { return this.setMonth(1 * value - 1); },\n        'M'     : function (value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function (value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : function (value) { return (1 * value <= 50 && value.length === 2) ? this.setFullYear(2000 + 1 * value) : this.setFullYear(1 * value); }\n      };\n      /* eslint-enable key-spacing, quote-props */\n\n      var regex;\n      var setMap;\n\n      $dateParser.init = function () {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function (date) {\n        if (angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function (value, baseDate, format, timezone) {\n        // check for date format special names\n        if (format) format = $locale.DATETIME_FORMATS[format] || format;\n        if (angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format, timezone);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if (!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for (var i = 0; i < matches.length - 1; i++) {\n          if (formatSetMap[i]) formatSetMap[i].call(date, matches[i + 1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function (key, value) {\n        var date;\n\n        if (value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if (isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && value.length === 0) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function (key, value) {\n        var time;\n\n        if (value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if (isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && value.length === 0) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function (date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      /* Correct the date for timezone offset.\n      * @param  date  (Date) the date to adjust\n      * @param  timezone  (string) the timezone to adjust for\n      * @param  undo  (boolean) to add or subtract timezone offset\n      * @return  (Date) the corrected date\n      */\n      $dateParser.timezoneOffsetAdjust = function (date, timezone, undo) {\n        if (!date) {\n          return null;\n        }\n        // Right now, only 'UTC' is supported.\n        if (timezone && timezone === 'UTC') {\n          date = new Date(date.getTime());\n          date.setMinutes(date.getMinutes() + (undo ? -1 : 1) * date.getTimezoneOffset());\n        }\n        return date;\n      };\n\n      // Private functions\n\n      function regExpForFormat (format) {\n        // `format` string can contain literal values.\n        // These need to be escaped by surrounding with\n        // single quotes (e.g. `\"h 'in the morning'\"`).\n        // In order to output a single quote, escape it - i.e.,\n        // two single quotes in a sequence (e.g. `\"h 'o''clock'\"`).\n\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseRegex(re);\n      }\n\n      function buildDateAbstractRegex (format) {\n        var escapedFormat = escapeReservedSymbols(format);\n        var escapedLiteralFormat = escapedFormat.replace(/''/g, '\\\\\\'');\n        var literalRegex = /('(?:\\\\'|.)*?')/;\n        var formatParts = escapedLiteralFormat.split(literalRegex);\n        var dateElements = Object.keys(regExpMap);\n        var dateRegexParts = [];\n\n        angular.forEach(formatParts, function (part) {\n          if (isFormatStringLiteral(part)) {\n            part = trimLiteralEscapeChars(part);\n          } else {\n            // Abstract replaces to avoid collisions\n            for (var i = 0; i < dateElements.length; i++) {\n              part = part.split(dateElements[i]).join('${' + i + '}');\n            }\n          }\n          dateRegexParts.push(part);\n        });\n\n        return dateRegexParts.join('');\n      }\n\n      function escapeReservedSymbols (text) {\n        return text.replace(/\\\\/g, '[\\\\\\\\]')\n                   .replace(/-/g, '[-]')\n                   .replace(/\\./g, '[.]')\n                   .replace(/\\*/g, '[*]')\n                   .replace(/\\+/g, '[+]')\n                   .replace(/\\?/g, '[?]')\n                   .replace(/\\$/g, '[$]')\n                   .replace(/\\^/g, '[^]')\n                   .replace(/\\//g, '[/]')\n                   .replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function isFormatStringLiteral (text) {\n        return /^'.*'$/.test(text);\n      }\n\n      function trimLiteralEscapeChars (text) {\n        return text.replace(/^'(.*)'$/, '$1');\n      }\n\n      function buildDateParseRegex (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var re = abstractRegex;\n\n        // Replace abstracted values\n        for (var i = 0; i < dateElements.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[dateElements[i]] + ')');\n        }\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      function setMapForFormat (format) {\n        var re = buildDateAbstractRegex(format);\n        return buildDateParseValuesMap(re);\n      }\n\n      function buildDateParseValuesMap (abstractRegex) {\n        var dateElements = Object.keys(regExpMap);\n        var valuesRegex = new RegExp('\\\\${(\\\\d+)}', 'g');\n        var valuesMatch;\n        var keyIndex;\n        var valueKey;\n        var valueFunction;\n        var valuesFunctionMap = [];\n\n        /* eslint-disable no-cond-assign */\n        while ((valuesMatch = valuesRegex.exec(abstractRegex)) !== null) {\n          keyIndex = valuesMatch[1];\n          valueKey = dateElements[keyIndex];\n          valueFunction = setFnMap[valueKey];\n\n          valuesFunctionMap.push(valueFunction);\n        }\n\n        return valuesFunctionMap;\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  };\n\n});\n","'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n","/**\n * Created by xiashan on 17/12/8.\n */\n'use strict';\n\nangular.module('mgcrea.ngStrap.datetimepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip'])\n  .provider('datetimepickerViews', function () {\n    function split (arr, size) {\n      var arrays = [];\n      while (arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n    function mod (n, m) {\n      return (n % m + m) % m;\n    }\n    this.$get = ['$dateFormatter', '$dateParser', '$sce', function ($dateFormatter, $dateParser, $sce) {\n      function DatetimepickerViewsFactory (picker) {\n        var scope = picker.$scope;\n        var options = picker.$options;\n        var lang = options.lang;\n        var formatDate = function (date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var format = $dateFormatter.getDatetimeFormat(options.dateFormat, lang);\n        var timeSeparator = $dateFormatter.timeSeparator(format);\n        var showSeconds = $dateFormatter.showSeconds(format);\n        scope.$iconUp = options.iconUp;\n        scope.$iconDown = options.iconDown;\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n        var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var viewDate = {\n          year: startDate.getFullYear(),\n          month: startDate.getMonth(),\n          date: startDate.getDate(),\n          hour: startDate.getHours(),\n          minute: startDate.getMinutes(),\n          second: startDate.getSeconds(),\n          millisecond: startDate.getMilliseconds()\n        };\n        var views = [\n          {\n            hourFormat: options.hourFormat,\n            minuteFormat: options.minuteFormat,\n            secondFormat: options.secondFormat,\n            split: 7,\n            steps: {\n              date: 1\n            },\n            update: function (date, force) {\n              if (angular.isDate(date) && !isNaN(date.getTime())) {\n                // picker.$date === date\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate(),\n                  hour: picker.$date.getHours(),\n                  minute: picker.$date.getMinutes(),\n                  second: picker.$date.getSeconds(),\n                  millisecond: picker.$date.getMilliseconds()\n                });\n                picker.$build();\n              } else if (!this.built || force) {\n                picker.$build();\n              }\n            },\n            build: function () {\n              var i;\n              var midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n              var hours = [];\n              var hour;\n              var step;\n              for (i = 0; i < options.length; i++) {\n                // hour = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour - (midIndex - i) * options.hourStep);\n                step = viewDate.hour - (midIndex - i) * options.hourStep;\n                step = step < 0 ? (24 + step) : step;\n                hour = new Date(viewDate.year, viewDate.month, viewDate.date, step, viewDate.minute, viewDate.second);\n                hours.push({\n                  date: hour,\n                  label: formatDate(hour, this.hourFormat),\n                  selected: picker.$date && this.isSelected(hour, 0),\n                  disabled: this.isDisabled(hour, 0)\n                  // selected: $timepicker.$date && $timepicker.$isSelected(hour, 0),\n                  // disabled: $timepicker.$isDisabled(hour, 0)\n                });\n              }\n              var minutes = [];\n              var minute;\n              for (i = 0; i < options.length; i++) {\n                // minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n                step = viewDate.minute - (midIndex - i) * options.minuteStep;\n                step = step < 0 ? (60 + step) : step;\n                minute = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, step, viewDate.second);\n                minutes.push({\n                  date: minute,\n                  label: formatDate(minute, this.minuteFormat),\n                  selected: picker.$date && this.isSelected(minute, 1),\n                  disabled: this.isDisabled(minute, 1)\n                });\n              }\n              var seconds = [];\n              var second;\n              for (i = 0; i < options.length; i++) {\n                // second = new Date(1970, 0, 1, 0, 0, viewDate.second - (midIndex - i) * options.secondStep);\n                step = viewDate.second - (midIndex - i) * options.secondStep;\n                step = step < 0 ? (60 + step) : step;\n                second = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute, step);\n                seconds.push({\n                  date: second,\n                  label: formatDate(second, this.secondFormat),\n                  selected: picker.$date && this.isSelected(second, 2),\n                  disabled: this.isDisabled(second, 2)\n                });\n              }\n              var rows = [];\n              for (i = 0; i < options.length; i++) {\n                if (showSeconds) {\n                  rows.push([hours[i], minutes[i], seconds[i]]);\n                } else {\n                  rows.push([hours[i], minutes[i]]);\n                }\n              }\n              scope.title = formatDate(new Date(viewDate.year, viewDate.month, viewDate.date), options.timeTitleFormat);\n              scope.rows = rows;\n              scope.showSeconds = showSeconds;\n              scope.timeSeparator = timeSeparator;\n              this.built = true;\n            },\n            isSelected: function (date, index) {\n              if (!picker.$date) {\n                return false;\n              } else if (index === 0) {\n                return date.getHours() === picker.$date.getHours();\n              } else if (index === 1) {\n                return date.getMinutes() === picker.$date.getMinutes();\n              } else if (index === 2) {\n                return date.getSeconds() === picker.$date.getSeconds();\n              }\n              return false;\n            },\n            isDisabled: function (date, index) {\n              var time = date.getTime();\n              return options.minDate && angular.isDate(options.minDate) && time < options.minDate.getTime() ||\n                (options.maxDate && angular.isDate(options.maxDate) && time > options.maxDate.getTime());\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n            }\n          },\n          {\n            format: options.dayFormat,\n            split: 7,\n            steps: {\n              month: 1\n            },\n            update: function (date, force) {\n              if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n                viewDate.date = picker.$date.getDate();\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n              var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n              var firstDateOffset = firstDate.getTimezoneOffset();\n              var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n              if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n              var days = [];\n              var day;\n              for (var i = 0; i < 42; i++) {\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({\n                  date: day,\n                  isToday: day.toDateString() === today,\n                  label: formatDate(day, this.format),\n                  selected: picker.$date && this.isSelected(day),\n                  muted: day.getMonth() !== viewDate.month,\n                  disabled: this.isDisabled(day)\n                });\n              }\n              scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.showLabels = true;\n              scope.labels = weekDaysLabelsHtml;\n              scope.rows = split(days, this.split);\n              scope.isTodayDisabled = this.isDisabled(new Date());\n              this.built = true;\n            },\n            isSelected: function (date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n            },\n            isDisabled: function (date) {\n              var time = date.getTime();\n              if (options.minDate && angular.isDate(options.minDate)) {\n                var minDate = new Date(options.minDate.getFullYear(), options.minDate.getMonth(), options.minDate.getDate(), 0, 0, 0);\n                if (time < Date.parse(minDate)) {\n                  return true;\n                }\n              }\n              if (options.maxDate && angular.isDate(options.maxDate)) {\n                var maxDate = new Date(options.maxDate.getFullYear(), options.maxDate.getMonth(), options.maxDate.getDate() + 1, 0, 0, 0);\n                if (time >= Date.parse(maxDate)) {\n                  return true;\n                }\n              }\n              // if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n              if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n              if (options.disabledDateRanges) {\n                for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                  if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualTime = picker.$date.getTime();\n              var newDate;\n              if (evt.keyCode === 37) {\n                newDate = new Date(actualTime - 1 * 864e5);\n              } else if (evt.keyCode === 38) {\n                newDate = new Date(actualTime - 7 * 864e5);\n              } else if (evt.keyCode === 39) {\n                newDate = new Date(actualTime + 1 * 864e5);\n              } else if (evt.keyCode === 40) {\n                newDate = new Date(actualTime + 7 * 864e5);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          },\n          {\n            name: 'month',\n            format: options.monthFormat,\n            split: 4,\n            steps: {\n              year: 1\n            },\n            update: function (date, force) {\n              if (!this.built || date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var months = [];\n              var month;\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate.year, i, 1);\n                months.push({\n                  date: month,\n                  label: formatDate(month, this.format),\n                  selected: picker.$isSelected(month),\n                  disabled: this.isDisabled(month)\n                });\n              }\n              scope.title = formatDate(month, options.yearTitleFormat);\n              scope.showLabels = false;\n              scope.rows = split(months, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n            },\n            isDisabled: function(date) {\n              var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function(evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualMonth = picker.$date.getMonth();\n              var newDate = new Date(picker.$date);\n              if (evt.keyCode === 37) {\n                newDate.setMonth(actualMonth - 1);\n              } else if (evt.keyCode === 38) {\n                newDate.setMonth(actualMonth - 4);\n              } else if (evt.keyCode === 39) {\n                newDate.setMonth(actualMonth + 1);\n              } else if (evt.keyCode === 40) {\n                newDate.setMonth(actualMonth + 4);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          },\n          {\n            name: 'year',\n            format: options.yearFormat,\n            split: 4,\n            steps: {\n              year: 12\n            },\n            update: function (date, force) {\n              if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$build();\n              } else if (date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {\n                  year: picker.$date.getFullYear(),\n                  month: picker.$date.getMonth(),\n                  date: picker.$date.getDate()\n                });\n                picker.$updateSelected();\n              }\n            },\n            build: function () {\n              var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n              var years = [];\n              var year;\n              for (var i = 0; i < 12; i++) {\n                year = new Date(firstYear + i, 0, 1);\n                years.push({\n                  date: year,\n                  label: formatDate(year, this.format),\n                  selected: picker.$isSelected(year),\n                  disabled: this.isDisabled(year)\n                });\n              }\n              scope.title = years[0].label + '-' + years[years.length - 1].label;\n              scope.showLabels = false;\n              scope.rows = split(years, this.split);\n              this.built = true;\n            },\n            isSelected: function (date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n            },\n            isDisabled: function (date) {\n              var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function (evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualYear = picker.$date.getFullYear();\n              var newDate = new Date(picker.$date);\n              if (evt.keyCode === 37) {\n                newDate.setYear(actualYear - 1);\n              } else if (evt.keyCode === 38) {\n                newDate.setYear(actualYear - 4);\n              } else if (evt.keyCode === 39) {\n                newDate.setYear(actualYear + 1);\n              } else if (evt.keyCode === 40) {\n                newDate.setYear(actualYear + 4);\n              }\n              if (!this.isDisabled(newDate)) {\n                picker.select(newDate, true);\n              }\n            }\n          }];\n        return {\n          views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n          viewDate: viewDate\n        };\n      }\n      return DatetimepickerViewsFactory;\n    }];\n  })\n  .provider('$datetimepicker', function() {\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'datepicker',\n      placement: 'bottom-left',\n      templateUrl: 'datetimepicker/datetimepicker.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      useNative: false,\n      dateType: 'date',\n      dateFormat: 'shortDate',\n      timezone: null,\n      modelDateFormat: null,\n      hourFormat: 'HH',\n      minuteFormat: 'mm',\n      secondFormat: 'ss',\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      timeTitleFormat: 'dd MMM',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      startView: 1,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      hasToday: false,\n      hasClear: false,\n      length: 5,\n      hourStep: 1,\n      minuteStep: 5,\n      secondStep: 5,\n      roundDisplay: false,\n      iconUp: 'nox-sort-up',\n      iconDown: 'nox-sort-down',\n      iconLeft: 'nox-sort-left',\n      iconRight: 'nox-sort-right',\n      arrowBehavior: 'pager'\n    };\n    this.$get = ['$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datetimepickerViews', '$tooltip', '$timeout', function ($window, $document, $rootScope, $sce, $dateFormatter, datetimepickerViews, $tooltip, $timeout) {\n      var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n      var isTouch = 'createTouch' in $window.document && isNative;\n      if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n      function DatetimepickerFactory (element, controller, config) {\n        var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n        var parentScope = config.scope;\n        var options = $datepicker.$options;\n        var scope = $datepicker.$scope;\n        if (options.startView) options.startView -= options.minView;\n        var pickerViews = datetimepickerViews($datepicker);\n        $datepicker.$views = pickerViews.views;\n        var viewDate = pickerViews.viewDate;\n        scope.$mode = options.startView;\n        scope.$iconLeft = options.iconLeft;\n        scope.$iconRight = options.iconRight;\n        scope.$hasToday = options.hasToday;\n        scope.$hasClear = options.hasClear;\n        var $picker = $datepicker.$views[scope.$mode];\n        scope.$select = function(date) {\n          $datepicker.select(date);\n        };\n        scope.$selectPane = function(value) {\n          $datepicker.$selectPane(value);\n        };\n        scope.$selectTime = function(date, index) {\n          $datepicker.selectTime(date, index);\n        };\n        scope.$arrowAction = function(value, index) {\n          if (options.arrowBehavior === 'picker') {\n            $datepicker.$setTimeByStep(value, index);\n          } else {\n            $datepicker.$moveIndex(value, index);\n          }\n        };\n        scope.$toggleMode = function() {\n          $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n        };\n        scope.$setToday = function() {\n          if (options.autoclose) {\n            $datepicker.setMode(0);\n            $datepicker.select(new Date());\n          } else {\n            $datepicker.select(new Date(), true);\n          }\n        };\n        scope.$clear = function() {\n          if (options.autoclose) {\n            $datepicker.setMode(0);\n            $datepicker.select(null);\n          } else {\n            $datepicker.select(null, true);\n          }\n        };\n        $datepicker.update = function(date) {\n          if (angular.isDate(date) && !isNaN(date.getTime())) {\n            $datepicker.$date = date;\n            $picker.update.call($picker, date);\n          }\n          $datepicker.$build(true);\n        };\n        $datepicker.updateDisabledDates = function(dateRanges) {\n          options.disabledDateRanges = dateRanges;\n          for (var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n          }\n        };\n        $datepicker.select = function(date, keep) {\n          if (angular.isDate(date)) {\n            if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n              controller.$dateValue = new Date(date);\n            }\n          } else {\n            controller.$dateValue = null;\n          }\n          if (!scope.$mode || keep) {\n            controller.$setViewValue(angular.copy(date));\n            controller.$render();\n            if (options.autoclose && !keep) {\n              $timeout(function() {\n                $datepicker.hide(true);\n              });\n            }\n          } else {\n            angular.extend(viewDate, {\n              year: date.getFullYear(),\n              month: date.getMonth(),\n              date: date.getDate(),\n              hour: date.getHours(),\n              minute: date.getMinutes(),\n              second: date.getSeconds(),\n              millisecond: date.getMilliseconds()\n            });\n            $datepicker.setMode(scope.$mode - 1);\n            $datepicker.$build();\n          }\n        };\n        $datepicker.selectTime = function(date, index, keep) {\n          if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date();\n          }\n          if (!angular.isDate(date)) {\n            date = new Date(date);\n          }\n          controller.$dateValue.setFullYear(date.getFullYear());\n          controller.$dateValue.setMonth(date.getMonth());\n          controller.$dateValue.setDate(date.getDate());\n          if (index === 0) {\n            controller.$dateValue.setHours(date.getHours());\n          } else if (index === 1) {\n            controller.$dateValue.setMinutes(date.getMinutes());\n          } else if (index === 2) {\n            controller.$dateValue.setSeconds(date.getSeconds());\n          }\n          controller.$setViewValue(angular.copy(controller.$dateValue));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              // $datepicker.setMode(options.startView);\n              $datepicker.hide(true);\n            });\n          }\n        };\n        $datepicker.setMode = function(mode) {\n          scope.$mode = mode;\n          $picker = $datepicker.$views[scope.$mode];\n          $datepicker.$build();\n        };\n        $datepicker.$build = function(pristine) {\n          if (pristine === true && $picker.built) return;\n          if (pristine === false && !$picker.built) return;\n          $picker.build.call($picker);\n        };\n        function updateSelected(el) {\n          el.selected = $datepicker.$isSelected(el.date);\n        }\n        $datepicker.$updateSelected = function() {\n          for (var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], updateSelected);\n          }\n        };\n        $datepicker.$isSelected = function(date) {\n          return $picker.isSelected(date);\n        };\n        $datepicker.$setDisabledEl = function(el) {\n          el.disabled = $picker.isDisabled(el.date);\n        };\n        $datepicker.$selectPane = function(value) {\n          var steps = $picker.steps;\n          var targetDate = new Date(Date.UTC(\n            viewDate.year + (steps.year || 0) * value,\n            viewDate.month + (steps.month || 0) * value,\n            steps.date ? (viewDate.date + steps.date * value) : 1\n          ));\n          angular.extend(viewDate, {\n            year: targetDate.getUTCFullYear(),\n            month: targetDate.getUTCMonth(),\n            date: targetDate.getUTCDate()\n          });\n          $datepicker.$build();\n        };\n        $datepicker.$setTimeByStep = function(value, index) {\n          var newDate = new Date($datepicker.$date);\n          var hours = newDate.getHours();\n          var minutes = newDate.getMinutes();\n          var seconds = newDate.getSeconds();\n          if (index === 0) {\n            newDate.setHours(hours - parseInt(options.hourStep, 10) * value);\n          } else if (index === 1) {\n            newDate.setMinutes(minutes - parseInt(options.minuteStep, 10) * value);\n          } else if (index === 2) {\n            newDate.setSeconds(seconds - parseInt(options.secondStep, 10) * value);\n          }\n          $datepicker.selectTime(newDate, index, true);\n        };\n        $datepicker.$moveIndex = function(value, index) {\n          var targetDate;\n          if (index === 0) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour + value * options.length, viewDate.minute, viewDate.second);\n            angular.extend(viewDate, {\n              hour: targetDate.getHours()\n            });\n          } else if (index === 1) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute + value * options.length * options.minuteStep, viewDate.second);\n            angular.extend(viewDate, {\n              minute: targetDate.getMinutes()\n            });\n          } else if (index === 2) {\n            targetDate = new Date(viewDate.year, viewDate.month, viewDate.date, viewDate.hour, viewDate.minute, viewDate.second + value * options.length * options.secondStep);\n            angular.extend(viewDate, {\n              second: targetDate.getSeconds()\n            });\n          }\n          $datepicker.$build();\n        };\n        $datepicker.$onMouseDown = function(evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n              targetEl = targetEl.parent();\n            }\n            targetEl.triggerHandler('click');\n          }\n        };\n        $datepicker.$onKeyDown = function(evt) {\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (evt.keyCode === 13) {\n            if (!scope.$mode) {\n              $datepicker.hide(true);\n            } else {\n              scope.$apply(function() {\n                $datepicker.setMode(scope.$mode - 1);\n              });\n            }\n            return;\n          }\n          $picker.onKeyDown(evt);\n          parentScope.$digest();\n        };\n        function focusElement() {\n          element[0].focus();\n        }\n        var _init = $datepicker.init;\n        $datepicker.init = function() {\n          if (isNative && options.useNative) {\n            element.prop('type', 'date');\n            element.css('-webkit-appearance', 'textfield');\n            return;\n          } else if (isTouch) {\n            element.prop('type', 'text');\n            element.attr('readonly', 'true');\n            element.on('click', focusElement);\n          }\n          _init();\n        };\n        var _destroy = $datepicker.destroy;\n        $datepicker.destroy = function() {\n          if (isNative && options.useNative) {\n            element.off('click', focusElement);\n          }\n          _destroy();\n        };\n        var _show = $datepicker.show;\n        $datepicker.show = function() {\n          if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n          _show();\n          $timeout(function() {\n            if (!$datepicker.$isShown) return;\n            $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $datepicker.$onKeyDown);\n            }\n          }, 0, false);\n        };\n        var _hide = $datepicker.hide;\n        $datepicker.hide = function(blur) {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $datepicker.$onKeyDown);\n          }\n          _hide(blur);\n        };\n        return $datepicker;\n      }\n      DatetimepickerFactory.defaults = defaults;\n      return DatetimepickerFactory;\n    }];\n  })\n  .directive('bsDatetimepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datetimepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datetimepicker) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n        var options = {\n          scope: scope\n        };\n        angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n        angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n        var datepicker = $datetimepicker(element, controller, options);\n        options = datepicker.$options;\n        if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n        var lang = options.lang;\n        var formatDate = function(date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({\n          format: options.dateFormat,\n          lang: lang,\n          strict: options.strictFormat\n        });\n        if (attr.bsShow) {\n          scope.$watch(attr.bsShow, function(newValue, oldValue) {\n            if (!datepicker || !angular.isDefined(newValue)) return;\n            if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n            if (newValue === true) {\n              datepicker.show();\n            } else {\n              datepicker.hide();\n            }\n          });\n        }\n        angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n          if (angular.isDefined(attr[key])) {\n            attr.$observe(key, function(newValue) {\n              datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n              if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n              validateAgainstMinMaxDate(controller.$dateValue);\n            });\n          }\n        });\n        if (angular.isDefined(attr.dateFormat)) {\n          attr.$observe('dateFormat', function(newValue) {\n            datepicker.$options.dateFormat = newValue;\n          });\n        }\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          datepicker.update(controller.$dateValue);\n        }, true);\n        function normalizeDateRanges(ranges) {\n          if (!ranges || !ranges.length) return null;\n          return ranges;\n        }\n        if (angular.isDefined(attr.disabledDates)) {\n          scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n            disabledRanges = normalizeDateRanges(disabledRanges);\n            previousValue = normalizeDateRanges(previousValue);\n            if (disabledRanges) {\n              datepicker.updateDisabledDates(disabledRanges);\n            }\n          });\n        }\n        function validateAgainstMinMaxDate(parsedDate) {\n          if (!angular.isDate(parsedDate)) return;\n          var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n          var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n          var isValid = isMinValid && isMaxValid;\n          controller.$setValidity('date', isValid);\n          controller.$setValidity('min', isMinValid);\n          controller.$setValidity('max', isMaxValid);\n          if (isValid) controller.$dateValue = parsedDate;\n        }\n        controller.$parsers.unshift(function(viewValue) {\n          var date;\n          if (!viewValue) {\n            controller.$setValidity('date', true);\n            return null;\n          }\n          var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n          if (!parsedDate || isNaN(parsedDate.getTime())) {\n            controller.$setValidity('date', false);\n            return;\n          }\n          validateAgainstMinMaxDate(parsedDate);\n          if (options.dateType === 'string') {\n            date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n            return formatDate(date, options.modelDateFormat || options.dateFormat);\n          }\n          date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n          if (options.dateType === 'number') {\n            return date.getTime();\n          } else if (options.dateType === 'unix') {\n            return date.getTime() / 1e3;\n          } else if (options.dateType === 'iso') {\n            return date.toISOString();\n          }\n          return new Date(date);\n        });\n        controller.$formatters.push(function(modelValue) {\n          var date;\n          if (angular.isUndefined(modelValue) || modelValue === null) {\n            date = NaN;\n          } else if (angular.isDate(modelValue)) {\n            date = modelValue;\n          } else if (options.dateType === 'string') {\n            date = dateParser.parse(modelValue, null, options.modelDateFormat);\n          } else if (options.dateType === 'unix') {\n            date = new Date(modelValue * 1e3);\n          } else {\n            date = new Date(modelValue);\n          }\n          controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n          return getDateFormattedString();\n        });\n        controller.$render = function() {\n          element.val(getDateFormattedString());\n        };\n        function getDateFormattedString() {\n          return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n        }\n        scope.$on('$destroy', function() {\n          if (datepicker) datepicker.destroy();\n          options = null;\n          datepicker = null;\n        });\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.datepicker', [ 'mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.helpers.dateFormatter', 'mgcrea.ngStrap.tooltip' ]).provider('$datepicker', function() {\n  var defaults = this.defaults = {\n    animation: 'am-fade',\n    prefixClass: 'datepicker',\n    placement: 'bottom-left',\n    templateUrl: 'datepicker/datepicker.tpl.html',\n    trigger: 'focus',\n    container: false,\n    keyboard: true,\n    html: false,\n    delay: 0,\n    useNative: false,\n    dateType: 'date',\n    dateFormat: 'shortDate',\n    timezone: null,\n    modelDateFormat: null,\n    dayFormat: 'dd',\n    monthFormat: 'MMM',\n    yearFormat: 'yyyy',\n    monthTitleFormat: 'MMMM yyyy',\n    yearTitleFormat: 'yyyy',\n    strictFormat: false,\n    autoclose: false,\n    minDate: -Infinity,\n    maxDate: +Infinity,\n    startView: 0,\n    minView: 0,\n    startWeek: 0,\n    daysOfWeekDisabled: '',\n    hasToday: false,\n    hasClear: false,\n    iconLeft: 'nox-sort-left',\n    iconRight: 'nox-sort-right'\n  };\n  this.$get = [ '$window', '$document', '$rootScope', '$sce', '$dateFormatter', 'datepickerViews', '$tooltip', '$timeout', function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n    var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n    var isTouch = 'createTouch' in $window.document && isNative;\n    if (!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n    function DatepickerFactory(element, controller, config) {\n      var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n      var parentScope = config.scope;\n      var options = $datepicker.$options;\n      var scope = $datepicker.$scope;\n      if (options.startView) options.startView -= options.minView;\n      var pickerViews = datepickerViews($datepicker);\n      $datepicker.$views = pickerViews.views;\n      var viewDate = pickerViews.viewDate;\n      scope.$mode = options.startView;\n      scope.$iconLeft = options.iconLeft;\n      scope.$iconRight = options.iconRight;\n      scope.$hasToday = options.hasToday;\n      scope.$hasClear = options.hasClear;\n      var $picker = $datepicker.$views[scope.$mode];\n      scope.$select = function(date) {\n        $datepicker.select(date);\n      };\n      scope.$selectPane = function(value) {\n        $datepicker.$selectPane(value);\n      };\n      scope.$toggleMode = function() {\n        $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n      };\n      scope.$setToday = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(new Date());\n        } else {\n          $datepicker.select(new Date(), true);\n        }\n      };\n      scope.$clear = function() {\n        if (options.autoclose) {\n          $datepicker.setMode(0);\n          $datepicker.select(null);\n        } else {\n          $datepicker.select(null, true);\n        }\n      };\n      $datepicker.update = function(date) {\n        if (angular.isDate(date) && !isNaN(date.getTime())) {\n          $datepicker.$date = date;\n          $picker.update.call($picker, date);\n        }\n        $datepicker.$build(true);\n      };\n      $datepicker.updateDisabledDates = function(dateRanges) {\n        options.disabledDateRanges = dateRanges;\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n        }\n      };\n      $datepicker.select = function(date, keep) {\n        if (angular.isDate(date)) {\n          if (!angular.isDate(controller.$dateValue) || isNaN(controller.$dateValue.getTime())) {\n            controller.$dateValue = new Date(date);\n          }\n        } else {\n          controller.$dateValue = null;\n        }\n        if (!scope.$mode || keep) {\n          controller.$setViewValue(angular.copy(date));\n          controller.$render();\n          if (options.autoclose && !keep) {\n            $timeout(function() {\n              $datepicker.hide(true);\n            });\n          }\n        } else {\n          angular.extend(viewDate, {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            date: date.getDate()\n          });\n          $datepicker.setMode(scope.$mode - 1);\n          $datepicker.$build();\n        }\n      };\n      $datepicker.setMode = function(mode) {\n        scope.$mode = mode;\n        $picker = $datepicker.$views[scope.$mode];\n        $datepicker.$build();\n      };\n      $datepicker.$build = function(pristine) {\n        if (pristine === true && $picker.built) return;\n        if (pristine === false && !$picker.built) return;\n        $picker.build.call($picker);\n      };\n      $datepicker.$updateSelected = function() {\n        for (var i = 0, l = scope.rows.length; i < l; i++) {\n          angular.forEach(scope.rows[i], updateSelected);\n        }\n      };\n      $datepicker.$isSelected = function(date) {\n        return $picker.isSelected(date);\n      };\n      $datepicker.$setDisabledEl = function(el) {\n        el.disabled = $picker.isDisabled(el.date);\n      };\n      $datepicker.$selectPane = function(value) {\n        var steps = $picker.steps;\n        var targetDate = new Date(Date.UTC(viewDate.year + (steps.year || 0) * value, viewDate.month + (steps.month || 0) * value, 1));\n        angular.extend(viewDate, {\n          year: targetDate.getUTCFullYear(),\n          month: targetDate.getUTCMonth(),\n          date: targetDate.getUTCDate()\n        });\n        $datepicker.$build();\n      };\n      $datepicker.$onMouseDown = function(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isTouch) {\n          var targetEl = angular.element(evt.target);\n          if (targetEl[0].nodeName.toLowerCase() !== 'button') {\n            targetEl = targetEl.parent();\n          }\n          targetEl.triggerHandler('click');\n        }\n      };\n      $datepicker.$onKeyDown = function(evt) {\n        if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.keyCode === 13) {\n          if (!scope.$mode) {\n            $datepicker.hide(true);\n          } else {\n            scope.$apply(function() {\n              $datepicker.setMode(scope.$mode - 1);\n            });\n          }\n          return;\n        }\n        $picker.onKeyDown(evt);\n        parentScope.$digest();\n      };\n      function updateSelected(el) {\n        el.selected = $datepicker.$isSelected(el.date);\n      }\n      function focusElement() {\n        element[0].focus();\n      }\n      var _init = $datepicker.init;\n      $datepicker.init = function() {\n        if (isNative && options.useNative) {\n          element.prop('type', 'date');\n          element.css('-webkit-appearance', 'textfield');\n          return;\n        } else if (isTouch) {\n          element.prop('type', 'text');\n          element.attr('readonly', 'true');\n          element.on('click', focusElement);\n        }\n        _init();\n      };\n      var _destroy = $datepicker.destroy;\n      $datepicker.destroy = function() {\n        if (isNative && options.useNative) {\n          element.off('click', focusElement);\n        }\n        _destroy();\n      };\n      var _show = $datepicker.show;\n      $datepicker.show = function() {\n        if (!isTouch && element.attr('readonly') || element.attr('disabled')) return;\n        _show();\n        $timeout(function() {\n          if (!$datepicker.$isShown) return;\n          $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if (options.keyboard) {\n            element.on('keydown', $datepicker.$onKeyDown);\n          }\n        }, 0, false);\n      };\n      var _hide = $datepicker.hide;\n      $datepicker.hide = function(blur) {\n        if (!$datepicker.$isShown) return;\n        $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n        if (options.keyboard) {\n          element.off('keydown', $datepicker.$onKeyDown);\n        }\n        _hide(blur);\n      };\n      return $datepicker;\n    }\n    DatepickerFactory.defaults = defaults;\n    return DatepickerFactory;\n  } ];\n}).directive('bsDatepicker', [ '$window', '$parse', '$q', '$dateFormatter', '$dateParser', '$datepicker', function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n  var isNative = /(ip[ao]d|iphone|android)/gi.test($window.navigator.userAgent);\n  return {\n    restrict: 'EAC',\n    require: 'ngModel',\n    link: function postLink(scope, element, attr, controller) {\n      var options = {\n        scope: scope\n      };\n      angular.forEach([ 'template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'autoclose', 'dateType', 'dateFormat', 'timezone', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id', 'prefixClass', 'prefixEvent', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key])) options[key] = attr[key];\n      });\n      var falseValueRegExp = /^(false|0|)$/i;\n      angular.forEach([ 'html', 'container', 'autoclose', 'useNative', 'hasToday', 'hasClear' ], function(key) {\n        if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n          options[key] = false;\n        }\n      });\n      angular.forEach([ 'onBeforeShow', 'onShow', 'onBeforeHide', 'onHide' ], function(key) {\n        var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n        if (angular.isDefined(attr[bsKey])) {\n          options[key] = scope.$eval(attr[bsKey]);\n        }\n      });\n      var datepicker = $datepicker(element, controller, options);\n      options = datepicker.$options;\n      if (isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      if (attr.bsShow) {\n        scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if (!datepicker || !angular.isDefined(newValue)) return;\n          if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          if (newValue === true) {\n            datepicker.show();\n          } else {\n            datepicker.hide();\n          }\n        });\n      }\n      angular.forEach([ 'minDate', 'maxDate' ], function(key) {\n        if (angular.isDefined(attr[key])) {\n          attr.$observe(key, function(newValue) {\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            if (!isNaN(datepicker.$options[key])) datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        }\n      });\n      if (angular.isDefined(attr.dateFormat)) {\n        attr.$observe('dateFormat', function(newValue) {\n          datepicker.$options.dateFormat = newValue;\n        });\n      }\n      scope.$watch(attr.ngModel, function(newValue, oldValue) {\n        datepicker.update(controller.$dateValue);\n      }, true);\n      function normalizeDateRanges(ranges) {\n        if (!ranges || !ranges.length) return null;\n        return ranges;\n      }\n      if (angular.isDefined(attr.disabledDates)) {\n        scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n          disabledRanges = normalizeDateRanges(disabledRanges);\n          previousValue = normalizeDateRanges(previousValue);\n          if (disabledRanges) {\n            datepicker.updateDisabledDates(disabledRanges);\n          }\n        });\n      }\n      function validateAgainstMinMaxDate(parsedDate) {\n        if (!angular.isDate(parsedDate)) return;\n        var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n        var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n        var isValid = isMinValid && isMaxValid;\n        controller.$setValidity('date', isValid);\n        controller.$setValidity('min', isMinValid);\n        controller.$setValidity('max', isMaxValid);\n        if (isValid) controller.$dateValue = parsedDate;\n      }\n      controller.$parsers.unshift(function(viewValue) {\n        var date;\n        if (!viewValue) {\n          controller.$setValidity('date', true);\n          return null;\n        }\n        var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n        if (!parsedDate || isNaN(parsedDate.getTime())) {\n          controller.$setValidity('date', false);\n          return;\n        }\n        validateAgainstMinMaxDate(parsedDate);\n        if (options.dateType === 'string') {\n          date = dateParser.timezoneOffsetAdjust(parsedDate, options.timezone, true);\n          return formatDate(date, options.modelDateFormat || options.dateFormat);\n        }\n        date = dateParser.timezoneOffsetAdjust(controller.$dateValue, options.timezone, true);\n        if (options.dateType === 'number') {\n          return date.getTime();\n        } else if (options.dateType === 'unix') {\n          return date.getTime() / 1e3;\n        } else if (options.dateType === 'iso') {\n          return date.toISOString();\n        }\n        return new Date(date);\n      });\n      controller.$formatters.push(function(modelValue) {\n        var date;\n        if (angular.isUndefined(modelValue) || modelValue === null) {\n          date = NaN;\n        } else if (angular.isDate(modelValue)) {\n          date = modelValue;\n        } else if (options.dateType === 'string') {\n          date = dateParser.parse(modelValue, null, options.modelDateFormat);\n        } else if (options.dateType === 'unix') {\n          date = new Date(modelValue * 1e3);\n        } else {\n          date = new Date(modelValue);\n        }\n        controller.$dateValue = dateParser.timezoneOffsetAdjust(date, options.timezone);\n        return getDateFormattedString();\n      });\n      controller.$render = function() {\n        element.val(getDateFormattedString());\n      };\n      function getDateFormattedString() {\n        return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n      }\n      scope.$on('$destroy', function() {\n        if (datepicker) datepicker.destroy();\n        options = null;\n        datepicker = null;\n      });\n    }\n  };\n} ]).provider('datepickerViews', function() {\n  function split(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  }\n  function mod(n, m) {\n    return (n % m + m) % m;\n  }\n  this.$get = [ '$dateFormatter', '$dateParser', '$sce', function($dateFormatter, $dateParser, $sce) {\n    return function(picker) {\n      var scope = picker.$scope;\n      var options = picker.$options;\n      var lang = options.lang;\n      var formatDate = function(date, format) {\n        return $dateFormatter.formatDate(date, format, lang);\n      };\n      var dateParser = $dateParser({\n        format: options.dateFormat,\n        lang: lang,\n        strict: options.strictFormat\n      });\n      var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n      var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n      var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n      var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n      var viewDate = {\n        year: startDate.getFullYear(),\n        month: startDate.getMonth(),\n        date: startDate.getDate()\n      };\n      var views = [ {\n        format: options.dayFormat,\n        split: 7,\n        steps: {\n          month: 1\n        },\n        update: function(date, force) {\n          if (!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getDate() !== viewDate.date || date.getDate() === 1) {\n            viewDate.date = picker.$date.getDate();\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1);\n          var firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n          var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5);\n          var firstDateOffset = firstDate.getTimezoneOffset();\n          var today = dateParser.timezoneOffsetAdjust(new Date(), options.timezone).toDateString();\n          if (firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 6e4);\n          var days = [];\n          var day;\n          for (var i = 0; i < 42; i++) {\n            day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n            days.push({\n              date: day,\n              isToday: day.toDateString() === today,\n              label: formatDate(day, this.format),\n              selected: picker.$date && this.isSelected(day),\n              muted: day.getMonth() !== viewDate.month,\n              disabled: this.isDisabled(day)\n            });\n          }\n          scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n          scope.showLabels = true;\n          scope.labels = weekDaysLabelsHtml;\n          scope.rows = split(days, this.split);\n          scope.isTodayDisabled = this.isDisabled(new Date());\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n        },\n        isDisabled: function(date) {\n          var time = date.getTime();\n          if (time < Date.parse(options.minDate) || time > Date.parse(options.maxDate)) return true;\n          if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n          if (options.disabledDateRanges) {\n            for (var i = 0; i < options.disabledDateRanges.length; i++) {\n              if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                return true;\n              }\n            }\n          }\n          return false;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualTime = picker.$date.getTime();\n          var newDate;\n          if (evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5); else if (evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5); else if (evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5); else if (evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'month',\n        format: options.monthFormat,\n        split: 4,\n        steps: {\n          year: 1\n        },\n        update: function(date, force) {\n          if (!this.built || date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getMonth() !== viewDate.month) {\n            angular.extend(viewDate, {\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var months = [];\n          var month;\n          for (var i = 0; i < 12; i++) {\n            month = new Date(viewDate.year, i, 1);\n            months.push({\n              date: month,\n              label: formatDate(month, this.format),\n              selected: picker.$isSelected(month),\n              disabled: this.isDisabled(month)\n            });\n          }\n          scope.title = formatDate(month, options.yearTitleFormat);\n          scope.showLabels = false;\n          scope.rows = split(months, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualMonth = picker.$date.getMonth();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setMonth(actualMonth - 1); else if (evt.keyCode === 38) newDate.setMonth(actualMonth - 4); else if (evt.keyCode === 39) newDate.setMonth(actualMonth + 1); else if (evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      }, {\n        name: 'year',\n        format: options.yearFormat,\n        split: 4,\n        steps: {\n          year: 12\n        },\n        update: function(date, force) {\n          if (!this.built || force || parseInt(date.getFullYear() / 20, 10) !== parseInt(viewDate.year / 20, 10)) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$build();\n          } else if (date.getFullYear() !== viewDate.year) {\n            angular.extend(viewDate, {\n              year: picker.$date.getFullYear(),\n              month: picker.$date.getMonth(),\n              date: picker.$date.getDate()\n            });\n            picker.$updateSelected();\n          }\n        },\n        build: function() {\n          var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n          var years = [];\n          var year;\n          for (var i = 0; i < 12; i++) {\n            year = new Date(firstYear + i, 0, 1);\n            years.push({\n              date: year,\n              label: formatDate(year, this.format),\n              selected: picker.$isSelected(year),\n              disabled: this.isDisabled(year)\n            });\n          }\n          scope.title = years[0].label + '-' + years[years.length - 1].label;\n          scope.showLabels = false;\n          scope.rows = split(years, this.split);\n          this.built = true;\n        },\n        isSelected: function(date) {\n          return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n        },\n        isDisabled: function(date) {\n          var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n          return lastDate < options.minDate || date.getTime() > options.maxDate;\n        },\n        onKeyDown: function(evt) {\n          if (!picker.$date) {\n            return;\n          }\n          var actualYear = picker.$date.getFullYear();\n          var newDate = new Date(picker.$date);\n          if (evt.keyCode === 37) newDate.setYear(actualYear - 1); else if (evt.keyCode === 38) newDate.setYear(actualYear - 4); else if (evt.keyCode === 39) newDate.setYear(actualYear + 1); else if (evt.keyCode === 40) newDate.setYear(actualYear + 4);\n          if (!this.isDisabled(newDate)) picker.select(newDate, true);\n        }\n      } ];\n      return {\n        views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n        viewDate: viewDate\n      };\n    };\n  } ];\n});\n","'use strict';\n\n// @BUG: following snippet won't compile correctly\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      templateUrl: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissible: true\n    };\n\n    this.$get = function ($modal, $timeout) {\n\n      function AlertFactory (config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissible]\n        $alert.$scope.dismissible = !!options.dismissible;\n        if (options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if (options.duration) {\n          $alert.show = function () {\n            show();\n            $timeout(function () {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function ($window, $sce, $alert) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissible'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')) {\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsAlert) {\n          scope.$watch(attr.bsAlert, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n","\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.rangedatepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.datetimepicker',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.pagination',\n  'mgcrea.ngStrap.sort'\n]);\n"],"sourceRoot":"/source/"}